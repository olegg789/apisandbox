{"version":3,"sources":["js/services/_functions.js","js/store/router/reducers.js","js/store/vk/reducers.js","js/store/formData/reducers.js","js/store/reducers.js","js/store/vk/actionTypes.js","js/store/router/actionTypes.js","js/services/VK.js","js/store/formData/actionTypes.js","js/store/router/actions.js","infoMethod.js","functions.js","js/panels/home/base.js","js/panels/home/placeholder.js","infoMethodBridge.js","js/panels/bridge/base.js","js/panels/settings/base.js","js/components/modals/HomeBotsListModal.js","js/components/modals/viewResponseAPIModal.js","js/components/modals/viewResponseGetToken.js","js/panels/Intro.js","App.js","index.js"],"names":["getActivePanel","view","panel","store","getState","router","activePanel","panelsHistory","length","initialState","activeStory","activeView","storiesHistory","viewsHistory","activeModals","modalHistory","popouts","scrollPosition","accessToken","undefined","colorScheme","activeTab","componentScroll","forms","combineReducers","vkui","state","arguments","action","type","Object","objectSpread","payload","defineProperty","component","tab","x","y","element","document","getElementById","getElementsByClassName","scrollLeft","scrollTop","View","Panel","window","history","pushState","viewIndexInHistory","indexOf","splice","concat","toConsumableArray","VKConnect","send","then","data","catch","error","pageYOffset","story","initial_panel","firstPanel","shift","firstView","scrollTo","smoothScrollToTop","c","documentElement","body","requestAnimationFrame","setView","setPanel","setStory","popoutsData","viewModalsHistory","activeModal","push","pop","panelsHistoryNew","status","popout","id","modalsHistory","formData","form","setPage","goBack","openPopout","closePopout","openModal","closeModal","infoMethod","title","methods","description","access_rights","params","name","is_required","sleep","ms","Promise","resolve","setTimeout","groups","value","label","HomePanelBase","props","_this","classCallCheck","this","_super","call","section","infoMethods","infMethod","responseAPI","use_method","disabledButtonMethod","textButtonMethod","AccessToken","selectedGroups","snackbar","onChange","bind","assertThisInitialized","setState","param","_callee","e","index","_this$setState","_this$setState3","_e$currentTarget","arrInfoMethods","arr","regenerator_default","a","wrap","_context","prev","next","currentTarget","map","el","t0","console","log","stop","_callee2","_context2","bridge","text","JSON","stringify","_callee3","scopes","response","_this2","_context3","react_default","createElement","dist","app_id","scope","join","sent","access_token","layout","onClose","onActionClick","getToken","before","size","style","background","cancel","fill","width","height","t1","_callee4","params1","_this3","_context4","renderjson","set_show_to_level","method","appendChild","_this4","_this$state","groupsChipsProps","options","placeholder","searchable","top","renderOption","_ref","option","restProps","objectWithoutProperties","_ref2","Fragment","help_outline","textWrap","whiteSpace","className","bottom","maxLength","inputMode","actionCheckbox","mode","ChipsSelect","assign","showSelected","closeAfterSelect","renderChip","_ref3","rest","icon","stretched","onClick","executeMethod","disabled","header","copy","React","Component","mapDispatchToProps","connect","HomePanelPlaceholder","_this$props","left","shadow","favorite_outline","smartphone_outline","messages_outline","href","share_outline","user_outline","target","users_3_outline","src","HomePanelBridge","infoMethodBridge","responseBridge","_index","currentCount","totalCount","HomePanelSettings","isDesktop","Platform","URL","location","searchParams","get","scheme","message","attachments","arrow_up_circle_outline","book_outline","key_outline","like_outline","bug_outline","HomeBotsListModal","platform","changeScheme","IOS","_24_cancel","right","dismiss","settlingHeight","activeEffectDelay","settings_outline","moon_outline","sun_outline","withPlatform","ViewResponseAPIModal","textButton","disabledButton","inp","innerHTML","ViewResponseGetToken","responseToken","Intro","slideIndex","key","dispatch","vertical","align","bullets","isDraggable","gesture_outline","car_outline","setUserSeenIntro","App","hasHeader","lastAndroidBackAction","appScheme","subscribe","detail","getAppScheme","unsubscribe","VKCOM","onpopstate","timeNow","Date","prevProps","prevState","snapshot","pageScrollPosition","scroll","_this$props2","homeModals","modals_HomeBotsListModal","viewResponseAPIModal","viewResponseGetToken","isWebView","separator","justifyContent","animate","spaced","maxWidth","tabbar","selected","modal","onSwipeBack","base","bridge_base","settings_base","panels_Intro","fixed","bindActionCreators","createStore","rootReducer","composeWithDevTools","applyMiddleware","thunk","keys","ReactDOM","render","react_redux_es","src_App","startApp"],"mappings":"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","file":"static/js/main.eaf5346e.chunk.js","sourcesContent":["import {store} from \"../../index\";\r\n\r\nexport const smoothScrollToTop = () => {\r\n    const c = document.documentElement.scrollTop || document.body.scrollTop;\r\n\r\n    if (c > 30) {\r\n        return;\r\n    }\r\n\r\n    if (c > 0) {\r\n        window.requestAnimationFrame(smoothScrollToTop);\r\n        window.scrollTo(0, c - c / 8);\r\n    }\r\n};\r\n\r\nexport const restoreScrollPosition = () => {\r\n    let scrolls = store.getState().vkui.componentScroll;\r\n\r\n    Object.keys(scrolls).forEach((component) => {\r\n        let componentData = scrolls[component];\r\n\r\n        let element = document.getElementById(component);\r\n\r\n        if (element) {\r\n            element = element.getElementsByClassName(\"HorizontalScroll__in\")[0];\r\n\r\n            element.scrollLeft = componentData.x;\r\n            element.scrollTop = componentData.y;\r\n        }\r\n    });\r\n};\r\n\r\nexport const getActivePanel = (view) => {\r\n    let panel = store.getState().router.activePanel;\r\n\r\n    let panelsHistory = store.getState().router.panelsHistory;\r\n    if (typeof panelsHistory[view] !== \"undefined\") {\r\n        panel = panelsHistory[view][panelsHistory[view].length - 1];\r\n    }\r\n\r\n    return panel;\r\n};\r\n","import {\r\n    SET_PAGE,\r\n    GO_BACK,\r\n    OPEN_POPOUT,\r\n    CLOSE_POPOUT,\r\n    OPEN_MODAL,\r\n    CLOSE_MODAL,\r\n    SET_STORY\r\n} from './actionTypes';\r\n\r\nimport * as VK from \"../../services/VK\";\r\nimport {smoothScrollToTop} from \"../../services/_functions\";\r\n\r\nconst initialState = {\r\n    activeStory: null,\r\n    activeView: null,\r\n    activePanel: null,\r\n\r\n    storiesHistory: [],\r\n    viewsHistory: [],\r\n    panelsHistory: [],\r\n\r\n    activeModals: [],\r\n    modalHistory: [],\r\n    popouts: [],\r\n\r\n    scrollPosition: []\r\n};\r\n\r\nexport const routerReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case SET_PAGE: {\r\n            let View = action.payload.view;\r\n            let Panel = action.payload.panel;\r\n\r\n            window.history.pushState(null, null);\r\n\r\n            let panelsHistory = state.panelsHistory[View] || [];\r\n            let viewsHistory = state.viewsHistory[state.activeStory] || [];\r\n\r\n            const viewIndexInHistory = viewsHistory.indexOf(View);\r\n\r\n            if (viewIndexInHistory !== -1) {\r\n                viewsHistory.splice(viewIndexInHistory, 1);\r\n            }\r\n\r\n            if (panelsHistory.indexOf(Panel) === -1) {\r\n                panelsHistory = [...panelsHistory, Panel];\r\n            }\r\n\r\n            if (panelsHistory.length > 1) {\r\n                VK.swipeBackOn();\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                activeView: View,\r\n                activePanel: Panel,\r\n\r\n                panelsHistory: {\r\n                    ...state.panelsHistory,\r\n                    [View]: panelsHistory,\r\n                },\r\n                viewsHistory: {\r\n                    ...state.viewsHistory,\r\n                    [state.activeStory]: [...viewsHistory, View]\r\n                },\r\n                scrollPosition: {\r\n                    ...state.scrollPosition,\r\n                    [state.activeStory + \"_\" + state.activeView + \"_\" + state.activePanel]: window.pageYOffset\r\n                }\r\n            };\r\n        }\r\n\r\n        case SET_STORY: {\r\n            window.history.pushState(null, null);\r\n\r\n            let viewsHistory = state.viewsHistory[action.payload.story] || [action.payload.story];\r\n\r\n            let storiesHistory = state.storiesHistory;\r\n            let activeView = viewsHistory[viewsHistory.length - 1];\r\n            let panelsHistory = state.panelsHistory[activeView] || [action.payload.initial_panel];\r\n            let activePanel = panelsHistory[panelsHistory.length - 1];\r\n\r\n            if (action.payload.story === state.activeStory) {\r\n                if (panelsHistory.length > 1) {\r\n                    let firstPanel = panelsHistory.shift();\r\n                    panelsHistory = [firstPanel];\r\n\r\n                    activePanel = panelsHistory[panelsHistory.length - 1];\r\n                } else if (viewsHistory.length > 1) {\r\n                    let firstView = viewsHistory.shift();\r\n                    viewsHistory = [firstView];\r\n\r\n                    activeView = viewsHistory[viewsHistory.length - 1];\r\n                    panelsHistory = state.panelsHistory[activeView];\r\n                    activePanel = panelsHistory[panelsHistory.length - 1];\r\n                }\r\n            }\r\n\r\n            if (action.payload.story === state.activeStory && panelsHistory.length === 1 && window.pageYOffset > 0) {\r\n                window.scrollTo(0, 30);\r\n\r\n                smoothScrollToTop();\r\n            }\r\n\r\n            const storiesIndexInHistory = storiesHistory.indexOf(action.payload.story);\r\n\r\n            if (storiesIndexInHistory === -1 || (storiesHistory[0] === action.payload.story && storiesHistory[storiesHistory.length - 1] !== action.payload.story)) {\r\n                storiesHistory = [...storiesHistory, action.payload.story];\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                activeStory: action.payload.story,\r\n                activeView: activeView,\r\n                activePanel: activePanel,\r\n\r\n                storiesHistory: storiesHistory,\r\n                viewsHistory: {\r\n                    ...state.viewsHistory,\r\n                    [activeView]: viewsHistory\r\n                },\r\n                panelsHistory: {\r\n                    ...state.panelsHistory,\r\n                    [activeView]: panelsHistory\r\n                },\r\n\r\n                scrollPosition: {\r\n                    ...state.scrollPosition,\r\n                    [state.activeStory + \"_\" + state.activeView + \"_\" + state.activePanel]: window.pageYOffset\r\n                }\r\n            };\r\n        }\r\n\r\n        case GO_BACK: {\r\n            let setView = state.activeView;\r\n            let setPanel = state.activePanel;\r\n            let setStory = state.activeStory;\r\n\r\n            let popoutsData = state.popouts;\r\n\r\n            if (popoutsData[setView]) {\r\n                popoutsData[setView] = null;\r\n\r\n                return {\r\n                    ...state,\r\n                    popouts: {\r\n                        ...state.popouts, popoutsData\r\n                    }\r\n                };\r\n            }\r\n\r\n            let viewModalsHistory = state.modalHistory[setView];\r\n\r\n            if (viewModalsHistory !== undefined && viewModalsHistory.length !== 0) {\r\n                let activeModal = viewModalsHistory[viewModalsHistory.length - 2] || null;\r\n\r\n                if (activeModal === null) {\r\n                    viewModalsHistory = [];\r\n                } else if (viewModalsHistory.indexOf(activeModal) !== -1) {\r\n                    viewModalsHistory = viewModalsHistory.splice(0, viewModalsHistory.indexOf(activeModal) + 1);\r\n                } else {\r\n                    viewModalsHistory.push(activeModal);\r\n                }\r\n\r\n                return {\r\n                    ...state,\r\n                    activeModals: {\r\n                        ...state.activeModals,\r\n                        [setView]: activeModal\r\n                    },\r\n                    modalHistory: {\r\n                        ...state.modalHistory,\r\n                        [setView]: viewModalsHistory\r\n                    }\r\n                };\r\n            }\r\n\r\n            let panelsHistory = state.panelsHistory[setView] || [];\r\n            let viewsHistory = state.viewsHistory[state.activeStory] || [];\r\n            let storiesHistory = state.storiesHistory;\r\n\r\n            if (panelsHistory.length > 1) {\r\n                panelsHistory.pop();\r\n\r\n                setPanel = panelsHistory[panelsHistory.length - 1];\r\n            } else if (viewsHistory.length > 1) {\r\n                viewsHistory.pop();\r\n\r\n                setView = viewsHistory[viewsHistory.length - 1];\r\n                let panelsHistoryNew = state.panelsHistory[setView];\r\n\r\n                setPanel = panelsHistoryNew[panelsHistoryNew.length - 1];\r\n            } else if (storiesHistory.length > 1) {\r\n                storiesHistory.pop();\r\n\r\n                setStory = storiesHistory[storiesHistory.length - 1];\r\n                setView = state.viewsHistory[setStory][state.viewsHistory[setStory].length - 1];\r\n\r\n                let panelsHistoryNew = state.panelsHistory[setView];\r\n\r\n                if (panelsHistoryNew.length > 1) {\r\n                    setPanel = panelsHistoryNew[panelsHistoryNew.length - 1];\r\n                } else {\r\n                    setPanel = panelsHistoryNew[0];\r\n                }\r\n            } else {\r\n                VK.closeApp();\r\n            }\r\n\r\n            if (panelsHistory.length === 1) {\r\n                VK.swipeBackOff();\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                activeView: setView,\r\n                activePanel: setPanel,\r\n                activeStory: setStory,\r\n\r\n                viewsHistory: {\r\n                    ...state.viewsHistory,\r\n                    [state.activeView]: viewsHistory\r\n                },\r\n                panelsHistory: {\r\n                    ...state.panelsHistory,\r\n                    [state.activeView]: panelsHistory\r\n                }\r\n            };\r\n        }\r\n\r\n        case OPEN_POPOUT: {\r\n            window.history.pushState(null, null);\r\n\r\n            return {\r\n                ...state,\r\n                popouts: {\r\n                    ...state.popouts,\r\n                    [state.activeView]: action.payload.popout\r\n                }\r\n            };\r\n        }\r\n\r\n        case CLOSE_POPOUT: {\r\n            return {\r\n                ...state,\r\n                popouts: {\r\n                    ...state.popouts,\r\n                    [state.activeView]: null\r\n                }\r\n            };\r\n        }\r\n\r\n        case OPEN_MODAL: {\r\n            window.history.pushState(null, null);\r\n\r\n            let activeModal = action.payload.id || null;\r\n            let modalsHistory = state.modalHistory[state.activeView] ? [...state.modalHistory[state.activeView]] : [];\r\n\r\n            if (activeModal === null) {\r\n                modalsHistory = [];\r\n            } else if (modalsHistory.indexOf(activeModal) !== -1) {\r\n                modalsHistory = modalsHistory.splice(0, modalsHistory.indexOf(activeModal) + 1);\r\n            } else {\r\n                modalsHistory.push(activeModal);\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                activeModals: {\r\n                    ...state.activeModals,\r\n                    [state.activeView]: activeModal\r\n                },\r\n                modalHistory: {\r\n                    ...state.modalHistory,\r\n                    [state.activeView]: modalsHistory\r\n                }\r\n            };\r\n        }\r\n\r\n        case CLOSE_MODAL: {\r\n            let activeModal = state.modalHistory[state.activeView][state.modalHistory[state.activeView].length - 2] || null;\r\n            let modalsHistory = state.modalHistory[state.activeView] ? [...state.modalHistory[state.activeView]] : [];\r\n\r\n            if (activeModal === null) {\r\n                modalsHistory = [];\r\n            } else if (modalsHistory.indexOf(activeModal) !== -1) {\r\n                modalsHistory = modalsHistory.splice(0, modalsHistory.indexOf(activeModal) + 1);\r\n            } else {\r\n                modalsHistory.push(activeModal);\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                activeModals: {\r\n                    ...state.activeModals,\r\n                    [state.activeView]: activeModal\r\n                },\r\n                modalHistory: {\r\n                    ...state.modalHistory,\r\n                    [state.activeView]: modalsHistory\r\n                }\r\n            };\r\n        }\r\n\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n};\r\n","import {\r\n\r\n    SET_ACTIVE_TAB,\r\n    SET_COLOR_SCHEME,\r\n    SET_SCROLL_POSITION,\r\n    SET_SCROLL_POSITION_BY_ID\r\n} from './actionTypes';\r\n\r\nconst initialState = {\r\n    accessToken: undefined,\r\n    colorScheme: 'client_light',\r\n\r\n    activeTab: [],\r\n    componentScroll: []\r\n};\r\n\r\nexport const vkuiReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case SET_COLOR_SCHEME: {\r\n            return {\r\n                ...state,\r\n                colorScheme: action.payload,\r\n            };\r\n        }\r\n\r\n        case SET_ACTIVE_TAB: {\r\n            return {\r\n                ...state,\r\n                activeTab: {\r\n                    ...state.activeTab,\r\n                    [action.payload.component]: action.payload.tab\r\n                },\r\n            };\r\n        }\r\n\r\n        case SET_SCROLL_POSITION: {\r\n            return {\r\n                ...state,\r\n                componentScroll: {\r\n                    ...state.componentScroll,\r\n                    [action.payload.component]: {\r\n                        x: action.payload.x,\r\n                        y: action.payload.y\r\n                    }\r\n                },\r\n            };\r\n        }\r\n\r\n        case SET_SCROLL_POSITION_BY_ID: {\r\n            let element = document.getElementById(action.payload.component).getElementsByClassName(\"HorizontalScroll__in\")[0];\r\n\r\n            let x = element.scrollLeft;\r\n            let y = element.scrollTop;\r\n\r\n            return {\r\n                ...state,\r\n                componentScroll: {\r\n                    ...state.componentScroll,\r\n                    [action.payload.component]: {\r\n                        x: x,\r\n                        y: y\r\n                    }\r\n                },\r\n            };\r\n        }\r\n\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n};","import {SET_FORM_DATA} from './actionTypes';\r\n\r\nconst initialState = {\r\n    forms: []\r\n};\r\n\r\nexport const formDataReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case SET_FORM_DATA: {\r\n            return {\r\n                ...state,\r\n                forms: {\r\n                    ...state.forms,\r\n                    [action.payload.form]: action.payload.data\r\n                }\r\n            };\r\n        }\r\n\r\n        default: {\r\n            return state;\r\n        }\r\n\r\n    }\r\n\r\n};","import {combineReducers} from \"redux\";\r\nimport {routerReducer} from './router/reducers';\r\nimport {vkuiReducer} from './vk/reducers';\r\nimport {formDataReducer} from \"./formData/reducers\";\r\n\r\nexport default combineReducers({\r\n    vkui: vkuiReducer,\r\n    router: routerReducer,\r\n    formData: formDataReducer\r\n});","export const SET_COLOR_SCHEME = 'SET_COLOR_SCHEME';\r\nexport const SET_ACTIVE_TAB = 'SET_ACTIVE_TAB';\r\nexport const SET_SCROLL_POSITION = 'SET_SCROLL_POSITION';\r\nexport const SET_SCROLL_POSITION_BY_ID = 'SET_SCROLL_POSITION_BY_ID';","export const SET_PAGE = 'SET_PAGE';\r\nexport const SET_STORY = 'SET_STORY';\r\nexport const GO_BACK = 'GO_BACK';\r\nexport const OPEN_POPOUT = 'OPEN_POPOUT';\r\nexport const CLOSE_POPOUT = 'CLOSE_POPOUT';\r\nexport const OPEN_MODAL = 'OPEN_MODAL';\r\nexport const CLOSE_MODAL = 'CLOSE_MODAL';","import VKConnect from \"@vkontakte/vk-connect\";\r\n\r\nimport {setColorScheme} from \"../store/vk/actions\";\r\nimport { store } from '../../index';\r\n\r\nexport const initApp = () => (dispatch) => {\r\n    const VKConnectCallback = (e) => {\r\n        if (e.detail.type === 'VKWebAppUpdateConfig') {\r\n            if(store.getState().vkui.colorScheme !== e.detail.data.scheme) {\r\n                dispatch(setColorScheme(e.detail.data.scheme));\r\n            }\r\n        }\r\n    };\r\n\r\n    VKConnect.subscribe(VKConnectCallback);\r\n    return VKConnect.send('VKWebAppInit', {}).then(data => {\r\n        return data;\r\n    }).catch(error => {\r\n        return error;\r\n    });\r\n};\r\n\r\nexport const closeApp = () => {\r\n    return VKConnect.send(\"VKWebAppClose\", {\r\n        \"status\": \"success\"\r\n    }).then(data => {\r\n        return data;\r\n    }).catch(error => {\r\n        return error;\r\n    });\r\n};\r\n\r\nexport const swipeBackOn = () => {\r\n    return VKConnect.send(\"VKWebAppEnableSwipeBack\", {}).then(data => {\r\n        return data;\r\n    }).catch(error => {\r\n        return error;\r\n    });\r\n};\r\n\r\nexport const swipeBackOff = () => {\r\n    return VKConnect.send(\"VKWebAppDisableSwipeBack\", {}).then(data => {\r\n        return data;\r\n    }).catch(error => {\r\n        return error;\r\n    });\r\n};","export const SET_FORM_DATA = 'SAVE_FORM_DATA';","import {SET_PAGE, SET_STORY, GO_BACK, OPEN_POPOUT, CLOSE_POPOUT, OPEN_MODAL, CLOSE_MODAL} from './actionTypes';\r\n\r\nexport const setStory = (story, initial_panel) => (\r\n    {\r\n        type: SET_STORY,\r\n        payload: {\r\n            story: story,\r\n            initial_panel: initial_panel,\r\n        }\r\n    }\r\n);\r\n\r\nexport const setPage = (view, panel) => (\r\n    {\r\n        type: SET_PAGE,\r\n        payload: {\r\n            view: view,\r\n            panel: panel\r\n        }\r\n    }\r\n);\r\n\r\nexport const goBack = () => (\r\n    {\r\n        type: GO_BACK\r\n    }\r\n);\r\n\r\nexport const openPopout = (popout) => (\r\n    {\r\n        type: OPEN_POPOUT,\r\n        payload: {\r\n            popout: popout\r\n        }\r\n    }\r\n);\r\n\r\nexport const closePopout = () => (\r\n    {\r\n        type: CLOSE_POPOUT\r\n    }\r\n);\r\n\r\nexport const openModal = (id) => (\r\n    {\r\n        type: OPEN_MODAL,\r\n        payload: {\r\n            id\r\n        }\r\n    }\r\n);\r\n\r\nexport const closeModal = () => (\r\n    {\r\n        type: CLOSE_MODAL\r\n    }\r\n);\r\n","export let infoMethod = [\r\n  {\r\n    \"title\": \"Account\",\r\n    \"methods\": [\r\n      {\r\n        \"title\": \"account.getActiveOffers\",\r\n        \"description\": \"Возвращает список активных рекламных предложений (офферов), выполнив которые, пользователь сможет получить соответствующее количество голосов на свой счёт внутри приложения.\",\r\n        \"access_rights\": [],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"offset\",\r\n            \"description\": \"смещение, необходимое для выборки определенного подмножества офферов.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"count\",\r\n            \"description\": \"количество офферов, которое необходимо получить\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"account.getAppPermissions\",\r\n        \"description\": \"Получает настройки текущего пользователя в данном приложении.\",\r\n        \"access_rights\": [],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"user_id\",\r\n            \"description\": \"\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"user_id\",\r\n            \"description\": \"\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": true\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"account.getCounters\",\r\n        \"description\": \"Возвращает ненулевые значения счетчиков пользователя.\",\r\n        \"access_rights\": [],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"filter\",\r\n            \"description\": \"Cчетчики, информацию о которых нужно вернуть. Может включать следующие значения:\\n* `friends` — новые заявки в друзья;\\n* `friends_suggestions` — предлагаемые друзья;\\n* `messages` — новые сообщения;\\n* `photos` — новые отметки на фотографиях;\\n* `videos` — новые отметки на видеозаписях;\\n* `gifts` — подарки;\\n* `events` — события;\\n* `groups` — сообщества;\\n* `notifications` — ответы;\\n* `sdk` — запросы в мобильных играх;\\n* `app_requests` — уведомления от приложений.\\n* `friends_recommendations` — рекомендации друзей.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"user_id\",\r\n            \"description\": \"\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"account.setNameInMenu\",\r\n        \"description\": \"Устанавливает короткое название приложения (до 17 символов), которое выводится пользователю в левом меню.\",\r\n        \"access_rights\": [],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"user_id\",\r\n            \"description\": \"Идентификатор пользователя.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"name\",\r\n            \"description\": \"Короткое название приложения.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"title\": \"Ads\",\r\n    \"methods\": [\r\n      {\r\n        \"title\": \"ads.addOfficeUsers\",\r\n        \"description\": \"Добавляет администраторов и/или наблюдателей в рекламный кабинет.\",\r\n        \"access_rights\": [\"ads\"],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"account_id\",\r\n            \"description\": \"Идентификатор рекламного кабинета.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"data\",\r\n            \"description\": \"Сериализованный JSON-массив объектов, описывающих добавляемых администраторов. Описание объектов `user_specification` смотрите ниже.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": true\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"ads.checkLink\",\r\n        \"description\": \"Проверяет ссылку на рекламируемый объект.\",\r\n        \"access_rights\": [\"ads\"],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"account_id\",\r\n            \"description\": \"Идентификатор рекламного кабинета.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"link_type\",\r\n            \"description\": \"Вид рекламируемого объекта:\\n* `community` — сообщество;\\n* `post` — запись в сообществе;\\n* `application` — приложение ВКонтакте;\\n* `video` — видеозапись;\\n* `site` — внешний сайт.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"link_url\",\r\n            \"description\": \"Ссылка на рекламируемый объект.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"campaign_id\",\r\n            \"description\": \"id кампании, в которой будет создаваться объявление.\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"ads.createAds\",\r\n        \"description\": \"Создает рекламные объявления.\",\r\n        \"access_rights\": [\r\n          \"ads\"\r\n        ],\r\n        \"params\": []\r\n      },\r\n      {\r\n        \"title\": \"ads.createCampaigns\",\r\n        \"description\": \"Создает рекламные кампании.\",\r\n        \"access_rights\": [\"ads\"],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"account_id\",\r\n            \"description\": \"Идентификатор рекламного кабинета.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"data\",\r\n            \"description\": \"Сериализованный JSON-массив объектов, описывающих создаваемые кампании. Описание объектов `campaign_specification` смотрите ниже.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": true\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"ads.createClients\",\r\n        \"description\": \"Создаёт клиентов рекламного агентства.\",\r\n        \"access_rights\": [\"ads\"],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"account_id\",\r\n            \"description\": \"id рекламного кабинета.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"data\",\r\n            \"description\": \"Сериализованный JSON-массив объектов, описывающих создаваемые кампании. Описание объектов `client_specification` смотрите ниже.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": true\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"ads.createLookalikeRequest\",\r\n        \"description\": \"Создаёт запрос на поиск похожей аудитории.\",\r\n        \"access_rights\": [\"ads\"],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"account_id\",\r\n            \"description\": \"Идентификатор рекламного кабинета.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"client_id\",\r\n            \"description\": \"**Только для рекламных агентств**. \\nИдентификатор клиента, для которого будет создаваться аудитория.\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"source_type\",\r\n            \"description\": \"Тип источника исходной аудитории. На данный момент может принимать единственное значение `retargeting_group`.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"ads.createTargetGroup\",\r\n        \"description\": \"Создаёт аудиторию для ретаргетинга рекламных объявлений на пользователей, которые посетили сайт рекламодателя (просмотрели информации о товаре, зарегистрировались и т.д.).\",\r\n        \"access_rights\": [\"ads\"],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"account_id\",\r\n            \"description\": \"Идентификатор рекламного кабинета.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"client_id\",\r\n            \"description\": \"**Только для рекламных агентств**. \\nid клиента, в рекламном кабинете которого будет создаваться аудитория.\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"name\",\r\n            \"description\": \"Название аудитории ретаргетинга — строка до 64 символов.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"lifetime\",\r\n            \"description\": \"Количество дней, через которое пользователи, добавляемые в аудиторию, будут автоматически исключены из неё.\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"target_pixel_id\",\r\n            \"description\": \"Идентификатор пикселя, если требуется собирать аудиторию с веб-сайта.\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"target_pixel_rules\",\r\n            \"description\": \"Массив правил для пополнения аудитории из пикселя. Имеет вид:\\n\\n```\\n[\\n    {\\\"type\\\": args},\\n    {\\\"type\\\": args},\\n    ...\\n    {\\\"type\\\": args}\\n](\\n    {\\\"type\\\": args},\\n    {\\\"type\\\": args},\\n    ...\\n    {\\\"type\\\": args}\\n)\\n```\",\r\n            \"type\": \"text\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"ads.createTargetPixel\",\r\n        \"description\": \"Создаёт пиксель ретаргетинга.\",\r\n        \"access_rights\": [\"ads\"],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"account_id\",\r\n            \"description\": \"Идентификатор рекламного кабинета.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"client_id\",\r\n            \"description\": \"**Только для рекламных агентств**. \\nID клиента, в рекламном кабинете которого будет создаваться пиксель.\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"name\",\r\n            \"description\": \"Название пикселя — строка до 64 символов.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"domain\",\r\n            \"description\": \"Домен сайта, на котором будет размещен пиксель.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"category_id\",\r\n            \"description\": \"Идентификатор категории сайта, на котором будет размещен пиксель. Для получения списка возможных идентификаторов следует использовать метод [ads.getSuggestions](method/ads.getSuggestions) (раздел `interest_categories_v2`).\",\r\n            \"type\": \"string\",\r\n            \"is_required\": true\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"ads.deleteAds\",\r\n        \"description\": \"Архивирует рекламные объявления.\",\r\n        \"access_rights\": [\"ads\"],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"account_id\",\r\n            \"description\": \"Идентификатор рекламного кабинета.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"ids\",\r\n            \"description\": \"Сериализованный JSON-массив, содержащий идентификаторы объявлений.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": true\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"ads.deleteCampaigns\",\r\n        \"description\": \"Архивирует рекламные кампании.\",\r\n        \"access_rights\": [\"ads\"],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"account_id\",\r\n            \"description\": \"Идентификатор рекламного кабинета.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"ids\",\r\n            \"description\": \"Сериализованный JSON-массив, содержащий id удаляемых кампаний.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": true\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"ads.deleteClients\",\r\n        \"description\": \"Архивирует клиентов рекламного агентства.\",\r\n        \"access_rights\": [\"ads\"],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"account_id\",\r\n            \"description\": \"Идентификатор рекламного кабинета.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"ids\",\r\n            \"description\": \"Сериализованный JSON-массив, содержащий id удаляемых клиентов.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": true\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"ads.deleteTargetGroup\",\r\n        \"description\": \"Удаляет аудиторию ретаргетинга.\",\r\n        \"access_rights\": [\"ads\"],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"account_id\",\r\n            \"description\": \"Идентификатор рекламного кабинета.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"client_id\",\r\n            \"description\": \"**Только для рекламных агентств**. \\nID клиента, в рекламном кабинете которого будет удаляться аудитория.\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"target_group_id\",\r\n            \"description\": \"Идентификатор аудитории.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": true\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"ads.deleteTargetPixel\",\r\n        \"description\": \"Удаляет пиксель ретаргетинга.\",\r\n        \"access_rights\": [\r\n          \"ads\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"account_id\",\r\n            \"description\": \"Идентификатор рекламного кабинета.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"client_id\",\r\n            \"description\": \"**Только для рекламных агентств**. \\nID клиента, в рекламном кабинете которого будет удаляться пиксель.\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"target_pixel_id\",\r\n            \"description\": \"Идентификатор пикселя.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": true\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"ads.getAccounts\",\r\n        \"description\": \"Возвращает список рекламных кабинетов.\",\r\n        \"access_rights\": [\r\n          \"ads\"\r\n        ],\r\n        \"params\": []\r\n      },\r\n      {\r\n        \"title\": \"ads.getAds\",\r\n        \"description\": \"Возвращает список рекламных объявлений.\",\r\n        \"access_rights\": [\r\n          \"ads\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"account_id\",\r\n            \"description\": \"Идентификатор рекламного кабинета.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"client_id\",\r\n            \"description\": \"**Доступно и обязательно для рекламных агентств**. \\nИдентификатор клиента, у которого запрашиваются рекламные объявления.\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"include_deleted\",\r\n            \"description\": \"Флаг, задающий необходимость вывода архивных объявлений.\\n* `0` — выводить только активные объявления;\\n* `1` — выводить все объявления.\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"only_deleted\",\r\n            \"description\": \"\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"campaign_ids\",\r\n            \"description\": \"Фильтр по рекламным кампаниям.\\nСериализованный JSON-массив, содержащий id кампаний. Если параметр равен `null`, то будут выводиться рекламные объявления всех кампаний.\",\r\n            \"type\": \"text\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"ad_ids\",\r\n            \"description\": \"Фильтр по рекламным объявлениям.\\nСериализованный JSON-массив, содержащий id объявлений. Если параметр равен `null`, то будут выводиться все рекламные объявления.\",\r\n            \"type\": \"text\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"limit\",\r\n            \"description\": \"Ограничение на количество возвращаемых объявлений. Используется, только если параметр `ad_ids` равен `null`, а параметр `campaign_ids` содержит ID только одной кампании.\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"offset\",\r\n            \"description\": \"Смещение. Используется в тех же случаях, что и параметр `limit`.\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"ads.getAdsLayout\",\r\n        \"description\": \"Возвращает описания внешнего вида рекламных объявлений.\",\r\n        \"access_rights\": [\r\n          \"ads\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"account_id\",\r\n            \"description\": \"Идентификатор рекламного кабинета.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"client_id\",\r\n            \"description\": \"**Для рекламных агентств**. Идентификатор клиента, у которого запрашиваются рекламные объявления.\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"include_deleted\",\r\n            \"description\": \"Флаг, задающий необходимость вывода архивных объявлений.\\n* `0` — выводить только активные объявления;\\n* `1` — выводить все объявления.\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"only_deleted\",\r\n            \"description\": \"\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"campaign_ids\",\r\n            \"description\": \"Фильтр по рекламным кампаниям. Сериализованный JSON-массив, содержащий ID кампаний. Если параметр равен `null`, то будут выводиться рекламные объявления всех кампаний.\",\r\n            \"type\": \"text\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"ad_ids\",\r\n            \"description\": \"Фильтр по рекламным объявлениям. Сериализованный JSON-массив, содержащий ID объявлений. Если параметр равен `null`, то будут выводиться все рекламные объявления.\",\r\n            \"type\": \"text\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"limit\",\r\n            \"description\": \"Ограничение на количество возвращаемых объявлений. Используется, только если параметр `ad_ids` равен `null`, а параметр `campaign_ids` содержит ID только одной кампании.\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"offset\",\r\n            \"description\": \"Смещение. Используется в тех же случаях, что и параметр `limit`.\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"ads.getAdsPostsReach\",\r\n        \"description\": \"Возвращает подробную информацию об охвате рекламных записей.\",\r\n        \"access_rights\": [\r\n          \"ads\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"account_id\",\r\n            \"description\": \"Идентификатор рекламного кабинета.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"ads_ids\",\r\n            \"description\": \"Перечисленные через запятую id запрашиваемых объявлений. Максимум **100** объявлений.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"ads.getAdsTargeting\",\r\n        \"description\": \"Возвращает параметры таргетинга рекламных объявлений\",\r\n        \"access_rights\": [\r\n          \"ads\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"account_id\",\r\n            \"description\": \"Идентификатор рекламного кабинета.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"client_id\",\r\n            \"description\": \"**Для рекламных агентств**. \\n\\nid клиента, у которого запрашиваются рекламные объявления.\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"include_deleted\",\r\n            \"description\": \"Флаг, задающий необходимость вывода архивных объявлений.\\n* `0` — выводить только активные объявления;\\n* `1` — выводить все объявления.\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"only_deleted\",\r\n            \"description\": \"\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"campaign_ids\",\r\n            \"description\": \"Фильтр по рекламным кампаниям.\\nСериализованный JSON-массив, содержащий `id` кампаний. Если параметр равен `null`, то будут выводиться рекламные объявления всех кампаний.\",\r\n            \"type\": \"text\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"ad_ids\",\r\n            \"description\": \"Фильтр по рекламным объявлениям.\\nСериализованный JSON-массив, содержащий `id` объявлений. Если параметр равен `null`, то будут выводиться все рекламные объявления.\",\r\n            \"type\": \"text\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"limit\",\r\n            \"description\": \"Ограничение на количество возвращаемых объявлений. Используется, только если параметр `ad_ids` равен `null`, а параметр `campaign_ids` содержит `id` только одной кампании.\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"offset\",\r\n            \"description\": \"Смещение, необходимо для выборки определенного подмножества значений.\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"ads.getBudget\",\r\n        \"description\": \"Возвращает текущий бюджет рекламного кабинета.\",\r\n        \"access_rights\": [\r\n          \"ads\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"account_id\",\r\n            \"description\": \"Идентификатор рекламного кабинета.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"ads.getCampaigns\",\r\n        \"description\": \"Возвращает список кампаний рекламного кабинета.\",\r\n        \"access_rights\": [\r\n          \"ads\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"account_id\",\r\n            \"description\": \"Идентификатор рекламного кабинета.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"client_id\",\r\n            \"description\": \"**Обязателен для рекламных агентств, в остальных случаях не используется**. \\nИдентификатор клиента, у которого запрашиваются рекламные кампании.\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"include_deleted\",\r\n            \"description\": \"Флаг, задающий необходимость вывода архивных объявлений.\\n* `0` — выводить только активные кампании;\\n* `1` — выводить все кампании.\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"campaign_ids\",\r\n            \"description\": \"Фильтр выводимых рекламных кампаний.\\nСериализованный JSON-массив, содержащий `id` кампаний. Выводиться будут только кампании, присутствующие в `campaign_ids` и являющиеся кампаниями указанного рекламного кабинета. Если параметр равен строке `null`, то выводиться будут все кампании.\",\r\n            \"type\": \"text\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"fields\",\r\n            \"description\": \"Добавляет дополнительные поля в ответ.\\nПоддерживаемые значения:\\n* `ads_count` — количество объявлений в кампании.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"ads.getCategories\",\r\n        \"description\": \"Позволяет получить возможные тематики рекламных объявлений.\",\r\n        \"access_rights\": [\r\n          \"ads\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"lang\",\r\n            \"description\": \"Язык, на котором нужно вернуть результаты. Список поддерживаемых языков Вы можете найти на странице [Запросы к API](api/api-requests).\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"ads.getClients\",\r\n        \"description\": \"Возвращает список клиентов рекламного агентства.\",\r\n        \"access_rights\": [\r\n          \"ads\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"account_id\",\r\n            \"description\": \"Идентификатор рекламного кабинета.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"ads.getDemographics\",\r\n        \"description\": \"Возвращает демографическую статистику по рекламным объявлениям или кампаниям.\",\r\n        \"access_rights\": [\r\n          \"ads\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"account_id\",\r\n            \"description\": \"Идентификатор рекламного кабинета.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"ids_type\",\r\n            \"description\": \"Тип запрашиваемых объектов, которые перечислены в параметре `ids`:\\n* `ad` — объявления;\\n* `campaign` — кампании.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"ids\",\r\n            \"description\": \"Перечисленные через запятую ID запрашиваемых объявлений или кампаний, в зависимости от того, что указано в параметре `ids_type`. Максимум **2000** объектов.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"period\",\r\n            \"description\": \"Способ группировки данных по датам:\\n* `day` — статистика по дням;\\n* `month` — статистика по месяцам;\\n* `overall` — статистика за всё время.\\nВременные ограничения задаются параметрами `date_from` и `date_to`.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"date_from\",\r\n            \"description\": \"Начальная дата выводимой статистики. Используется разный формат дат для разного значения параметра `period`:\\n* `day`: YYYY-MM-DD, пример: 2011-09-27 - 27 сентября 2011;\\n   * `0` — день создания.\\n* `month`: YYYY-MM, пример: 2011-09 - сентябрь 2011;\\n   * `0` — месяц создания.\\n* `overall`: 0.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"date_to\",\r\n            \"description\": \"Конечная дата выводимой статистики. Используется разный формат дат для разного значения параметра `period`:\\n* `day`: _YYYY-MM-DD_, пример: 2011-09-27 - 27 сентября 2011;\\n   * `0` — текущий день.\\n* `month`: _YYYY-MM_, пример: 2011-09 - сентябрь 2011;\\n   * `0` — текущий месяц.\\n* `overall`: 0.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"ads.getFloodStats\",\r\n        \"description\": \"Возвращает информацию о текущем состоянии счетчика — количество оставшихся запусков методов и время до следующего обнуления счетчика в секундах.\",\r\n        \"access_rights\": [\r\n          \"ads\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"account_id\",\r\n            \"description\": \"Идентификатор рекламного кабинета.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"ads.getLookalikeRequests\",\r\n        \"description\": \"Возвращает список запросов на поиск похожей аудитории.\",\r\n        \"access_rights\": [\r\n          \"ads\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"account_id\",\r\n            \"description\": \"Идентификатор рекламного кабинета.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"client_id\",\r\n            \"description\": \"**Только для рекламных агентств**. \\nИдентификатор клиента, для которого возвращаются запросы.\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"requests_ids\",\r\n            \"description\": \"Список идентификаторов запрашиваемых запросов через запятую. Максимальное количество идентификаторов в списке – **200**.\\n\\nЕсли этот параметр пуст, возвращаться будут все запросы.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"offset\",\r\n            \"description\": \"Смещение. Используется в связке с параметром `limit`.\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"limit\",\r\n            \"description\": \"Ограничение на количество возвращаемых запросов на поиск похожей аудитории. Используется в связке с параметром `offset`.\\n* `0` — вернуть только количество запросов в кабинете (у клиента в случае агентства).\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"sort_by\",\r\n            \"description\": \"Сортировка элементов. Возможные значения:\\n* `id` – сортировать по возрастанию идентификаторов;\\n* `update_time` – сортировать по убыванию времени последнего обновления статуса.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"ads.getMusicians\",\r\n        \"description\": \"Возвращает информацию о музыкантах, на слушателей которых доступно таргетирование.\",\r\n        \"access_rights\": [\r\n          \"ads\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"artist_name\",\r\n            \"description\": \"Имя музыканта.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"ads.getMusiciansByIds\",\r\n        \"description\": \"Возвращает информацию о музыкантах на слушателей, для которых доступно таргетирование.\",\r\n        \"access_rights\": [\r\n          \"ads\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"ids\",\r\n            \"description\": \"Идентификаторы музыкантов. \",\r\n            \"type\": \"string\",\r\n            \"is_required\": true\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"ads.getOfficeUsers\",\r\n        \"description\": \"Возвращает список администраторов и наблюдателей рекламного кабинета.\",\r\n        \"access_rights\": [\r\n          \"ads\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"account_id\",\r\n            \"description\": \"Идентификатор рекламного кабинета.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"ads.getPostsReach\",\r\n        \"description\": \"Возвращает подробную статистику по охвату рекламных записей из объявлений и кампаний для продвижения записей сообщества.\",\r\n        \"access_rights\": [\r\n          \"ads\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"account_id\",\r\n            \"description\": \"Идентификатор рекламного кабинета.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"ids_type\",\r\n            \"description\": \"Тип запрашиваемых объектов, которые перечислены в параметре `ids`:\\n* `ad` — объявления;\\n* `campaign` — кампании.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"ids\",\r\n            \"description\": \"Перечисленные через запятую id запрашиваемых объявлений или кампаний, в зависимости от того, что указано в параметре `ids_type`. Максимум **100** объектов.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"ads.getRejectionReason\",\r\n        \"description\": \"Возвращает причину, по которой указанному объявлению было отказано в прохождении премодерации.\",\r\n        \"access_rights\": [\r\n          \"ads\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"account_id\",\r\n            \"description\": \"Идентификатор рекламного кабинета.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"ad_id\",\r\n            \"description\": \"Идентификатор рекламного объявления.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"ads.getStatistics\",\r\n        \"description\": \"Возвращает статистику показателей эффективности по рекламным объявлениям, кампаниям, клиентам или всему кабинету.\",\r\n        \"access_rights\": [\r\n          \"ads\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"account_id\",\r\n            \"description\": \"Идентификатор рекламного кабинета.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"ids_type\",\r\n            \"description\": \"Тип запрашиваемых объектов, которые перечислены в параметре `ids`:\\n* `ad` — объявления;\\n* `campaign` — кампании;\\n* `client` — клиенты;\\n* `office` — кабинет.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"ids\",\r\n            \"description\": \"Перечисленные через запятую ID запрашиваемых объявлений, кампаний, клиентов или кабинета, в зависимости от того, что указано в параметре `ids_type`. Максимум **2000** объектов.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"period\",\r\n            \"description\": \"Способ группировки данных по датам:\\n* `day` — статистика по дням;\\n* `week` — статистика по неделям;\\n* `month` — статистика по месяцам;\\n* `year` — статистика по годам;\\n* `overall` — статистика за всё время;\\nВременные ограничения задаются параметрами `date_from` и `date_to`.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"date_from\",\r\n            \"description\": \"Начальная дата выводимой статистики. Используется разный формат дат для разного значения параметра `period`:\\n* `day`: YYYY-MM-DD, пример: 2011-09-27 - 27 сентября 2011. \\n   * `0` — день создания;\\n* `week`: YYYY-MM-DD, пример: 2011-09-27 - считаем статистику, начиная с понедельника той недели, в которой находится заданный день. \\n   * `0` — неделя создания;\\n* `month`: YYYY-MM, пример: 2011-09 - сентябрь 2011. \\n   * `0` — месяц создания;\\n* `year`: YYYY, пример: 2011 - 2011 год. \\n   * `0` — год создания;\\n* `overall`: `0`\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"date_to\",\r\n            \"description\": \"Конечная дата выводимой статистики. Используется разный формат дат для разного значения параметра `period`:\\n* `day`: YYYY-MM-DD, пример: 2011-09-27 - 27 сентября 2011. \\n* `week`: YYYY-MM-DD, пример: 2011-09-27 - считаем статистику до воскресения той недели, в которой находится данный день. \\n   * `0` — текущая неделя;\\n* `month`: YYYY-MM, пример: 2011-09 - сентябрь 2011. \\n   * _0_ — текущий месяц;\\n* `year`: YYYY, пример: 2011 - 2011 год. \\n   * `0` — текущий год;\\n* `overall`: `0`\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"stats_fields\",\r\n            \"description\": \"Дополнительные статистики:\\n* `views_times` — распределение количества показов на пользователя. Доступно для типов `ad` и `campaign`, содержащих только рекламные записи. \",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"ads.getSuggestions\",\r\n        \"description\": \"Возвращает набор подсказок для различных параметров таргетинга.\",\r\n        \"access_rights\": [\r\n          \"ads\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"section\",\r\n            \"description\": \"Раздел, по которому запрашиваются подсказки.\\nПоддерживаются следующие значения:\\n* `countries` — страны.\\n   * `q` — необязательный параметр;\\n      * `1` — возвращается полный список стран;\\n      * `не задан` — возвращается краткий список стран.\\n* `regions` — регионы.\\n   * `country` — обязательный параметр;\\n   * `q` — обязательный параметр.\\n* `cities` — города.\\n   * `country` — обязательный параметр;\\n   * `q` — необязательный параметр.\\n* `districts` — районы.\\n   * `cities` — обязательный параметр.\\n* `stations` — станции метро.\\n   * `cities` — обязательный параметр.\\n* `streets` — улицы.\\n   * `cities` — обязательный параметр,\\n   * `q` — обязательный параметр.\\n* `schools` — учебные заведения: школы, университеты, факультеты, кафедры.\\n   * `cities` — обязательный параметр;\\n   * `q` — обязательный параметр.\\n* `interest_categories_v2` — категории интересов.\\n* `interest_categories` — устаревшие категории интересов.\\n* `positions` — должности (профессии).\\n   * `q` — необязательный параметр.\\n* `religions` — религиозные взгляды.\\n* `user_devices` — устройства.\\n* `user_os` — операционные системы.\\n* `user_browsers` — интернет-браузеры.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"ids\",\r\n            \"description\": \"ID объектов, разделённые запятыми. Служит для расшифровки ID, возвращаемых в методе [ads.getAdsTargeting](ads.getAdsTargeting). Если задан этот параметр, то параметры `q`, `country`, `cities` не должны передаваться, таким образом отменяется их обязательность для конкретного раздела. Объекты возвращаются в том же порядке, в каком они были заданы в этом параметре.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"q\",\r\n            \"description\": \"Строка-фильтр запроса. \",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"country\",\r\n            \"description\": \"ID страны, в которой ищутся объекты.\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"cities\",\r\n            \"description\": \"ID городов, в которых ищутся объекты, разделенные запятыми.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"lang\",\r\n            \"description\": \"Язык возвращаемых строковых значений. Поддерживаемые языки:\\n* `ru` — русский;\\n* `ua` — украинский;\\n* `en` — английский. \",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"ads.getTargetGroups\",\r\n        \"description\": \"Возвращает список аудиторий ретаргетинга.\",\r\n        \"access_rights\": [\r\n          \"ads\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"account_id\",\r\n            \"description\": \"Идентификатор рекламного кабинета.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"client_id\",\r\n            \"description\": \"**Только для рекламных агентств**. \\nID клиента, в рекламном кабинете которого находятся аудитории.\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"extended\",\r\n            \"description\": \"Если `1`, в результатах будет указан код для размещения на сайте.\\n\\nУстаревший параметр. Используется только для старых групп ретаргетинга, которые пополнялись без помощи пикселя. Для новых аудиторий его следует опускать.\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"ads.getTargetPixels\",\r\n        \"description\": \"Возвращает список пикселей ретаргетинга.\",\r\n        \"access_rights\": [\r\n          \"ads\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"account_id\",\r\n            \"description\": \"Идентификатор рекламного кабинета.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"client_id\",\r\n            \"description\": \"**Только для рекламных агентств**. \\nID клиента, в рекламном кабинете которого находятся пиксели.\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"ads.getTargetingStats\",\r\n        \"description\": \"Возвращает размер целевой аудитории таргетинга, а также рекомендованные значения CPC и CPM.\",\r\n        \"access_rights\": [\r\n          \"ads\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"account_id\",\r\n            \"description\": \"Идентификатор рекламного кабинета.\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"client_id\",\r\n            \"description\": \"Обязательный параметр для агентских кабинетов\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"criteria\",\r\n            \"description\": \"Сериализованный JSON-объект, описывающий параметры таргетинга. Описание объекта `criteria` см. ниже. Игнорируется, если задан параметр `ad_id`.\",\r\n            \"type\": \"text\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"ad_id\",\r\n            \"description\": \"Идентификатор рекламного объявления, чьи параметры таргетинга требуется анализировать. Если задан этот параметр, `criteria` игнорируется.\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"ad_format\",\r\n            \"description\": \"Формат объявления:\\n* `1` — изображение и текст;\\n* `2` — большое изображение;\\n* `3` — эксклюзивный формат;\\n* `4` — продвижение сообществ или приложений, квадратное изображение;\\n* `7` — специальный формат приложений;\\n* `8` — специальный формат сообществ;\\n* `9` — запись в сообществе;\\n* `10` — витрина приложений;\\n* `11` — адаптивный формат.\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"ad_platform\",\r\n            \"description\": \"Рекламные площадки, на которых будет показываться объявление:\\n\\n* (если `ad_format` равен `1`):\\n   * `0` — ВКонтакте и сайты-партнёры;\\n   * `1` — только ВКонтакте.\\n* (если `ad_format` равен `9`):\\n   * `all` — все площадки;\\n   * `desktop` — полная версия сайта;\\n   * `mobile` — мобильный сайт и приложения.\\n* (если `ad_format` равен `11`):\\n   * `all` — все площадки;\\n   * `desktop` — полная версия сайта;\\n   * `mobile` — мобильный сайт и приложения.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"ad_platform_no_wall\",\r\n            \"description\": \"Для `ad_format` = `9` и `11`.\\n`1` — не показывать объявление на стенах сообществ. По умолчанию: `0`.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"ad_platform_no_ad_network\",\r\n            \"description\": \"Для `ad_format` = `9` и `11`.\\n`1` — не показывать объявление в рекламной сети. По умолчанию: `0`.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"link_url\",\r\n            \"description\": \"Ссылка на рекламируемый объект.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"link_domain\",\r\n            \"description\": \"Домен рекламируемого объекта.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"need_precise\",\r\n            \"description\": \"Если установлен, то дополнительно в ответе будут рекомендованные значения CPC и CPM для достижения 5, 10, 15... 95% охвата\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"impressions_limit_period\",\r\n            \"description\": \"\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"ads.getUploadURL\",\r\n        \"description\": \"Возвращает URL-адрес для загрузки фотографии рекламного объявления.\",\r\n        \"access_rights\": [\r\n          \"ads\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"ad_format\",\r\n            \"description\": \"Формат объявления:\\n* `1` — изображение и текст,\\n* `2` — большое изображение,\\n* `3` — эксклюзивный формат,\\n* `4` — продвижение сообществ или приложений, квадратное изображение,\\n* `5` — приложение в новостной ленте (устаревший),\\n* `6` — мобильное приложение,\\n* `11` — адаптивный формат.\\n\\nДля формата объявления «запись в сообществе» этот метод не используется, т.к. фотографии являются частью записи со стены сообщества. См. методы [ads.createAds](ads.createAds) и [wall.postAdsStealth](wall.postAdsStealth)\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"icon\",\r\n            \"description\": \"`1` — получить URL для загрузки логотипа, а не основного изображения. Используется только для `ad_format = 11`.\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"ads.getVideoUploadURL\",\r\n        \"description\": \"Возвращает URL-адрес для загрузки видеозаписи рекламного объявления.\",\r\n        \"access_rights\": [\r\n          \"ads\"\r\n        ],\r\n        \"params\": []\r\n      },\r\n      {\r\n        \"title\": \"ads.importTargetContacts\",\r\n        \"description\": \"Импортирует список контактов рекламодателя для учета зарегистрированных во ВКонтакте пользователей в аудитории ретаргетинга.\",\r\n        \"access_rights\": [\r\n          \"ads\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"account_id\",\r\n            \"description\": \"Идентификатор рекламного кабинета.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"client_id\",\r\n            \"description\": \"**Только для рекламных агентств**. \\nID клиента, в рекламном кабинете которого находится аудитория.\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"target_group_id\",\r\n            \"description\": \"Идентификатор аудитории таргетинга.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"contacts\",\r\n            \"description\": \"Список телефонов, email адресов, мобильные рекламные идентификаторы (IDFA, GAID) или идентификаторов пользователей, указанных через запятую. Также принимаются их MD5-хеши или SHA256-хеши.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": true\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"ads.removeOfficeUsers\",\r\n        \"description\": \"Удаляет администраторов и/или наблюдателей из рекламного кабинета.\",\r\n        \"access_rights\": [\r\n          \"ads\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"account_id\",\r\n            \"description\": \"Идентификатор рекламного кабинета.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"ids\",\r\n            \"description\": \"Сериализованный JSON-массив, содержащий `id` удаляемых администраторов.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": true\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"ads.removeTargetContacts\",\r\n        \"description\": \"Принимает запрос на исключение контактов рекламодателя из аудитории ретаргетинга.\",\r\n        \"access_rights\": [\r\n          \"ads\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"account_id\",\r\n            \"description\": \"Идентификатор рекламного кабинета.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"client_id\",\r\n            \"description\": \"**Только для рекламных агентств**. \\nID клиента, в рекламном кабинете которого находится аудитория.\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"target_group_id\",\r\n            \"description\": \"Bдентификатор аудитории таргетинга.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"contacts\",\r\n            \"description\": \"Список телефонов, email адресов или идентификаторов пользователей, указанных через запятую. Также принимаются их MD5-хеши.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": true\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"ads.saveLookalikeRequestResult\",\r\n        \"description\": \"Сохраняет результат поиска похожей аудитории.\",\r\n        \"access_rights\": [\r\n          \"ads\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"account_id\",\r\n            \"description\": \"Идентификатор рекламного кабинета.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"client_id\",\r\n            \"description\": \"**Только для рекламных агентств**. \\nИдентификатор клиента, для которого будут сохраняться аудитория.\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"request_id\",\r\n            \"description\": \"Идентификатор запроса на поиск похожей аудитории. Получить список всех запросов на поиск похожей аудитории для данного кабинета можно с помощью [ads.getLookalikeRequests](ads.getLookalikeRequests).\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"level\",\r\n            \"description\": \"Уровень конкретного размера похожей аудитории для сохранения. Получить список всех доступных размеров аудиторий можно с помощью [ads.getLookalikeRequests](ads.getLookalikeRequests).\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"ads.shareTargetGroup\",\r\n        \"description\": \"Предоставляет доступ к аудитории ретаргетинга другому рекламному кабинету. В результате выполнения метода возвращается идентификатор аудитории для указанного кабинета.\",\r\n        \"access_rights\": [\r\n          \"ads\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"account_id\",\r\n            \"description\": \"Идентификатор рекламного кабинета.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"client_id\",\r\n            \"description\": \"**Только для рекламных агентств**. \\nID клиента, в рекламном кабинете которого находится исходная аудитория.\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"target_group_id\",\r\n            \"description\": \"Идентификатор исходной аудитории.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"share_with_client_id\",\r\n            \"description\": \"ID клиента, рекламному кабинету которого необходимо предоставить доступ к аудитории.\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"ads.updateAds\",\r\n        \"description\": \"Редактирует рекламные объявления.\",\r\n        \"access_rights\": [\r\n          \"ads\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"account_id\",\r\n            \"description\": \"Идентификатор рекламного кабинета.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"data\",\r\n            \"description\": \"Сериализованный JSON-массив объектов, описывающих изменения в объявлениях. Описание объектов `ad_edit_specification` см. ниже.\\nМаксимальное допустимое количество объявлений, редактируемых  с помощью одного запроса — **5**. Если нужно больше, то можно использовать [execute](execute).\",\r\n            \"type\": \"string\",\r\n            \"is_required\": true\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"ads.updateCampaigns\",\r\n        \"description\": \"Редактирует рекламные кампании.\",\r\n        \"access_rights\": [\r\n          \"ads\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"account_id\",\r\n            \"description\": \"Идентификатор рекламного кабинета.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"data\",\r\n            \"description\": \"Сериализованный JSON-массив объектов, описывающих изменения в кампаниях. Описание объектов `campaign_mod_specification` см. ниже.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": true\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"ads.updateClients\",\r\n        \"description\": \"Редактирует клиентов рекламного агентства.\",\r\n        \"access_rights\": [\r\n          \"ads\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"account_id\",\r\n            \"description\": \"Идентификатор рекламного кабинета.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"data\",\r\n            \"description\": \"Сериализованный JSON-массив объектов, описывающих изменения в клиентах. Описание объектов `client_mod_specification` см. ниже.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": true\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"ads.updateOfficeUsers\",\r\n        \"description\": \"Добавляет или редактирует администраторов и/или наблюдателей в рекламный кабинет.\",\r\n        \"access_rights\": [\r\n          \"ads\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"account_id\",\r\n            \"description\": \"Идентификатор рекламного кабинета.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"data\",\r\n            \"description\": \"Сериализованный JSON-массив объектов, описывающих добавляемых администраторов. Описание объектов `user_specification` см. ниже.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": true\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"ads.updateTargetGroup\",\r\n        \"description\": \"Редактирует аудиторию ретаргетинга.\",\r\n        \"access_rights\": [\r\n          \"ads\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"account_id\",\r\n            \"description\": \"Идентификатор рекламного кабинета.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"client_id\",\r\n            \"description\": \"**Только для рекламных агентств**. \\nID клиента, в рекламном кабинете которого будет редактироваться аудитория.\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"target_group_id\",\r\n            \"description\": \"Идентификатор аудитории.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"name\",\r\n            \"description\": \"Новое название аудитории ретаргетинга — строка до 64 символов.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"domain\",\r\n            \"description\": \"Домен сайта, на котором будет размещен код учета пользователей.\\n\\nУстаревший параметр. Используется только для старых групп ретаргетинга, которые пополнялись без помощи пикселя. Для новых аудиторий его следует опускать, иначе будет возвращена ошибка.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"lifetime\",\r\n            \"description\": \"Количество дней, через которое пользователи, добавляемые в аудиторию, будут автоматически исключены из неё.\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"target_pixel_id\",\r\n            \"description\": \"Передайте в этом параметре идентификатор пикселя, если требуется собирать аудиторию с веб-сайта.\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"target_pixel_rules\",\r\n            \"description\": \"Закодированный в JSON массив правил, в соответствии с которыми будет пополняться аудитория из пикселя. Подробнее см. документацию метода [ads.createTargetGroup](ads.createTargetGroup).\",\r\n            \"type\": \"text\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"ads.updateTargetPixel\",\r\n        \"description\": \"Редактирует пиксель ретаргетинга.\",\r\n        \"access_rights\": [\r\n          \"ads\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"account_id\",\r\n            \"description\": \"Идентификатор рекламного кабинета.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"client_id\",\r\n            \"description\": \"**Только для рекламных агентств**. \\nID клиента, в рекламном кабинете которого находится пиксель.\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"target_pixel_id\",\r\n            \"description\": \"Идентификатор пикселя.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"name\",\r\n            \"description\": \"Новое название пикселя — строка до 64 символов.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"domain\",\r\n            \"description\": \"Новый домен сайта, на котором будет размещён код пикселя.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"category_id\",\r\n            \"description\": \"Новый идентификатор категории сайта, на котором будет размещён пиксель. Для получения списка возможных идентификаторов можно использовать метод [ads.getSuggestions](ads.getSuggestions) (раздел `interest_categories`).\",\r\n            \"type\": \"string\",\r\n            \"is_required\": true\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"title\": \"AppWidgets\",\r\n    \"methods\": [\r\n      {\r\n        \"title\": \"appWidgets.getAppImageUploadServer\",\r\n        \"description\": \"Позволяет получить адрес для загрузки фотографии в коллекцию приложения для [виджетов приложений сообществ](api/community-apps-widgets/getting-started).\",\r\n        \"access_rights\": [],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"image_type\",\r\n            \"description\": \"Тип изображения. Возможные значения:\\n* `24x24`;\\n* `50x50`;\\n* `160x160`;\\n* `160x240`;\\n* `510x128`.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": true\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"appWidgets.getAppImages\",\r\n        \"description\": \"Позволяет получить коллекцию изображений, загруженных для приложения, в [виджетах приложений сообществ](api/community-apps-widgets/getting-started).\",\r\n        \"access_rights\": [],\r\n        \"params\": []\r\n      },\r\n      {\r\n        \"title\": \"appWidgets.getGroupImageUploadServer\",\r\n        \"description\": \"Позволяет получить адрес для загрузки фотографии в коллекцию сообщества для [виджетов приложений сообществ](api/community-apps-widgets/getting-started).\",\r\n        \"access_rights\": [\r\n          \"app_widget\"\r\n        ],\r\n        \"params\": []\r\n      },\r\n      {\r\n        \"title\": \"appWidgets.getGroupImages\",\r\n        \"description\": \"Позволяет получить коллекцию изображений, загруженных для приложения, в [виджетах приложений сообществ](api/community-apps-widgets/getting-started).\",\r\n        \"access_rights\": [\r\n          \"app_widget\"\r\n        ],\r\n        \"params\": []\r\n      },\r\n      {\r\n        \"title\": \"appWidgets.getImagesById\",\r\n        \"description\": \"Позволяет получить изображение для [виджетов приложений сообществ](api/community-apps-widgets/getting-started) по его идентификатору.\",\r\n        \"access_rights\": [],\r\n        \"params\": []\r\n      },\r\n      {\r\n        \"title\": \"appWidgets.saveAppImage\",\r\n        \"description\": \"Позволяет сохранить изображение в коллекцию приложения для [виджетов приложений сообществ](api/community-apps-widgets/getting-started) после загрузки на сервер.\",\r\n        \"access_rights\": [],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"hash\",\r\n            \"description\": \"Параметр `hash`, полученный после загрузки на сервер.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"image\",\r\n            \"description\": \"Параметр `image`, полученный после загрузки на сервер.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": true\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"appWidgets.saveGroupImage\",\r\n        \"description\": \"Позволяет сохранить изображение в коллекцию сообщества для [виджетов приложений сообществ](api/community-apps-widgets/getting-started). после загрузки на сервер.\",\r\n        \"access_rights\": [\r\n          \"app_widget\"\r\n        ],\r\n        \"params\": []\r\n      },\r\n      {\r\n        \"title\": \"appWidgets.update\",\r\n        \"description\": \"Позволяет обновить [виджет приложения сообщества](api/community-apps-widgets/getting-started).\",\r\n        \"access_rights\": [\r\n          \"app_widget\"\r\n        ],\r\n        \"params\": []\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"title\": \"Apps\",\r\n    \"methods\": [\r\n      {\r\n        \"title\": \"apps.get\",\r\n        \"description\": \"Возвращает данные о запрошенном приложении.\",\r\n        \"access_rights\": [],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"app_id\",\r\n            \"description\": \"Идентификатор приложения, данные которого необходимо получить. \\nЕсли этот параметр и параметр `app_ids` не указан, возвращается идентификатор приложения, через которое выдан ключ доступа (`access_token`).\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"app_ids\",\r\n            \"description\": \"Список идентификаторов приложений, данные которых необходимо получить.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"platform\",\r\n            \"description\": \"Платформа, для которой необходимо вернуть данные. Возможные значения:\\n* `ios` — iOS;\\n* `android` — Android;\\n* `winphone` — Windows Phone;\\n* `web` — приложения на vk.com. \\nПо умолчанию: `web`.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"extended\",\r\n            \"description\": \"`1` — возвращать дополнительные поля. По умолчанию возвращает только основные поля приложений.\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"return_friends\",\r\n            \"description\": \"`1` – возвращать список друзей, установивших это приложение. По умолчанию: `0`.\\n\\nПараметр учитывается только при передаче `access_token`.\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"fields\",\r\n            \"description\": \"Список дополнительных полей, которые необходимо вернуть для профилей пользователей.\\nДоступные значения: \\n* `bdate`,\\n* `can_post`,\\n* `can_see_all_posts`,\\n* `can_see_audio`,\\n* `can_write_private_message`,\\n* `city`,\\n* `common_count`,\\n* `connections`,\\n* `contacts`,\\n* `counters`,\\n* `country`,\\n* `domain`,\\n* `education`,\\n* `has_mobile`,\\n* `last_seen`,\\n* `lists`,\\n* `online`,\\n* `online_mobile`,\\n* `photo_100`,\\n* `photo_200`,\\n* `photo_200_orig`,\\n* `photo_400_orig`,\\n* `photo_50`,\\n* `photo_max`,\\n* `photo_max_orig`,\\n* `relation`,\\n* `relatives`,\\n* `schools`,\\n* `screen_name`,\\n* `sex`,\\n* `site`,\\n* `status`,\\n* `timezone`,\\n* `universities`.\\n\\nПараметр учитывается только при `return_friends` = `1`.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"name_case\",\r\n            \"description\": \"Падеж для склонения имени и фамилии пользователей. Возможные значения: \\n*  `nom` — именительный (по умолчанию);\\n*  `gen` — родительный;\\n*  `dat` — дательный;\\n*  `acc` — винительный;\\n*  `ins` — творительный;\\n*  `abl` — предложный; \\n\\nПараметр учитывается только при `return_friends` = `1`.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"apps.getCatalog\",\r\n        \"description\": \"Возвращает список приложений, доступных для пользователей сайта через каталог приложений.\",\r\n        \"access_rights\": [],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"sort\",\r\n            \"description\": \"Способ сортировки приложений. \\nВозможные значения:\\n* `popular_today` — популярные за день;\\n* `visitors` — по посещаемости;\\n* `create_date` — по дате создания приложения;\\n* `growth_rate` — по скорости роста;\\n* `popular_week` — популярные за неделю.\\nПо умолчанию: `popular_today`.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"offset\",\r\n            \"description\": \"Смещение, необходимое для выборки определенного подмножества приложений.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"count\",\r\n            \"description\": \"Количество приложений, информацию о которых необходимо вернуть.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"platform\",\r\n            \"description\": \"Платформа, для которой необходимо вернуть приложения. \\nВозможные значения:\\n* `ios` — iOS;\\n* `android` — Android;\\n* `winphone` — Windows Phone;\\n* `web` — приложения на vk.com;\\n* `html5` — Direct Games.\\nПо умолчанию: `web`.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"extended\",\r\n            \"description\": \"`1` — возвращать дополнительные поля приложений. Если указан `extended` – `count` не должен быть больше **100**.\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"return_friends\",\r\n            \"description\": \"`1` – возвращать список друзей, установивших это приложение. По умолчанию: `0`.\\n\\nПараметр учитывается только при передаче `access_token`.\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"fields\",\r\n            \"description\": \"Список дополнительных полей, которые необходимо вернуть для [профилей пользователей](reference/objects/user).\\nДоступные значения: \\n* `bdate`,\\n* `can_post`,\\n* `can_see_all_posts`,\\n* `can_see_audio`,\\n* `can_write_private_message`,\\n* `city`,\\n* `common_count`,\\n* `connections`,\\n* `contacts`,\\n* `counters`,\\n* `country`,\\n* `domain`,\\n* `education`,\\n* `has_mobile`,\\n* `last_seen`,\\n* `lists`,\\n* `online`,\\n* `online_mobile`,\\n* `photo_100`,\\n* `photo_200`,\\n* `photo_200_orig`,\\n* `photo_400_orig`,\\n* `photo_50`,\\n* `photo_max`,\\n* `photo_max_orig`,\\n* `relation`,\\n* `relatives`,\\n* `schools`,\\n* `screen_name`,\\n* `sex`,\\n* `site`,\\n* `status`,\\n* `timezone`,\\n* `universities`.\\n\\nПараметр учитывается только при `return_friends` = `1`.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"name_case\",\r\n            \"description\": \"Падеж для склонения имени и фамилии пользователей. \\nВозможные значения:\\n* именительный – `nom`,\\n* родительный – `gen`,\\n* дательный – `dat`,\\n* винительный – `acc`,\\n* творительный – `ins`,\\n* предложный – `abl`.\\n\\nПо умолчанию: `nom`.\\n\\nПараметр учитывается только при `return_friends` = `1`.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"q\",\r\n            \"description\": \"Поисковая строка для поиска по каталогу приложений.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"genre_id\",\r\n            \"description\": \"Идентификатор жанра.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"filter\",\r\n            \"description\": \"`installed` — возвращает список установленных приложений (только для мобильных приложений),\\n`featured` — возвращает список приложений, установленных в «Выбор редакции» (только для мобильных приложений).\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"apps.getLeaderboard\",\r\n        \"description\": \"Возвращает рейтинг пользователей в игре.\",\r\n        \"access_rights\": [],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"type\",\r\n            \"description\": \"Тип турнирной таблицы. Возможные значения:\\n* `level` — по уровням;\\n* `points` — по очкам, начисленным за выполнение миссий;\\n* `score` — по очкам, начисленным напрямую ([apps.getScore](method/apps.getScore)).\",\r\n            \"type\": \"string\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"global\",\r\n            \"description\": \"Тип рейтинга. Возможные значения:\\n* `1` — глобальный рейтинг по всем игрокам (возвращается не более **20** результатов);\\n* `0` — рейтинг по друзьям пользователя.\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"extended\",\r\n            \"description\": \"`1` — возвращать дополнительную информацию о пользователе.\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"apps.getMiniAppPolicies\",\r\n        \"description\": \"\",\r\n        \"access_rights\": [],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"app_id\",\r\n            \"description\": \"\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": true\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"apps.getScopes\",\r\n        \"description\": \"\",\r\n        \"access_rights\": [],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"type\",\r\n            \"description\": \"\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"apps.getScore\",\r\n        \"description\": \"Метод возвращает количество очков пользователя в этой игре.\",\r\n        \"access_rights\": [],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"user_id\",\r\n            \"description\": \"Идентификатор пользователя.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": true\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"apps.promoHasActiveGift\",\r\n        \"description\": \"Проверить есть ли у пользователя подарок в игре.\",\r\n        \"access_rights\": [],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"promo_id\",\r\n            \"description\": \"Идентификатор промо-акции.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"user_id\",\r\n            \"description\": \"Идентификатор пользователя. Используется только при запросе с сервисным токеном.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"apps.promoUseGift\",\r\n        \"description\": \"Использовать подарок, полученный пользователем в промо-акции.\",\r\n        \"access_rights\": [],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"promo_id\",\r\n            \"description\": \"Идентификатор акции.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"user_id\",\r\n            \"description\": \"Идентификатор пользователя. Используется только при запросе с сервисным токеном.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"title\": \"Auth\",\r\n    \"methods\": [\r\n      {\r\n        \"title\": \"auth.checkPhone\",\r\n        \"description\": \"Проверяет правильность введённого номера (возможность его использования для регистрации или авторизации).\",\r\n        \"access_rights\": [],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"phone\",\r\n            \"description\": \" Номер телефона регистрируемого пользователя.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"client_id\",\r\n            \"description\": \"Идентификатор вашего приложения.\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"client_secret\",\r\n            \"description\": \"Секретный ключ приложения, доступный в разделе редактирования приложения.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"auth_by_phone\",\r\n            \"description\": \"`1` — проверить правильность номера для авторизации, а не для регистрации нового аккаунта. По умолчанию: `0`.\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"auth.restore\",\r\n        \"description\": \"Позволяет восстановить доступ к аккаунту, используя код, полученный через SMS.\\n\\n> Данный метод доступен только приложениям, имеющим доступ к [Прямой авторизации](api/direct-auth).\",\r\n        \"access_rights\": [],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"phone\",\r\n            \"description\": \"Номер телефона пользователя.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"last_name\",\r\n            \"description\": \"Фамилия пользователя.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": true\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"title\": \"Board\",\r\n    \"methods\": [\r\n      {\r\n        \"title\": \"board.getComments\",\r\n        \"description\": \"Возвращает список сообщений в указанной теме.\",\r\n        \"access_rights\": [],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"group_id\",\r\n            \"description\": \"Идентификатор сообщества, информацию об обсуждениях которого нужно получить.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"topic_id\",\r\n            \"description\": \"Идентификатор обсуждения.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"need_likes\",\r\n            \"description\": \"`1` — будет возвращено дополнительное поле `likes`. По умолчанию поле `likes` не возвращается.\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"start_comment_id\",\r\n            \"description\": \"Идентификатор комментария, начиная с которого нужно вернуть список (подробности см. ниже).\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"offset\",\r\n            \"description\": \"Смещение, необходимое для выборки определенного подмножества сообщений.\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"count\",\r\n            \"description\": \"Количество сообщений, которое необходимо получить (но не более **100**). По умолчанию — **20**.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"extended\",\r\n            \"description\": \"Если указать в качестве этого параметра `1`, то будет возвращена информация о пользователях, являющихся авторами сообщений. По умолчанию `0`.\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"sort\",\r\n            \"description\": \"Порядок сортировки комментариев:\\n* `asc` — хронологический;\\n* `desc` — антихронологический.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"board.getTopics\",\r\n        \"description\": \"Возвращает список тем в обсуждениях указанной группы.\",\r\n        \"access_rights\": [],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"group_id\",\r\n            \"description\": \"Идентификатор сообщества, информацию об обсуждениях которого необходимо получить. Если сообщество закрытое или частное, для вызова метода потребуется право доступа `groups`.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"topic_ids\",\r\n            \"description\": \"Список идентификаторов тем, которые необходимо получить (не более **100**). По умолчанию возвращаются все темы. Если указан данный параметр, игнорируются параметры `order`, `offset` и `count` (возвращаются все запрошенные темы в указанном порядке).\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"order\",\r\n            \"description\": \"Порядок, в котором необходимо вернуть список тем. Возможные значения:\\n* `1` — по убыванию даты обновления;\\n* `2` — по убыванию даты создания;\\n* `-1` — по возрастанию даты обновления;\\n* `-2` — по возрастанию даты создания.\\nПо умолчанию темы возвращаются в порядке, установленном администратором группы. «Прилепленные» темы при любой сортировке возвращаются первыми в списке.\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"offset\",\r\n            \"description\": \"Смещение, необходимое для выборки определенного подмножества тем.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"count\",\r\n            \"description\": \"Количество тем, которое необходимо получить (но не более **100**). По умолчанию — **40**.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"extended\",\r\n            \"description\": \"Если указать в качестве этого параметра `1`, то будет возвращена информация о пользователях, являющихся создателями тем или оставившими в них последнее сообщение. По умолчанию `0`.\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"preview\",\r\n            \"description\": \"Набор флагов, определяющий, необходимо ли вернуть вместе с информацией о темах текст первых и последних сообщений в них. Является суммой флагов:\\n* `1` — вернуть первое сообщение в каждой теме (поле `first_comment`);\\n* `2` — вернуть последнее сообщение в каждой теме (поле `last_comment`). По умолчанию — `0` (не возвращать текст сообщений)`\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"preview_length\",\r\n            \"description\": \"Количество символов, по которому нужно обрезать первое и последнее сообщение. Укажите `0`, если Вы не хотите обрезать сообщение. (по умолчанию — `90`).\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"title\": \"Database\",\r\n    \"methods\": [\r\n      {\r\n        \"title\": \"database.getChairs\",\r\n        \"description\": \"Возвращает список кафедр университета по указанному факультету.\",\r\n        \"access_rights\": [],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"faculty_id\",\r\n            \"description\": \"Идентификатор факультета, кафедры которого необходимо получить.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"offset\",\r\n            \"description\": \"Отступ, необходимый для получения определенного подмножества кафедр.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"count\",\r\n            \"description\": \"Количество кафедр которое необходимо получить.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"database.getCities\",\r\n        \"description\": \"Возвращает список городов.\",\r\n        \"access_rights\": [],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"country_id\",\r\n            \"description\": \"Идентификатор страны, полученный [database.getCountries](method/database.getCountries).\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"region_id\",\r\n            \"description\": \"Идентификатор региона, города которого необходимо получить.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"q\",\r\n            \"description\": \"Строка поискового запроса. Например, «Санкт».\\nМаксимальная длина строки — 15 символов.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"need_all\",\r\n            \"description\": \"`1` – возвращать все города.\\n`0` – возвращать только основные города.\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"offset\",\r\n            \"description\": \"Отступ, необходимый для получения определенного подмножества городов.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"count\",\r\n            \"description\": \"Количество городов, которые необходимо вернуть.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"database.getCitiesById\",\r\n        \"description\": \"Возвращает информацию о городах и регионах по их идентификаторам.\",\r\n        \"access_rights\": [],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"city_ids\",\r\n            \"description\": \"Идентификаторы городов и регионов.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"database.getCountries\",\r\n        \"description\": \"Возвращает список стран.\",\r\n        \"access_rights\": [],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"need_all\",\r\n            \"description\": \"`1` — вернуть список всех стран.\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"code\",\r\n            \"description\": \"Перечисленные через запятую двухбуквенные коды стран в стандарте [ISO 3166-1 alpha-2](reference/country-codes), для которых необходимо выдать информацию.\\n\\nПример значения `code`:\\n\\n```\\nRU,UA,BY\\n```\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"offset\",\r\n            \"description\": \"Отступ, необходимый для выбора определенного подмножества стран.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"count\",\r\n            \"description\": \"Количество стран, которое необходимо вернуть.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"database.getCountriesById\",\r\n        \"description\": \"Возвращает информацию о странах по их идентификаторам\",\r\n        \"access_rights\": [],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"country_ids\",\r\n            \"description\": \"Идентификаторы стран.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"database.getFaculties\",\r\n        \"description\": \"Возвращает список факультетов.\",\r\n        \"access_rights\": [],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"university_id\",\r\n            \"description\": \"Идентификатор университета, факультеты которого необходимо получить.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"offset\",\r\n            \"description\": \"Отступ, необходимый для получения определенного подмножества факультетов.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"count\",\r\n            \"description\": \"Количество факультетов которое необходимо получить.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"database.getMetroStations\",\r\n        \"description\": \"Возвращает список станций метро\",\r\n        \"access_rights\": [],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"city_id\",\r\n            \"description\": \"Идентификатор города, полученный методом [database.getCities](method/database.getCities).\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"offset\",\r\n            \"description\": \"Отступ, необходимый для выбора определенного подмножества станций.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"count\",\r\n            \"description\": \"Количество станций, которое необходимо вернуть.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"extended\",\r\n            \"description\": \"\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"database.getMetroStationsById\",\r\n        \"description\": \"Возвращает информацию об одной или нескольких станциях метро по их идентификаторам.\",\r\n        \"access_rights\": [],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"station_ids\",\r\n            \"description\": \"Список идентификаторов станций метро\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"database.getRegions\",\r\n        \"description\": \"Возвращает список регионов.\",\r\n        \"access_rights\": [],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"country_id\",\r\n            \"description\": \"Идентификатор страны, полученный в методе [database.getCountries](method/database.getCountries).\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"q\",\r\n            \"description\": \"Строка поискового запроса. Например, «Лен».\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"offset\",\r\n            \"description\": \"Отступ, необходимый для выбора определенного подмножества регионов.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"count\",\r\n            \"description\": \"Количество регионов, которое необходимо вернуть.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"database.getSchoolClasses\",\r\n        \"description\": \"Возвращает список классов, характерных для школ определенной страны.\",\r\n        \"access_rights\": [],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"country_id\",\r\n            \"description\": \"Идентификатор страны, доступные классы в которой необходимо вернуть.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"database.getSchools\",\r\n        \"description\": \"Возвращает список школ.\",\r\n        \"access_rights\": [],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"q\",\r\n            \"description\": \"Строка поискового запроса. Например, «гимназия».\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"city_id\",\r\n            \"description\": \"Идентификатор города, школы которого необходимо вернуть.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"offset\",\r\n            \"description\": \"Отступ, необходимый для получения определенного подмножества школ.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"count\",\r\n            \"description\": \"Количество школ, которое необходимо вернуть.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"database.getUniversities\",\r\n        \"description\": \"Возвращает список высших учебных заведений.\",\r\n        \"access_rights\": [],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"q\",\r\n            \"description\": \"Строка поискового запроса. Например, «СПБ».\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"country_id\",\r\n            \"description\": \"Идентификатор страны, учебные заведения которой необходимо вернуть.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"city_id\",\r\n            \"description\": \"Идентификатор города, учебные заведения которого необходимо вернуть.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"offset\",\r\n            \"description\": \"Отступ, необходимый для получения определенного подмножества учебных заведений.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"count\",\r\n            \"description\": \"Количество учебных заведений, которое необходимо вернуть.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"title\": \"Docs\",\r\n    \"methods\": [\r\n      {\r\n        \"title\": \"docs.add\",\r\n        \"description\": \"Копирует документ в документы текущего пользователя.\",\r\n        \"access_rights\": [\r\n          \"docs\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"owner_id\",\r\n            \"description\": \"Идентификатор пользователя или сообщества, которому принадлежит документ.\\n\\n> Обратите внимание, идентификатор сообщества в параметре `owner_id` необходимо указывать со знаком `«-»` — например, `owner_id=-1` соответствует идентификатору сообщества [ВКонтакте API](https://vk.com/apiclub) (club1).\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"doc_id\",\r\n            \"description\": \"Идентификатор документа.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"access_key\",\r\n            \"description\": \"Ключ доступа документа. Этот параметр следует передать, если вместе с остальными данными о документе было возвращено поле `access_key`.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"docs.delete\",\r\n        \"description\": \"Удаляет документ пользователя или группы.\",\r\n        \"access_rights\": [\r\n          \"docs\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"owner_id\",\r\n            \"description\": \"Идентификатор пользователя или сообщества, которому принадлежит документ.\\n\\n> Обратите внимание, идентификатор сообщества в параметре `owner_id` необходимо указывать со знаком `«-»` — например, `owner_id=-1` соответствует идентификатору сообщества [ВКонтакте API](https://vk.com/apiclub) (club1).\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"doc_id\",\r\n            \"description\": \"Идентификатор документа.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": true\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"docs.edit\",\r\n        \"description\": \"Редактирует документ пользователя или группы.\",\r\n        \"access_rights\": [\r\n          \"docs\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"owner_id\",\r\n            \"description\": \"Идентификатор пользователя или сообщества, которому принадлежит документ.\\n\\n> Обратите внимание, идентификатор сообщества в параметре `owner_id` необходимо указывать со знаком «-» — например, `owner_id=-1` соответствует идентификатору сообщества [ВКонтакте API](https://vk.com/apiclub) (club1).\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"doc_id\",\r\n            \"description\": \"Идентификатор документа.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"title\",\r\n            \"description\": \"Название документа.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"tags\",\r\n            \"description\": \"Метки для поиска.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"docs.get\",\r\n        \"description\": \"Возвращает расширенную информацию о документах пользователя или сообщества.\",\r\n        \"access_rights\": [\r\n          \"docs\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"count\",\r\n            \"description\": \"Количество документов, информацию о которых нужно вернуть. \\nПо умолчанию: все документы. Максимальное количество документов, которое можно получить: 2000.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"offset\",\r\n            \"description\": \"Смещение, необходимое для выборки определенного подмножества документов. Максимальное значение: `1999`.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"type\",\r\n            \"description\": \"Фильтр по типу документа.\\n\\nВозможные варианты:\\n*  `1` — текстовые документы;\\n*  `2` — архивы;\\n*  `3` — gif;\\n*  `4` — изображения;\\n*  `5` — аудио;\\n*  `6` — видео;\\n*  `7` — электронные книги;\\n*  `8` — неизвестно.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"owner_id\",\r\n            \"description\": \"Идентификатор пользователя или сообщества, которому принадлежат документы.\\n\\n> Обратите внимание, идентификатор сообщества в параметре `owner_id` необходимо указывать со знаком `«-»` — например, `owner_id=-1` соответствует идентификатору сообщества [ВКонтакте API](https://vk.com/apiclub) (club1).\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"return_tags\",\r\n            \"description\": \"\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"docs.getById\",\r\n        \"description\": \"Возвращает информацию о документах по их идентификаторам.\",\r\n        \"access_rights\": [\r\n          \"docs\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"docs\",\r\n            \"description\": \"идентификаторы документов, информацию о которых нужно вернуть.\\nПример значения `docs`:\\n\\n```\\n66748_91488,66748_91455\\n```\\n\\nМетод поддерживает передачу [access_key](reference/objects).\",\r\n            \"type\": \"string\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"return_tags\",\r\n            \"description\": \"\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"docs.getMessagesUploadServer\",\r\n        \"description\": \"Получает адрес сервера для [загрузки документа](upload_files_2%2310._%D0%97%D0%B0%D0%B3%D1%80%D1%83%D0%B7%D0%BA%D0%B0_%D0%B4%D0%BE%D0%BA%D1%83%D0%BC%D0%B5%D0%BD%D1%82%D0%BE%D0%B2) в личное сообщение.\",\r\n        \"access_rights\": [\r\n          \"docs\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"type\",\r\n            \"description\": \"Тип документа. Возможные значения:\\n* `doc` — обычный документ;\\n* `audio_message` — голосовое сообщение.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"peer_id\",\r\n            \"description\": \"Идентификатор назначения.\\n\\nДля пользователя: `id` пользователя.\\n\\nДля групповой беседы: 2000000000 + `id` беседы.\\n\\nДля сообщества: `-id` сообщества.\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"docs.getTypes\",\r\n        \"description\": \"Возвращает доступные для пользователя типы документов.\",\r\n        \"access_rights\": [\r\n          \"docs\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"owner_id\",\r\n            \"description\": \"Идентификатор пользователя или сообщества, которому принадлежат документы.\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": true\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"docs.getUploadServer\",\r\n        \"description\": \"Возвращает адрес сервера для [загрузки документов](https://dev.vk.com/api/upload#%D0%97%D0%B0%D0%B3%D1%80%D1%83%D0%B7%D0%BA%D0%B0%20%D0%B4%D0%BE%D0%BA%D1%83%D0%BC%D0%B5%D0%BD%D1%82%D0%BE%D0%B2).\",\r\n        \"access_rights\": [\r\n          \"docs\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"group_id\",\r\n            \"description\": \"Идентификатор сообщества (если необходимо загрузить документ в список документов сообщества). Если документ нужно загрузить в список пользователя, метод вызывается без дополнительных параметров.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"docs.getWallUploadServer\",\r\n        \"description\": \"Возвращает адрес сервера для [загрузки документов](api/upload) в папку **Отправленные**, для последующей отправки документа на стену или личным сообщением.\",\r\n        \"access_rights\": [\r\n          \"docs\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"group_id\",\r\n            \"description\": \"Идентификатор сообщества, в которое нужно загрузить документ.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"docs.save\",\r\n        \"description\": \"Сохраняет документ после его успешной [загрузки](api/upload) на сервер.\",\r\n        \"access_rights\": [\r\n          \"docs\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"file\",\r\n            \"description\": \"Параметр, возвращаемый в результате [загрузки файла](api/upload) на сервер.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"title\",\r\n            \"description\": \"Название документа.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"tags\",\r\n            \"description\": \"Метки для поиска.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"return_tags\",\r\n            \"description\": \"\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"docs.search\",\r\n        \"description\": \"Возвращает результаты поиска по документам.\",\r\n        \"access_rights\": [\r\n          \"docs\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"q\",\r\n            \"description\": \"Строка поискового запроса. Например, «зелёные тапочки».\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"search_own\",\r\n            \"description\": \"`1` — искать среди собственных документов пользователя.\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"count\",\r\n            \"description\": \"Количество документов, информацию о которых нужно вернуть.\\n\\n> Обратите внимание, даже при использовании параметра `offset` для получения информации доступны только первые 1000 результатов.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"offset\",\r\n            \"description\": \"Смещение, необходимое для выборки определённого подмножества документов.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"return_tags\",\r\n            \"description\": \"\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"title\": \"Donut\",\r\n    \"methods\": [\r\n      {\r\n        \"title\": \"donut.getFriends\",\r\n        \"description\": \"Возвращает список донов, которые подписаны на определенные сообщества, из числа друзей пользователя.\",\r\n        \"access_rights\": [\r\n          \"friends\",\r\n          \"groups\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"owner_id\",\r\n            \"description\": \"Идентификатор сообщества.\\n\\n> Обратите внимание, идентификатор сообщества в параметре `owner_id` необходимо указывать со знаком `«-»` — например, `owner_id`=`-1` соответствует идентификатору сообщества [ВКонтакте API](https://vk.com/apiclub) (club1).\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"offset\",\r\n            \"description\": \"Смещение, необходимое для выборки определенного подмножества друзей.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"count\",\r\n            \"description\": \"Количество друзей, информацию о которых необходимо вернуть.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"fields\",\r\n            \"description\": \"Список дополнительных полей профилей, которые необходимо вернуть. См. [подробное описание](reference/objects/user).\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"donut.getSubscription\",\r\n        \"description\": \"Возвращает информацию о подписке VK Donut.\",\r\n        \"access_rights\": [\r\n          \"groups\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"owner_id\",\r\n            \"description\": \"Идентификатор сообщества.\\n\\n> Обратите внимание, идентификатор сообщества в параметре `owner_id` необходимо указывать со знаком `«-»` — например, `owner_id`=`-1` соответствует идентификатору сообщества [ВКонтакте API](https://vk.com/apiclub) (club1).\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": true\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"donut.getSubscriptions\",\r\n        \"description\": \"Возвращает информацию о подписках пользователя.\",\r\n        \"access_rights\": [\r\n          \"groups\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"fields\",\r\n            \"description\": \"Список дополнительных полей профиля, которые необходимо вернуть. См. [подробное описание](reference/objects/user).\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"offset\",\r\n            \"description\": \"Смещение, необходимое для выборки определенного подмножества подписок.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"count\",\r\n            \"description\": \"Количество подписок, информацию о которых необходимо вернуть.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"donut.isDon\",\r\n        \"description\": \"Возвращает информацию о том, подписан ли пользователь на платный контент (является доном).\",\r\n        \"access_rights\": [\r\n          \"groups\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"owner_id\",\r\n            \"description\": \"Идентификатор сообщества.\\n\\n> Обратите внимание, идентификатор сообщества в параметре `owner_id` необходимо указывать со знаком `«-»` — например, `owner_id`=`-1` соответствует идентификатору сообщества [ВКонтакте API](https://vk.com/apiclub) (club1).\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": true\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"title\": \"DownloadedGames\",\r\n    \"methods\": [\r\n      {\r\n        \"title\": \"downloadedGames.getPaidStatus\",\r\n        \"description\": \"\",\r\n        \"access_rights\": [],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"user_id\",\r\n            \"description\": \"ID пользователя возможно купившего приложение.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"title\": \"Friends\",\r\n    \"methods\": [\r\n      {\r\n        \"title\": \"friends.areFriends\",\r\n        \"description\": \"Возвращает информацию о том, добавлен ли текущий пользователь в друзья у указанных пользователей.\",\r\n        \"access_rights\": [\r\n          \"friends\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"user_ids\",\r\n            \"description\": \"Идентификаторы пользователей, статус дружбы с которыми нужно проверить.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"need_sign\",\r\n            \"description\": \"`1` – необходимо вернуть поле `sign` которое равно: `md5(\\\"{id}_{user_id}_{friends_status}_{application_secret}\\\")`, \\nГде, id — это идентификатор пользователя, для которого выполняется запрос. Позволяет на сервере убедиться что данные не были подделаны на клиенте.\\n`0` — поле `sign` возвращать не нужно.\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"extended\",\r\n            \"description\": \"`1`  — необходимо вернуть `is_request_unread`, если есть непрочитанная заявка в друзья.\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"friends.get\",\r\n        \"description\": \"Возвращает список идентификаторов друзей пользователя или расширенную информацию о друзьях пользователя (при использовании параметра `fields`).\",\r\n        \"access_rights\": [],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"user_id\",\r\n            \"description\": \"Идентификатор пользователя, для которого необходимо получить список друзей. Если параметр не задан, то считается, что он равен идентификатору текущего пользователя (справедливо для вызова с передачей `access_token`).\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"order\",\r\n            \"description\": \"Порядок, в котором нужно вернуть список друзей. Допустимые значения:\\n* `hints` — сортировать по рейтингу, аналогично тому, как друзья сортируются в разделе **Мои друзья**.\\n> Это значение доступно только для Standalone-приложений с ключом доступа, полученным по схеме Implicit Flow.\\n* `random` — возвращает друзей в случайном порядке.\\n* `name` — сортировать по имени. Данный тип сортировки работает медленно, так как сервер будет получать всех друзей, а не только указанное количество `count`. (работает только при переданном параметре `fields`).\\n\\nПо умолчанию список сортируется в порядке возрастания идентификаторов пользователей.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"list_id\",\r\n            \"description\": \"Идентификатор списка друзей, полученный методом [friends.getLists](method/friends.getLists), друзей из которого необходимо получить. Данный параметр учитывается, только когда параметр `user_id` равен идентификатору текущего пользователя.\\n\\n> Этот параметр доступен только для Standalone-приложений с ключом доступа, полученным по схеме Implicit Flow.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"count\",\r\n            \"description\": \"Количество друзей, которое нужно вернуть.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"offset\",\r\n            \"description\": \"Смещение, необходимое для выборки определенного подмножества друзей.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"fields\",\r\n            \"description\": \"Список дополнительных полей, которые необходимо вернуть.\\n\\nДоступные значения:\\n* `bdate`;\\n* `can_post`;\\n* `can_see_all_posts`;\\n* `can_write_private_message`;\\n* `city`;\\n* `contacts`;\\n* `country`;\\n* `domain`;\\n* `education`;\\n* `has_mobile`;\\n* `imezone`;\\n* `last_seen`;\\n* `nickname`;\\n* `online`;\\n* `photo_100`;\\n* `photo_200_orig`;\\n* `photo_50`;\\n* `relation`;\\n* `sex`;\\n* `status`;\\n* `universities`.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"name_case\",\r\n            \"description\": \"Падеж для склонения имени и фамилии пользователя. \\nВозможные значения: \\n* именительный – `nom`;\\n* родительный – `gen`;\\n* дательный – `dat`;\\n* винительный – `acc`; \\n* творительный – `ins`; \\n* предложный – `abl`.\\nПо умолчанию `nom`.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"ref\",\r\n            \"description\": \"\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"friends.getAppUsers\",\r\n        \"description\": \"Возвращает список идентификаторов друзей текущего пользователя, которые установили данное приложение.\",\r\n        \"access_rights\": [\r\n          \"friends\"\r\n        ],\r\n        \"params\": []\r\n      },\r\n      {\r\n        \"title\": \"friends.getAvailableForCall\",\r\n        \"description\": \"Позволяет получить список идентификаторов пользователей, доступных для вызова в приложении, используя метод [Client API](sdk/javascript) `callUser`.\\n\\nПодробнее о [схеме вызова](sdk/javascript) из приложений.\",\r\n        \"access_rights\": [\r\n          \"friends\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"fields\",\r\n            \"description\": \"Список дополнительных полей, которые необходимо вернуть.\\n\\nДоступные значения: \\n* `bdate`;\\n* `can_post`;\\n* `can_see_all_posts`;\\n* `can_write_private_message`;\\n* `city`;\\n* `contacts`;\\n* `country`;\\n* `domain`;\\n* `education`;\\n* `has_mobile`; \\n* `last_seen`;\\n* `nickname`; \\n* `online`;\\n* `photo_100`; \\n* `photo_200_orig`; \\n* `photo_50`;\\n* `relation`;\\n* `sex`;\\n* `status`; \\n* `timezone`; \\n* `universities`.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"name_case\",\r\n            \"description\": \"Падеж для склонения имени и фамилии пользователя. \\nВозможные значения: \\n* именительный – `nom`;\\n* родительный – `gen`;\\n* дательный – `dat`;\\n* винительный – `acc`; \\n* творительный – `ins`; \\n* предложный – `abl`. \\n\\nПо умолчанию `nom`.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"friends.getMutual\",\r\n        \"description\": \"Возвращает список идентификаторов общих друзей между парой пользователей.\",\r\n        \"access_rights\": [\r\n          \"friends\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"source_uid\",\r\n            \"description\": \"Идентификатор пользователя, чьи друзья пересекаются с друзьями пользователя с идентификатором `target_uid`. Если параметр не задан, то считается, что `source_uid` равен идентификатору текущего пользователя.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"target_uid\",\r\n            \"description\": \"Идентификатор пользователя, с которым необходимо искать общих друзей.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"target_uids\",\r\n            \"description\": \"Список идентификаторов пользователей, с которыми необходимо искать общих друзей.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"order\",\r\n            \"description\": \"Порядок, в котором нужно вернуть список общих друзей. Допустимые значения: `random`— возвращает друзей в случайном порядке. По умолчанию — в порядке возрастания идентификаторов.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"count\",\r\n            \"description\": \"Количество общих друзей, которое нужно вернуть. (По умолчанию — `все общие друзья`).\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"offset\",\r\n            \"description\": \"Смещение, необходимое для выборки определенного подмножества общих друзей.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"friends.getOnline\",\r\n        \"description\": \"Возвращает список идентификаторов друзей пользователя, находящихся на сайте.\",\r\n        \"access_rights\": [\r\n          \"friends\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"user_id\",\r\n            \"description\": \"Идентификатор пользователя, для которого необходимо получить список друзей онлайн. Если параметр не задан, то считается, что он равен идентификатору текущего пользователя.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"list_id\",\r\n            \"description\": \"Идентификатор списка друзей. Если параметр не задан, возвращается информация обо всех друзьях, находящихся на сайте.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"online_mobile\",\r\n            \"description\": \"`1` — будет возвращено дополнительное поле `online_mobile`. \\nПо умолчанию — `0`.\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"order\",\r\n            \"description\": \"Порядок, в котором нужно вернуть список друзей, находящихся на сайте. Допустимые значения: `random` — возвращает друзей в случайном порядке, `hints` — сортировать по рейтингу, аналогично тому, как друзья сортируются в разделе **Мои друзья** (данный параметр доступен только для [Desktop-приложений](guide)).\\n\\nПо умолчанию список сортируется в порядке возрастания идентификаторов пользователей.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"count\",\r\n            \"description\": \"Количество друзей онлайн, которое нужно вернуть. (По умолчанию — **все друзья онлайн**)\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"offset\",\r\n            \"description\": \"смещение, необходимое для выборки определенного подмножества друзей онлайн.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"friends.getRecent\",\r\n        \"description\": \"Возвращает список идентификаторов недавно добавленных друзей текущего пользователя.\",\r\n        \"access_rights\": [\r\n          \"friends\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"count\",\r\n            \"description\": \"Максимальное количество недавно добавленных друзей, которое необходимо получить.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"friends.search\",\r\n        \"description\": \"Позволяет искать по списку друзей пользователей.\",\r\n        \"access_rights\": [\r\n          \"friends\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"user_id\",\r\n            \"description\": \"Идентификатор пользователя, по списку друзей которого необходимо произвести поиск.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"q\",\r\n            \"description\": \"Строка запроса.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"fields\",\r\n            \"description\": \"Список дополнительных полей, которые необходимо вернуть.\\nДоступные значения: \\n* `bdate`;\\n* `can_post`;\\n* `can_see_all_posts`;\\n* `can_write_private_message`;\\n* `city`;\\n* `contacts` \\n* `country`\\n* `domain_`;\\n* `education`;\\n* `has_mobile`; \\n* `last_seen`;\\n* `nickname`; \\n* `online`;\\n* `photo_100`;\\n* `photo_200_orig`; \\n* `photo_50`; \\n* `relation`;\\n* `screen_name`;\\n* `sex`;\\n* `status`;\\n* `timezone`;\\n* `universities`.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"name_case\",\r\n            \"description\": \"Падеж для склонения имени и фамилии пользователя. Возможные значения: \\n* именительный – `nom`;\\n* родительный – `gen`;\\n* дательный – `dat`;\\n* винительный – `acc`;\\n* творительный – `ins`;\\n* предложный – `abl`. \\nПо умолчанию `nom`.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"offset\",\r\n            \"description\": \"Смещение, необходимое для выборки определенного подмножества друзей.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"count\",\r\n            \"description\": \"Количество друзей, которое нужно вернуть.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"title\": \"Groups\",\r\n    \"methods\": [\r\n      {\r\n        \"title\": \"groups.get\",\r\n        \"description\": \"Возвращает список сообществ указанного пользователя.\",\r\n        \"access_rights\": [],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"user_id\",\r\n            \"description\": \"Идентификатор пользователя, информацию о сообществах которого требуется получить.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"extended\",\r\n            \"description\": \"Если указать в качестве этого параметра `1`, то будет возвращена полная информация о группах пользователя. По умолчанию `0`.\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"filter\",\r\n            \"description\": \"Список фильтров сообществ, которые необходимо вернуть, перечисленные через запятую. \\nДоступны значения:\\n* `admin`;\\n* `editor`; \\n* `moder`; \\n* `advertiser`; \\n* `groups`;\\n* `publics`;\\n* `events`;\\n* `hasAddress`. \\n\\nПо умолчанию возвращаются все сообщества пользователя. \\n\\nПри указании фильтра `hasAddress` вернутся сообщества, в которых указаны адреса в соответствующем блоке, `admin` будут возвращены сообщества, в которых пользователь является администратором, `editor` — администратором или редактором, `moder` — администратором, редактором или модератором, `advertiser` — рекламодателем. Если передано несколько фильтров, то их результат объединяется.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"fields\",\r\n            \"description\": \"Список дополнительных полей, которые необходимо вернуть. \\nВозможные значения: \\n* `activity`;\\n* `can_create_topic`;\\n* `can_post`;\\n* `can_see_all_posts`; \\n* `city`;\\n* `contacts`; \\n* `counters`; \\n* `country`;\\n* `description`; \\n* `finish_date`;\\n* `fixed_post`;\\n* `links`;\\n* `members_count`;\\n* `place`;\\n* `site`;\\n* `start_date`;\\n* `status`;\\n* `verified`; \\n* `wiki_page`.\\n\\nПодробнее см. [описание полей объекта group](reference/objects/group).\\nОбратите внимание, этот параметр учитывается только при `extended`=`1`.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"offset\",\r\n            \"description\": \"Смещение, необходимое для выборки определённого подмножества сообществ.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"count\",\r\n            \"description\": \"Количество сообществ, информацию о которых нужно вернуть.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"groups.getAddresses\",\r\n        \"description\": \"Возвращает адрес указанного сообщества.\",\r\n        \"access_rights\": [],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"group_id\",\r\n            \"description\": \"Идентификатор сообщества.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"address_ids\",\r\n            \"description\": \"Перечисленные через запятую идентификаторы адресов, информацию о которых необходимо вернуть.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"latitude\",\r\n            \"description\": \"Географическая широта отметки, заданная в градусах (от -90 до 90).\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"longitude\",\r\n            \"description\": \"Географическая долгота отметки, заданная в градусах (от -180 до 180).\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"offset\",\r\n            \"description\": \"Смещение, необходимое для выборки определенного подмножества черного списка.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"count\",\r\n            \"description\": \"Количество адресов, которое необходимо вернуть.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"fields\",\r\n            \"description\": \"Список дополнительных полей [сообществ](reference/objects/group), которые необходимо вернуть.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"groups.getById\",\r\n        \"description\": \"Возвращает информацию о заданном сообществе или о нескольких сообществах.\",\r\n        \"access_rights\": [],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"group_ids\",\r\n            \"description\": \"Идентификаторы или короткие имена сообществ. Максимальное число идентификаторов — 500.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"group_id\",\r\n            \"description\": \"Иидентификатор или короткое имя сообщества.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"fields\",\r\n            \"description\": \"Список дополнительных полей, которые необходимо вернуть. Например: \\n* `activity`;\\n* `ban_info`;\\n* `can_post`;\\n* `can_see_all_posts`;\\n* `city`;\\n* `contacts`;\\n* `counters`;\\n* `country`;\\n* `cover`;\\n* `description`;\\n* `finish_date`;\\n* `fixed_post`;\\n* `links`;\\n* `market`;\\n* `members_count`;\\n* `place`;\\n* `site`;\\n* `start_date`;\\n* `status`;\\n* `verified`;\\n* `wiki_page`.\\n\\nПолный список полей доступен [на этой странице](reference/objects/group). \\n\\n> Обратите внимание, для получения некоторых полей требуется право доступа `groups`. Подробнее смотрите [описание полей объекта group](reference/objects/group).\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"groups.getCatalog\",\r\n        \"description\": \"Возвращает список сообществ выбранной категории каталога.\",\r\n        \"access_rights\": [],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"category_id\",\r\n            \"description\": \"Идентификатор категории, полученный в методе [groups.getCatalogInfo](method/groups.getCatalogInfo).\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"subcategory_id\",\r\n            \"description\": \"Идентификатор подкатегории, полученный в методе [groups.getCatalogInfo](method/groups.getCatalogInfo).\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"groups.getCatalogInfo\",\r\n        \"description\": \"Возвращает список категорий для каталога сообществ.\",\r\n        \"access_rights\": [],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"extended\",\r\n            \"description\": \"`1` — вернуть информацию о количестве сообществ в категории и три сообщества для предпросмотра. \\n\\nПо умолчанию `0`.\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"subcategories\",\r\n            \"description\": \"`1` — вернуть информацию об подкатегориях. \\n\\nПо умолчанию `0`.\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"groups.getMembers\",\r\n        \"description\": \"Возвращает список участников сообщества.\",\r\n        \"access_rights\": [],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"group_id\",\r\n            \"description\": \"Идентификатор или короткое имя сообщества.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"sort\",\r\n            \"description\": \"Сортировка, с которой необходимо вернуть список участников. Может принимать значения:\\n* `id_asc` — в порядке возрастания ID;\\n* `id_desc` — в порядке убывания ID;\\n* `time_asc` — в хронологическом порядке по вступлению в сообщество;\\n* `time_desc` — в антихронологическом порядке по вступлению в сообщество. \\nСортировка по `time_asc` и `time_desc` возможна только при вызове от модератора сообщества.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"offset\",\r\n            \"description\": \"Смещение, необходимое для выборки определённого подмножества участников. По умолчанию `0`.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"count\",\r\n            \"description\": \"Количество участников сообщества, информацию о которых необходимо получить.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"fields\",\r\n            \"description\": \"Список дополнительных полей, которые необходимо вернуть. \\nДоступные значения: \\n* `bdate`;\\n* `can_post`;\\n* `can_see_all_posts`;\\n* `can_see_audio`;\\n* `can_write_private_message`;\\n* `city`;\\n* `common_count`;\\n* `connections`;\\n* `contacts`;\\n* `country`;\\n* `domain`;\\n* `education`;\\n* `has_mobile`;\\n* `last_seen`;\\n* `lists`;\\n* `online`;\\n* `online_mobile`;\\n* `photo_100`;\\n* `photo_200`;\\n* `photo_200_orig`; \\n* `photo_400_orig`;\\n* `photo_50`;\\n* `photo_max`;\\n* `photo_max_orig`;\\n* `relation`;\\n* `relatives`;\\n* `schools`;\\n* `sex`;\\n* `site`;\\n* `status`;\\n* `universities`.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"filter\",\r\n            \"description\": \"* `friends` — будут возвращены только друзья в этом сообществе.\\n* `unsure` — будут возвращены пользователи, которые выбрали «Возможно пойду» (если сообщество относится к мероприятиям).\\n* `managers` — будут возвращены только руководители сообщества (доступно при запросе с передачей `access_token` от имени администратора сообщества).\\n* `donut` — будут возвращены только доны (пользователи, у которых есть платная подписка VK Donut).\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"groups.getOnlineStatus\",\r\n        \"description\": \"Получает информацию о статусе «онлайн» в сообществе.\",\r\n        \"access_rights\": [],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"group_id\",\r\n            \"description\": \"идентификатор сообщества.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": true\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"groups.getTokenPermissions\",\r\n        \"description\": \"Возвращает настройки прав для ключа доступа сообщества.\",\r\n        \"access_rights\": [],\r\n        \"params\": []\r\n      },\r\n      {\r\n        \"title\": \"groups.isMember\",\r\n        \"description\": \"Возвращает информацию о том, является ли пользователь участником сообщества.\",\r\n        \"access_rights\": [],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"group_id\",\r\n            \"description\": \"Идентификатор или короткое имя сообщества.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"user_id\",\r\n            \"description\": \"Идентификатор пользователя.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"user_ids\",\r\n            \"description\": \"Идентификаторы пользователей, не более 500.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"extended\",\r\n            \"description\": \"`1`  — вернуть ответ в расширенной форме. По умолчанию — `0`.\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"groups.search\",\r\n        \"description\": \"Осуществляет поиск сообществ по заданной подстроке.\",\r\n        \"access_rights\": [],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"q\",\r\n            \"description\": \"Текст поискового запроса.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"type\",\r\n            \"description\": \"Тип сообщества. Возможные значения: `group`, `page`, `event`.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"country_id\",\r\n            \"description\": \"Идентификатор страны.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"city_id\",\r\n            \"description\": \"Идентификатор города. При передаче этого параметра поле `country_id` игнорируется.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"future\",\r\n            \"description\": \"При передаче значения `1` будут выведены предстоящие события. Учитывается только при передаче в качестве `type` значения `event`.\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"market\",\r\n            \"description\": \"При передаче значения `1` будут выведены сообщества с включёнными товарами.\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"sort\",\r\n            \"description\": \"* `0` — сортировать по умолчанию (аналогично результатам поиска в полной версии сайта);\\n* `6` — сортировать по количеству пользователей.\\n\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"offset\",\r\n            \"description\": \"Смещение, необходимое для выборки определённого подмножества результатов поиска. По умолчанию — `0`.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"count\",\r\n            \"description\": \"Количество результатов поиска, которое необходимо вернуть.\\n\\n> Обратите внимание, даже при использовании параметра `offset` для получения информации доступны только первые 1000 результатов.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"groups.toggleMarket\",\r\n        \"description\": \"Переключает функционал раздела «Товаров» в выбранной группе.\",\r\n        \"access_rights\": [\r\n          \"groups\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"group_id\",\r\n            \"description\": \"Идентификатор сообщества, в котором необходимо переключить функционал магазина.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"state\",\r\n            \"description\": \"Значение переключателя. \\nВозможные значения:\\n*  `none` — товары отключены;\\n*  `basic` — базовые товары;\\n*  `advanced` — расширенные товары.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"ref\",\r\n            \"description\": \"\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"utm_source\",\r\n            \"description\": \"\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"utm_medium\",\r\n            \"description\": \"\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"utm_campaign\",\r\n            \"description\": \"\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"utm_content\",\r\n            \"description\": \"\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"utm_term\",\r\n            \"description\": \"\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"promocode\",\r\n            \"description\": \"\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"title\": \"LeadForms\",\r\n    \"methods\": [\r\n      {\r\n        \"title\": \"leadForms.create\",\r\n        \"description\": \"Создаёт форму сбора заявок.\",\r\n        \"access_rights\": [\r\n          \"groups\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"group_id\",\r\n            \"description\": \"Идентификатор группы, в которой надо создать форму.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"name\",\r\n            \"description\": \"Название формы (видно только администратору).\",\r\n            \"type\": \"string\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"title\",\r\n            \"description\": \"Заголовок формы (видят пользователи).\",\r\n            \"type\": \"string\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"description\",\r\n            \"description\": \"Описание формы.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"questions\",\r\n            \"description\": \"Информация о вопросах формы. Массив структур следующего формата:\\n*  `type` — тип вопроса;\\n*  `label` — заголовок вопроса (только для нестандартных вопросов);\\n*  `key` — уникальный ключ вопроса (необязательно; только для нестандартных вопросов);\\n*  `options` — массив возможных ответов на вопрос (только для нестандартных вопросов типа `radio`, `select`, `checkbox`).\\n\\nТипы стандартных вопросов:\\n*  `first_name` — имя;\\n*  `patronymic_name` — отчество;\\n*  `last_name` — фамилия;\\n*  `email` — адрес электронной почты;\\n*  `phone_number` — номер телефона;\\n*  `age` — возраст;\\n*  `birthday` — день рождения;\\n*  `location` — город и страна.\\n\\nТипы нестандартных вопросов:\\n*  `input` — простое текстовое поле (строка);\\n*  `textarea` — большое текстовое поле (абзац);\\n*  `radio` — выбор одного из нескольких вариантов;\\n*  `checkbox` — выбор нескольких вариантов;\\n*  `select` — выбор одного варианта из выпадающего списка.\\n\\n`options` должен быть массивом структур, описывающих варианты ответа:\\n*  `label` — текст ответа;\\n*  `key` — ключ ответа (необязательно).\\n\\nПример:\\n```json\\n[[\\n   {\\n      \\\"type\\\":\\\"first_name\\\"\\n   },\\n   {\\n      \\\"type\\\":\\\"input\\\",\\n      \\\"label\\\":\\\"Кличка кота\\\"\\n   },\\n   {\\n      \\\"type\\\":\\\"select\\\",\\n      \\\"key\\\":\\\"favorite_color\\\",\\n      \\\"label\\\":\\\"Любимый цвет\\\",\\n      \\\"options\\\":[{\\n        \\\"key\\\":\\\"red\\\",\\n        \\\"label\\\":\\\"Красный\\\"\\n      },{\\n        \\\"key\\\":\\\"green\\\",\\n        \\\"label\\\":\\\"Зелёный\\\"\\n      }]]\\n   },\\n   {\\n      \\\"type\\\":\\\"radio\\\",\\n      \\\"label\\\":\\\"Я ношу часы...\\\",\\n      \\\"options\\\":[[{\\n         \\\"key\\\":\\\"left\\\",\\n         \\\"label\\\":\\\"на левой руке\\\"\\n      },{\\n         \\\"key\\\":\\\"right\\\",\\n         \\\"label\\\":\\\"на правой руке\\\"\\n      }]]\\n   },\\n   {\\n      \\\"type\\\":\\\"checkbox\\\",\\n      \\\"key\\\":\\\"visited_cities\\\",\\n      \\\"label\\\":\\\"Города, в которых я был\\\",\\n      \\\"options\\\":[[{\\n         \\\"label\\\":\\\"Екатеринбург\\\"\\n      },{\\n         \\\"label\\\":\\\"Волгоград\\\"\\n      },{\\n         \\\"label\\\":\\\"Санкт-Петербург\\\"      \\n      }]]\\n   }\\n]\\n```\",\r\n            \"type\": \"text\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"policy_link_url\",\r\n            \"description\": \"Ссылка на политику конфиденциальности.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"photo\",\r\n            \"description\": \"Обложка формы.\\n\\nИспользуйте значение, полученное после загрузки фотографии на сервер. См. метод [leadForms.getUploadURL](method/leadForms.getUploadURL).\\n\\nТакже можно переиспользовать существующую фотографию из другой формы. Используйте значение поля `photo`, которое возвращает метод [leadForms.get](method/leadForms.get) или [leadForms.list](method/leadForms.list).\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"confirmation\",\r\n            \"description\": \"Текст подтверждения, который увидит пользователь после отправки формы.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"site_link_url\",\r\n            \"description\": \"Ссылка на сайт или сообщество автора формы.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"active\",\r\n            \"description\": \"Передайте `1`, чтобы активировать форму сразу после создания. Пользователи могут оставлять заявки только в активных формах.\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"once_per_user\",\r\n            \"description\": \"Передайте `1`, чтобы разрешить каждому пользователю заполнять форму только один раз.\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"pixel_code\",\r\n            \"description\": \"Передайте код пикселя ретаргетинга ВКонтакте в виде `VK-RTRG-000000-XXXXX`. По этому пикселю будет собираться аудитория пользователей, открывших форму. Подробнее о пикселе см. [здесь](https://vk.com/faq12142).\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"notify_admins\",\r\n            \"description\": \"Передайте список идентификаторов пользователей, которым будут отправлены оповещения о заполнении пользователями формы. Оповещения могут быть отправлены только администраторам сообщества.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"notify_emails\",\r\n            \"description\": \"Передайте список email-адресов, разделённых запятой, на которые будут отправлены оповещения о заполнении пользователями формы. Можно указать до **10** адресов.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"leadForms.delete\",\r\n        \"description\": \"Удаляет форму сбора заявок.\",\r\n        \"access_rights\": [\r\n          \"groups\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"group_id\",\r\n            \"description\": \"Идентификатор группы, из которой надо удалить форму.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"form_id\",\r\n            \"description\": \"Идентификатор удаляемой формы.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": true\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"leadForms.get\",\r\n        \"description\": \"Возвращает информацию о форме сбора заявок.\",\r\n        \"access_rights\": [\r\n          \"groups\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"group_id\",\r\n            \"description\": \"Идентификатор группы, в которой находится форма.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"form_id\",\r\n            \"description\": \"Идентификатор формы.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": true\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"leadForms.getLeads\",\r\n        \"description\": \"Возвращает заявки формы.\",\r\n        \"access_rights\": [\r\n          \"groups\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"group_id\",\r\n            \"description\": \"Идентификатор сообщества, в котором находится форма.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"form_id\",\r\n            \"description\": \"Идентификатор формы.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"limit\",\r\n            \"description\": \"Количество возвращаемых заявок за один запрос.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"next_page_token\",\r\n            \"description\": \"Строка, полученная из предыдущего запроса для получения следующей порции результатов.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"leadForms.getUploadURL\",\r\n        \"description\": \"Возвращает URL для загрузки обложки для формы.\",\r\n        \"access_rights\": [\r\n          \"groups\"\r\n        ],\r\n        \"params\": []\r\n      },\r\n      {\r\n        \"title\": \"leadForms.list\",\r\n        \"description\": \"Возвращает список форм сообщества.\",\r\n        \"access_rights\": [\r\n          \"groups\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"group_id\",\r\n            \"description\": \"Идентификатор сообщества.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": true\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"leadForms.update\",\r\n        \"description\": \"Обновляет форму сбора заявок.\",\r\n        \"access_rights\": [\r\n          \"groups\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"group_id\",\r\n            \"description\": \"Идентификатор группы, в которой надо обновить форму.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"form_id\",\r\n            \"description\": \"Идентификатор формы, которую надо обновить.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"name\",\r\n            \"description\": \"Новое название формы (видно только администратору).\",\r\n            \"type\": \"string\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"title\",\r\n            \"description\": \"Новый заголовок формы (видят пользователи).\",\r\n            \"type\": \"string\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"description\",\r\n            \"description\": \"Новое описание формы.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"questions\",\r\n            \"description\": \"Новые вопросы формы. Подробнее см. метод [leadForms.create](method/leadForms.create).\",\r\n            \"type\": \"text\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"policy_link_url\",\r\n            \"description\": \"Новая ссылка на политику конфиденциальности.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"photo\",\r\n            \"description\": \"Новая обложка формы.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"confirmation\",\r\n            \"description\": \"Новый текст подтверждения, который увидит пользователь после отправки формы.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"site_link_url\",\r\n            \"description\": \"Новая ссылка на сайт или сообщество автора формы.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"active\",\r\n            \"description\": \"Передайте `1`, чтобы активировать форму. Пользователи могут оставлять заявки только в активных формах.\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"once_per_user\",\r\n            \"description\": \"Передайте `1`, чтобы разрешить каждому пользователю заполнять форму только один раз.\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"pixel_code\",\r\n            \"description\": \"Новый код пикселя ретаргетинга ВКонтакте.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"notify_admins\",\r\n            \"description\": \"Новый список идентификаторов пользователей, которым будут отправлены оповещения о заполнении пользователями формы. Оповещения могут быть отправлены только администраторам сообщества.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"notify_emails\",\r\n            \"description\": \"Новый список email-адресов, разделённых запятой, на которые будут отправлены оповещения о заполнении пользователями формы. Можно указать до **10** адресов.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"title\": \"Likes\",\r\n    \"methods\": [\r\n      {\r\n        \"title\": \"likes.getList\",\r\n        \"description\": \"Получает список идентификаторов пользователей, которые добавили заданный объект в свой список «Мне нравится».\",\r\n        \"access_rights\": [],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"type\",\r\n            \"description\": \"Тип объекта. \\nВозможные типы:\\n* `post` — запись на стене пользователя или группы;\\n* `post_ads` — рекламная запись;\\n* `comment` — комментарий к записи на стене;\\n* `photo` — фотография;\\n* `audio` — аудиозапись;\\n* `video` — видеозапись;\\n* `note` — заметка;\\n* `market` — товар;\\n* `photo_comment` — комментарий к фотографии;\\n* `video_comment` — комментарий к видеозаписи;\\n* `topic_comment` — комментарий в обсуждении;\\n* `market_comment` — комментарий к товару;\\n* `sitepage` — страница сайта, на котором установлен [виджет «Мне нравится»](widgets/like).\\n\",\r\n            \"type\": \"string\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"owner_id\",\r\n            \"description\": \"Идентификатор владельца Like-объекта: id пользователя, id сообщества (со знаком «минус») или id приложения. Если параметр `type` равен `sitepage`, то в качестве `owner_id` необходимо передавать `id` приложения. Если параметр не задан, то считается, что он равен либо идентификатору текущего пользователя, либо идентификатору текущего приложения (если `type` равен `sitepage`).\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"item_id\",\r\n            \"description\": \"Идентификатор Like-объекта. Если `type` равен `sitepage`, то параметр `item_id` может содержать значение параметра `page_id`, используемый при инициализации [виджета «Мне нравится»](widgets/like).\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"page_url\",\r\n            \"description\": \"URL страницы, на которой установлен [виджет «Мне нравится»](widgets/like). Используется вместо параметра `item_id`, если при размещении виджета не был указан `page_id`.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"filter\",\r\n            \"description\": \"Указывает, следует ли вернуть всех пользователей, добавивших объект в список «Мне нравится» или только тех, которые рассказали о нём друзьям. Параметр может принимать следующие значения:\\n* `likes` — возвращать информацию обо всех пользователях. \\n* `copies` — возвращать информацию только о пользователях, рассказавших об объекте друзьям.\\nПо умолчанию возвращается информация обо всех пользователях.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"friends_only\",\r\n            \"description\": \"Указывает, необходимо ли возвращать только пользователей, которые являются друзьями текущего пользователя. Параметр может принимать следующие значения:\\n* `0` — возвращать всех пользователей в порядке убывания времени добавления объекта;\\n* `1` — возвращать только друзей текущего пользователя в порядке убывания времени добавления объекта. \\nЕсли метод был вызван без авторизации или параметр не был задан, то считается, что он равен `0`.\\n\\n\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"extended\",\r\n            \"description\": \"`1` — возвращать расширенную информацию о пользователях и сообществах из списка поставивших отметку «Мне нравится» или сделавших репост. По умолчанию — `0`.\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"offset\",\r\n            \"description\": \"Смещение, относительно начала списка, для выборки определенного подмножества. Если параметр не задан, то считается, что он равен `0`.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"count\",\r\n            \"description\": \"Количество возвращаемых идентификаторов пользователей.\\nЕсли параметр не задан, то считается, что он равен 100, если не задан параметр `friends_only`, в противном случае 10.\\nМаксимальное значение параметра 1000, если не задан параметр `friends_only`, в противном случае 100.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"skip_own\",\r\n            \"description\": \"Не возвращать самого пользователя.\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"likes.isLiked\",\r\n        \"description\": \"Проверяет, находится ли объект в списке **Мне нравится** заданного пользователя.\",\r\n        \"access_rights\": [],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"user_id\",\r\n            \"description\": \"Идентификатор пользователя, у которого необходимо проверить наличие объекта в списке «Мне нравится». Если параметр не задан, то считается, что он равен идентификатору текущего пользователя.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"type\",\r\n            \"description\": \"Тип объекта. \\nВозможные типы:\\n* `post` — запись на стене пользователя или группы;\\n\\n* `comment` — комментарий к записи на стене;\\n\\n* `photo` — фотография;\\n\\n* `audio` — аудиозапись;\\n\\n* `video` — видеозапись;\\n\\n* `note` — заметка;\\n\\n* `photo_comment` — комментарий к фотографии;\\n\\n* `video_comment` — комментарий к видеозаписи;\\n\\n* `topic_comment` — комментарий в обсуждении.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"owner_id\",\r\n            \"description\": \"Идентификатор владельца Like-объекта. Если параметр не задан, то считается, что он равен идентификатору текущего пользователя.\\n\\n> Обратите внимание, идентификатор сообщества в параметре `owner_id` необходимо указывать со знаком `«-»` — например, `owner_id`=`-1` соответствует идентификатору сообщества [ВКонтакте API](https://vk.com/apiclub) (club1)\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"item_id\",\r\n            \"description\": \"Идентификатор объекта.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": true\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"title\": \"Market\",\r\n    \"methods\": [\r\n      {\r\n        \"title\": \"market.add\",\r\n        \"description\": \"Добавляет новый товар.\",\r\n        \"access_rights\": [\r\n          \"market\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"owner_id\",\r\n            \"description\": \"Идентификатор владельца товара.\\n> Обратите внимание, идентификатор сообщества в параметре `owner_id` необходимо указывать со знаком «`-`» — например, `owner_id`=`-1` соответствует идентификатору сообщества [ВКонтакте API](https://vk.com/apiclub) (club1).\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"name\",\r\n            \"description\": \"Название товара. Ограничение по длине считается в кодировке `cp1251`.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"description\",\r\n            \"description\": \"Описание товара.\",\r\n            \"type\": \"text\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"category_id\",\r\n            \"description\": \"Идентификатор категории товара.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"price\",\r\n            \"description\": \"Цена товара.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"old_price\",\r\n            \"description\": \"Старая цена товара.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"deleted\",\r\n            \"description\": \"Статус товара (`1` — товар удалён, `0` — товар не удалён).\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"main_photo_id\",\r\n            \"description\": \"Идентификатор фотографии обложки товара.\\n\\nФотография должна быть загружена с помощью метода [photos.getMarketUploadServer](method/photos.getMarketUploadServer), передав параметр `main_photo`. См. [подробную информацию](api/upload#Загрузка%20фотографии%20для%20товара) о загрузке фотографии товаров.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"photo_ids\",\r\n            \"description\": \"Идентификаторы дополнительных фотографий товара.\\n\\nФотография должна быть загружена с помощью метода [photos.getMarketUploadServer](method/photos.getMarketUploadServer). См. [подробную информацию](api/upload#Загрузка%20фотографии%20для%20товара) о загрузке фотографии товаров.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"url\",\r\n            \"description\": \"Ссылка на сайт товара.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"dimension_width\",\r\n            \"description\": \"Ширина в миллиметрах.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"dimension_height\",\r\n            \"description\": \"Высота в миллиметрах.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"dimension_length\",\r\n            \"description\": \"Глубина в миллиметрах.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"weight\",\r\n            \"description\": \"Вес в граммах.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"sku\",\r\n            \"description\": \"Артикул товара, произвольная строка.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"market.addAlbum\",\r\n        \"description\": \"Добавляет новую подборку с товарами.\",\r\n        \"access_rights\": [\r\n          \"market\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"owner_id\",\r\n            \"description\": \"Идентификатор владельца подборки.\\n\\n> Обратите внимание, идентификатор сообщества в параметре `owner_id` необходимо указывать со знаком «`-`» — например, `owner_id`=`-1` соответствует идентификатору сообщества [ВКонтакте API](https://vk.com/apiclub) (club1).\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"title\",\r\n            \"description\": \"Название подборки.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"photo_id\",\r\n            \"description\": \"Идентификатор фотографии-обложки подборки.\\n\\nФотография должна быть загружена с помощью метода [photos.getMarketAlbumUploadServer](method/photos.getMarketAlbumUploadServer). См. [подробную информацию](api/upload#Загрузка%20фотографии%20для%20товара) о загрузке фотографии товаров.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"main_album\",\r\n            \"description\": \"Назначить подборку основной (`1` — назначить, `0` — нет).\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"is_hidden\",\r\n            \"description\": \"Сделать подборку скрытой.\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"market.addToAlbum\",\r\n        \"description\": \"Добавляет товар в одну или несколько выбранных подборок.\",\r\n        \"access_rights\": [\r\n          \"market\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"owner_id\",\r\n            \"description\": \"Идентификатор владельца товара.\\n\\n> Обратите внимание, идентификатор сообщества в параметре `owner_id` необходимо указывать со знаком «`-`» — например, `owner_id`=`-1` соответствует идентификатору сообщества [ВКонтакте API](https://vk.com/apiclub) (club1).\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"item_id\",\r\n            \"description\": \"Идентификатор товара.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"item_ids\",\r\n            \"description\": \"Идентификаторы товаров, если нужно добавить сразу несколько.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"album_ids\",\r\n            \"description\": \"Идентификаторы подборок, в которые нужно добавить товар.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": true\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"market.createComment\",\r\n        \"description\": \"Создаёт новый комментарий к товару.\",\r\n        \"access_rights\": [\r\n          \"market\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"owner_id\",\r\n            \"description\": \"Идентификатор владельца товара.\\n\\n> Обратите внимание, идентификатор сообщества в параметре `owner_id` необходимо указывать со знаком «`-`» — например, `owner_id`=`-1` соответствует идентификатору сообщества [ВКонтакте API](https://vk.com/apiclub) (club1).\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"item_id\",\r\n            \"description\": \"Идентификатор товара.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"message\",\r\n            \"description\": \"Текст комментария (является обязательным, если не задан параметр `attachments`).\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"attachments\",\r\n            \"description\": \"Список объектов, приложенных к комментарию и разделённых символом \\\",\\\". Поле **attachments** представляется в формате:\\n\\n```\\n<type><owner_id>_<media_id>,<type><owner_id>_<media_id>\\n```\\n\\n`<type>` — тип медиа-вложения:\\n* `photo` — фотография \\n* `video` — видеозапись \\n* `audio` — аудиозапись \\n* `doc` — документ\\n\\n`<owner_id>` — идентификатор владельца медиа-вложения \\n`<media_id>` — идентификатор медиа-вложения. \\n\\nНапример:\\n\\n```\\nphoto100172_166443618,photo66748_265827614\\n```\\n\\nПараметр является обязательным, если не задан параметр `message`.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"from_group\",\r\n            \"description\": \"`1` — комментарий будет опубликован от имени группы, `0` — комментарий будет опубликован от имени пользователя (по умолчанию).\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"reply_to_comment\",\r\n            \"description\": \"Идентификатор комментария, в ответ на который должен быть добавлен новый комментарий.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"sticker_id\",\r\n            \"description\": \"Идентификатор стикера.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"guid\",\r\n            \"description\": \"Уникальный идентификатор, предназначенный для предотвращения повторной отправки одинакового комментария.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"market.delete\",\r\n        \"description\": \"Удаляет товар.\",\r\n        \"access_rights\": [\r\n          \"market\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"owner_id\",\r\n            \"description\": \"Идентификатор владельца товара.\\n\\n> Обратите внимание, идентификатор сообщества в параметре `owner_id` необходимо указывать со знаком «`-`» — например, `owner_id`=`-1` соответствует идентификатору сообщества [ВКонтакте API](https://vk.com/apiclub) (club1).\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"item_id\",\r\n            \"description\": \"Идентификатор товара.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": true\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"market.deleteAlbum\",\r\n        \"description\": \"Удаляет подборку с товарами.\",\r\n        \"access_rights\": [\r\n          \"market\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"owner_id\",\r\n            \"description\": \"Идентификатор владельца подборки.\\n\\n\\n> Обратите внимание, идентификатор сообщества в параметре `owner_id` необходимо указывать со знаком «`-`» — например, `owner_id`=`-1` соответствует идентификатору сообщества [ВКонтакте API](https://vk.com/apiclub) (club1).\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"album_id\",\r\n            \"description\": \"Идентификатор подборки.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": true\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"market.deleteComment\",\r\n        \"description\": \"Удаляет комментарий к товару.\",\r\n        \"access_rights\": [\r\n          \"market\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"owner_id\",\r\n            \"description\": \"Идентификатор владельца товара.\\n\\n> Обратите внимание, идентификатор сообщества в параметре `owner_id` необходимо указывать со знаком «`-`» — например, `owner_id`=`-1` соответствует идентификатору сообщества [ВКонтакте API](https://vk.com/apiclub) (club1).\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"comment_id\",\r\n            \"description\": \"Идентификатор комментария.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": true\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"market.edit\",\r\n        \"description\": \"Редактирует товар.\",\r\n        \"access_rights\": [\r\n          \"market\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"owner_id\",\r\n            \"description\": \"Идентификатор владельца товара.\\n\\n> Обратите внимание, идентификатор сообщества в параметре `owner_id` необходимо указывать со знаком «`-`» — например, `owner_id`=`-1` соответствует идентификатору сообщества [ВКонтакте API](https://vk.com/apiclub) (club1).\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"item_id\",\r\n            \"description\": \"Идентификатор товара.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"name\",\r\n            \"description\": \"Новое название товара.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"description\",\r\n            \"description\": \"Новое описание товара.\",\r\n            \"type\": \"text\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"category_id\",\r\n            \"description\": \"Идентификатор категории товара.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"price\",\r\n            \"description\": \"Цена товара.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"old_price\",\r\n            \"description\": \"Старая цена.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"deleted\",\r\n            \"description\": \"Статус товара (`1` — товар недоступен, `0` — товар доступен).\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"main_photo_id\",\r\n            \"description\": \"Идентификатор фотографии для обложки товара.\\n\\nФотография может быть загружена с помощью метода [photos.getMarketUploadServer](method/photos.getMarketUploadServer) (параметр `main_photo`). См. [подробную информацию](api/upload#Загрузка%20фотографии%20для%20товара) о загрузке фотографии товаров. \\n\\nИдентификатор фотографии может быть также получен методами [market.get](market.get) или [market.getById](market.getById) (если вы хотите использовать существующую фотографию товара).\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"photo_ids\",\r\n            \"description\": \"Идентификаторы дополнительных фотографией товара.\\n\\nФотография должна быть загружена с помощью метода [photos.getMarketUploadServer](method/photos.getMarketUploadServer). См. [подробную информацию](api/upload#Загрузка%20фотографии%20для%20товара) о загрузке фотографии товаров.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"url\",\r\n            \"description\": \"Ссылка на сайт товара.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"dimension_width\",\r\n            \"description\": \"Ширина в миллиметрах.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"dimension_height\",\r\n            \"description\": \"Высота в миллиметрах.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"dimension_length\",\r\n            \"description\": \"Глубина в миллиметрах.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"weight\",\r\n            \"description\": \"Вес в граммах.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"sku\",\r\n            \"description\": \"Артикул товара, произвольная строка.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"market.editAlbum\",\r\n        \"description\": \"Редактирует подборку с товарами.\",\r\n        \"access_rights\": [\r\n          \"market\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"owner_id\",\r\n            \"description\": \"Идентификатор владельца подборки.\\n\\n> Обратите внимание, идентификатор сообщества в параметре `owner_id` необходимо указывать со знаком «`-`» — например, `owner_id`=`-1` соответствует идентификатору сообщества [ВКонтакте API](https://vk.com/apiclub) (club1).\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"album_id\",\r\n            \"description\": \"Идентификатор подборки.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"title\",\r\n            \"description\": \"Название подборки.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"photo_id\",\r\n            \"description\": \"Идентификатор фотографии-обложки подборки.\\n\\nФотография должна быть загружена с помощью метода . См. [подробную информацию](api/upload) о загрузке фотографии товаров.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"main_album\",\r\n            \"description\": \"Назначить подборку основной (`1` — назначить, `0` — нет).\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"is_hidden\",\r\n            \"description\": \"\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"market.editComment\",\r\n        \"description\": \"Изменяет текст комментария к товару.\",\r\n        \"access_rights\": [\r\n          \"market\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"owner_id\",\r\n            \"description\": \"Идентификатор владельца товара.\\n\\n> Обратите внимание, идентификатор сообщества в параметре `owner_id` необходимо указывать со знаком «`-`» — например, `owner_id`=`-1` соответствует идентификатору сообщества [ВКонтакте API](https://vk.com/apiclub) (club1).\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"comment_id\",\r\n            \"description\": \"Идентификатор комментария.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"message\",\r\n            \"description\": \"Новый текст комментария (является обязательным, если не задан параметр `attachments`).\\n\\nМаксимальное количество символов: 2048.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"attachments\",\r\n            \"description\": \"Новый список объектов, приложенных к комментарию и разделённых символом «,». Поле `attachments` представляется в формате:\\n\\n```\\n<type><owner_id>_<media_id>,<type><owner_id>_<media_id>\\n```\\n\\n`<type>` — тип медиа-вложения:\\n* `photo` — фотография \\n* `video` — видеозапись \\n* `audio` — аудиозапись \\n* `doc` — документ\\n\\n`<owner_id>` — идентификатор владельца медиа-вложения \\n`<media_id>` — идентификатор медиа-вложения. \\n\\nНапример:\\n\\n```\\nphoto100172_166443618,photo66748_265827614\\n```\\n\\nПараметр является обязательным, если не задан параметр `message`.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"market.editOrder\",\r\n        \"description\": \"Редактирует заказ.\",\r\n        \"access_rights\": [\r\n          \"market\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"user_id\",\r\n            \"description\": \"Идентификатор пользователя.\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"order_id\",\r\n            \"description\": \"Идентификатор заказа.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"merchant_comment\",\r\n            \"description\": \"Комментарий продавца.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"status\",\r\n            \"description\": \"Статус заказа. Возможные значения:\\n\\n*  `0` - новый;\\n*  `1` - согласуется;\\n*  `2` - собирается;\\n*  `3` - доставляется;\\n*  `4` - выполнен;\\n*  `5` - отменен;\\n*  `6` - возвращен.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"track_number\",\r\n            \"description\": \"Трек-номер.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"payment_status\",\r\n            \"description\": \"Статус платежа. Возможные значения:\\n\\n*  `not_paid` - не оплачен;\\n*  `paid` - оплачен;\\n*  `returned` - возвращен.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"delivery_price\",\r\n            \"description\": \"Стоимость доставки.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"width\",\r\n            \"description\": \"Ширина.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"length\",\r\n            \"description\": \"Длина.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"height\",\r\n            \"description\": \"Высота.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"weight\",\r\n            \"description\": \"Вес.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"comment_for_user\",\r\n            \"description\": \"Комментарий для пользователя.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"receipt_link\",\r\n            \"description\": \"Ссылка на электронный чек.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"market.get\",\r\n        \"description\": \"Возвращает список товаров в сообществе.\",\r\n        \"access_rights\": [\r\n          \"market\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"owner_id\",\r\n            \"description\": \"Идентификатор владельца товаров.\\n\\n> Обратите внимание, идентификатор сообщества в параметре `owner_id` необходимо указывать со знаком `«-»` — например, `owner_id`=`-1` соответствует идентификатору сообщества [ВКонтакте API](https://vk.com/apiclub) (club1).\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"album_id\",\r\n            \"description\": \"Идентификатор подборки, товары из которой нужно вернуть.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"count\",\r\n            \"description\": \"Количество возвращаемых товаров.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"offset\",\r\n            \"description\": \"Смещение относительно первого найденного товара для выборки определенного подмножества.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"extended\",\r\n            \"description\": \"`1` — будут возвращены дополнительные поля `likes`, `can_comment`, `can_repost`, `photos`, `views_count`. По умолчанию эти поля не возвращается.\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"date_from\",\r\n            \"description\": \"\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"date_to\",\r\n            \"description\": \"\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"need_variants\",\r\n            \"description\": \"\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"with_disabled\",\r\n            \"description\": \"\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"market.getAlbumById\",\r\n        \"description\": \"Возвращает данные подборки с товарами.\",\r\n        \"access_rights\": [\r\n          \"market\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"owner_id\",\r\n            \"description\": \"Идентификатор владельца подборки.\\n\\n> Обратите внимание, идентификатор сообщества в параметре `owner_id` необходимо указывать со знаком «`-`» — например, `owner_id`=`-1` соответствует идентификатору сообщества [ВКонтакте API](https://vk.com/apiclub) (club1).\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"album_ids\",\r\n            \"description\": \"Идентификаторы подборок, данные о которых нужно получить.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"need_all_item_ids\",\r\n            \"description\": \"\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"market.getAlbums\",\r\n        \"description\": \"Возвращает список подборок с товарами.\",\r\n        \"access_rights\": [\r\n          \"market\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"owner_id\",\r\n            \"description\": \"Идентификатор владельца товаров.\\n\\n> Обратите внимание, идентификатор сообщества в параметре `owner_id` необходимо указывать со знаком «`-`» — например, `owner_id`=`-1` соответствует идентификатору сообщества [ВКонтакте API](https://vk.com/apiclub) (club1).\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"offset\",\r\n            \"description\": \"Смещение относительно первой найденной подборки для выборки определенного подмножества.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"count\",\r\n            \"description\": \"Количество возвращаемых подборок.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"market.getById\",\r\n        \"description\": \"Возвращает информацию о товарах по идентификаторам.\",\r\n        \"access_rights\": [\r\n          \"market\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"item_ids\",\r\n            \"description\": \"Перечисленные через запятую идентификаторы — идущие через знак подчеркивания `id` владельцев товаров и `id` самих товаров. Если товар принадлежит сообществу, то в качестве первого параметра используется `-id` сообщества.\\n\\nПример значения `item_ids`:\\n\\n```\\n-4363_136089719,13245770_137352259\\n```\",\r\n            \"type\": \"string\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"extended\",\r\n            \"description\": \"`1` — будут возвращены дополнительные поля `likes`, `can_comment`, `can_repost`, `photos`, `views_count`. По умолчанию: `0`.\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"market.getCategories\",\r\n        \"description\": \"Возвращает список категорий для товаров.\",\r\n        \"access_rights\": [\r\n          \"market\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"count\",\r\n            \"description\": \"Количество категорий, информацию о которых необходимо вернуть.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"offset\",\r\n            \"description\": \"Смещение, необходимое для выборки определенного подмножества категорий.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"market.getComments\",\r\n        \"description\": \"Возвращает список комментариев к товару.\",\r\n        \"access_rights\": [\r\n          \"market\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"owner_id\",\r\n            \"description\": \"Идентификатор владельца товара.\\n\\n> Обратите внимание, идентификатор сообщества в параметре `owner_id` необходимо указывать со знаком «`-`» — например, `owner_id`=`-1` соответствует идентификатору сообщества [ВКонтакте API](https://vk.com/apiclub) (club1).\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"item_id\",\r\n            \"description\": \"Идентификатор товара.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"need_likes\",\r\n            \"description\": \"`1` — возвращать информацию о лайках.\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"start_comment_id\",\r\n            \"description\": \"Идентификатор комментария, начиная с которого нужно вернуть список (подробности см. ниже).\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"offset\",\r\n            \"description\": \"Сдвиг, необходимый для получения конкретной выборки результатов.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"count\",\r\n            \"description\": \"Число комментариев, которые необходимо получить.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"sort\",\r\n            \"description\": \"Порядок сортировки комментариев (`asc` — от старых к новым, `desc` - от новых к старым).\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"extended\",\r\n            \"description\": \"`1` — комментарии в ответе будут возвращены в виде пронумерованных объектов, дополнительно будут возвращены списки объектов `profiles`, `groups`.\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"fields\",\r\n            \"description\": \"Список дополнительных полей профилей, которые необходимо вернуть. См. [подробное описание](reference/objects/user).\\n\\nДоступные значения: \\n* `sex`; \\n* `bdate`; \\n* `city`; \\n* `country`; \\n* `photo_50`; \\n* `photo_100`; \\n* `photo_200_orig`; \\n* `photo_200`; \\n* `photo_400_orig`; \\n* `photo_max`; \\n* `photo_max_orig`; \\n* `photo_id`; \\n* `online`; \\n* `online_mobile`; \\n* `domain`; \\n* `has_mobile`; \\n* `contacts`; \\n* `connections`; \\n* `site`; \\n* `education`; \\n* `universities`; \\n* `schools`; \\n* `can_post`; \\n* `can_see_all_posts`; \\n* `can_see_audio`; \\n* `can_write_private_message`; \\n* `status`;\\n* `last_seen`;\\n* `common_count`;\\n* `relation`;\\n* `relatives`;\\n* `counters`;\\n* `screen_name`;\\n* `maiden_name`;\\n* `timezone`; \\n* `occupation`;\\n* `activities`;\\n* `interests`;\\n* `music`;\\n* `movies`;\\n* `tv`;\\n* `books`;\\n* `games`;\\n* `about`;\\n* `quotes`;\\n* `personal`;\\n* `friend_status`;\\n* `military`;\\n* `career`.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"market.getGroupOrders\",\r\n        \"description\": \"Возвращает заказы сообщества.\",\r\n        \"access_rights\": [\r\n          \"market\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"group_id\",\r\n            \"description\": \"Идентификатор или короткое имя сообщества.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"offset\",\r\n            \"description\": \"Смещение относительно первого найденного заказа для выборки определенного подмножества.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"count\",\r\n            \"description\": \"Количество возвращаемых заказов.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"market.getOrderById\",\r\n        \"description\": \"Возвращает заказ по идентификатору.\",\r\n        \"access_rights\": [\r\n          \"market\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"user_id\",\r\n            \"description\": \"Идентификатор пользователя.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"order_id\",\r\n            \"description\": \"Идентификатор заказа.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"extended\",\r\n            \"description\": \"\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"market.getOrderItems\",\r\n        \"description\": \"Возвращает товары в заказе.\",\r\n        \"access_rights\": [\r\n          \"market\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"user_id\",\r\n            \"description\": \"ID пользователя, который сделал заказ.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"order_id\",\r\n            \"description\": \"Идентификатор заказа.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"offset\",\r\n            \"description\": \"Смещение относительно первого найденного товара в заказе для выборки определенного подмножества.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"count\",\r\n            \"description\": \"Количество возвращаемых товаров в заказе.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"market.getOrders\",\r\n        \"description\": \"Возвращает заказы.\",\r\n        \"access_rights\": [\r\n          \"market\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"offset\",\r\n            \"description\": \"Смещение относительно первого найденного заказа для выборки определенного подмножества.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"count\",\r\n            \"description\": \"Число заказов, которые необходимо получить.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"extended\",\r\n            \"description\": \"`1` – вернуть в ответе дополнительное поле `groups` (`array`), содержащее список объектов [сообществ](reference/objects/group).\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"date_from\",\r\n            \"description\": \"\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"date_to\",\r\n            \"description\": \"\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"market.removeFromAlbum\",\r\n        \"description\": \"Удаляет товар из одной или нескольких выбранных подборок.\",\r\n        \"access_rights\": [\r\n          \"market\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"owner_id\",\r\n            \"description\": \"Идентификатор владельца товара.\\n\\n> Обратите внимание, идентификатор сообщества в параметре `owner_id` необходимо указывать со знаком «`-`» — например, `owner_id`=`-1` соответствует идентификатору сообщества [ВКонтакте API](https://vk.com/apiclub) (club1).\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"item_id\",\r\n            \"description\": \"Идентификатор товара.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"album_ids\",\r\n            \"description\": \"Идентификаторы подборок, из которых нужно удалить товар.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": true\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"market.reorderAlbums\",\r\n        \"description\": \"Изменяет положение подборки с товарами в списке.\",\r\n        \"access_rights\": [\r\n          \"market\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"owner_id\",\r\n            \"description\": \"Идентификатор владельца альбома.\\n\\n> Обратите внимание, идентификатор сообщества в параметре `owner_id` необходимо указывать со знаком «`-`» — например, `owner_id`=`-1` соответствует идентификатору сообщества [ВКонтакте API](https://vk.com/apiclub) (club1).\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"album_id\",\r\n            \"description\": \"Идентификатор подборки.\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"before\",\r\n            \"description\": \"Идентификатор подборки, перед которой следует поместить текущую.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"after\",\r\n            \"description\": \"Идентификатор подборки, после которой следует поместить текущую.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"market.reorderItems\",\r\n        \"description\": \"Изменяет положение товара в подборке.\",\r\n        \"access_rights\": [\r\n          \"market\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"owner_id\",\r\n            \"description\": \"Идентификатор владельца товара.\\n\\n> Обратите внимание, идентификатор сообщества в параметре `owner_id` необходимо указывать со знаком «`-`» — например, `owner_id`=`-1` соответствует идентификатору сообщества [ВКонтакте API](https://vk.com/apiclub) (club1).\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"album_id\",\r\n            \"description\": \"Идентификатор подборки, в которой находится товар. `0` — для сортировки общего списка товаров.\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"item_id\",\r\n            \"description\": \"Идентификатор товара.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"before\",\r\n            \"description\": \"Идентификатор товара, перед которым следует поместить текущий.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"after\",\r\n            \"description\": \"Идентификатор товара, после которого следует поместить текущий.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"market.report\",\r\n        \"description\": \"Позволяет отправить жалобу на товар.\",\r\n        \"access_rights\": [\r\n          \"market\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"owner_id\",\r\n            \"description\": \"Идентификатор владельца товаров.\\n\\n> Обратите внимание, идентификатор сообщества в параметре `owner_id` необходимо указывать со знаком «`-`» — например, `owner_id`=`-1` соответствует идентификатору сообщества [ВКонтакте API](https://vk.com/apiclub) (club1).\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"item_id\",\r\n            \"description\": \"Идентификатор товара\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"reason\",\r\n            \"description\": \"Причина жалобы:\\n*  `0` — спам;\\n*  `1` — детская порнография;\\n*  `2` — экстремизм;\\n*  `3` — насилие;\\n*  `4` — пропаганда наркотиков;\\n*  `5` — материал для взрослых;\\n*  `6` — оскорбление.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": true\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"market.reportComment\",\r\n        \"description\": \"Позволяет оставить жалобу на комментарий к товару.\",\r\n        \"access_rights\": [\r\n          \"market\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"owner_id\",\r\n            \"description\": \"Идентификатор владельца товара.\\n\\n> Обратите внимание, идентификатор сообщества в параметре `owner_id` необходимо указывать со знаком «`-`» — например, `owner_id`=`-1` соответствует идентификатору сообщества [ВКонтакте API](https://vk.com/apiclub) (club1).\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"comment_id\",\r\n            \"description\": \"Идентификатор комментария.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"reason\",\r\n            \"description\": \"причина жалобы:\\n*  `0` — спам;\\n*  `1` — детская порнография;\\n*  `2` — экстремизм;\\n*  `3` — насилие;\\n*  `4` — пропаганда наркотиков;\\n*  `5` — материал для взрослых;\\n*  `6` — оскорбление.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"market.restore\",\r\n        \"description\": \"Восстанавливает удаленный товар.\",\r\n        \"access_rights\": [\r\n          \"market\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"owner_id\",\r\n            \"description\": \"Идентификатор владельца товара.\\n\\n> Обратите внимание, идентификатор сообщества в параметре `owner_id` необходимо указывать со знаком «`-`» — например, `owner_id`=`-1` соответствует идентификатору сообщества [ВКонтакте API](https://vk.com/apiclub) (club1).\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"item_id\",\r\n            \"description\": \"Идентификатор товара.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": true\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"market.restoreComment\",\r\n        \"description\": \"Восстанавливает удаленный комментарий к товару.\",\r\n        \"access_rights\": [\r\n          \"market\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"owner_id\",\r\n            \"description\": \"Идентификатор владельца товара.\\n\\n> Обратите внимание, идентификатор сообщества в параметре `owner_id` необходимо указывать со знаком «`-`» — например, `owner_id`=`-1` соответствует идентификатору сообщества [ВКонтакте API](https://vk.com/apiclub) (club1).\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"comment_id\",\r\n            \"description\": \"Идентификатор удаленного комментария.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": true\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"market.search\",\r\n        \"description\": \"Ищет товары в каталоге сообщества.\",\r\n        \"access_rights\": [\r\n          \"market\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"owner_id\",\r\n            \"description\": \"Идентификатор сообщества, которому принадлежат товары.\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"album_id\",\r\n            \"description\": \"Идентификатор подборки, товары из которой нужно вернуть.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"q\",\r\n            \"description\": \"Строка поискового запроса. Например, «зелёные тапочки».\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"price_from\",\r\n            \"description\": \"Минимальное значение цены товаров в сотых долях единицы валюты. Например, 100000.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"price_to\",\r\n            \"description\": \"Максимальное значение цены товаров  в сотых долях единицы валюты. Например, 1410000.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"sort\",\r\n            \"description\": \"Вид сортировки.  \\n* `0` — пользовательская расстановка;\\n* `1` — по дате добавления товара;\\n* `2` — по цене;\\n* `3` — по популярности.\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"rev\",\r\n            \"description\": \"`0` — не использовать обратный порядок, `1` — использовать обратный порядок.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"offset\",\r\n            \"description\": \"Смещение относительно первого найденного товара для выборки определенного подмножества.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"count\",\r\n            \"description\": \"Количество возвращаемых товаров.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"extended\",\r\n            \"description\": \"`1` — будут возвращены дополнительные поля `likes`, `can_comment`, `can_repost`, `photos`, `views_count`. По умолчанию эти поля не возвращается.\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"status\",\r\n            \"description\": \"\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"need_variants\",\r\n            \"description\": \"\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"market.searchItems\",\r\n        \"description\": \"\",\r\n        \"access_rights\": [\r\n          \"market\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"q\",\r\n            \"description\": \"\",\r\n            \"type\": \"string\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"offset\",\r\n            \"description\": \"\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"count\",\r\n            \"description\": \"\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"category_id\",\r\n            \"description\": \"\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"price_from\",\r\n            \"description\": \"\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"price_to\",\r\n            \"description\": \"\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"sort_by\",\r\n            \"description\": \"\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"sort_direction\",\r\n            \"description\": \"\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"country\",\r\n            \"description\": \"\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"city\",\r\n            \"description\": \"\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"title\": \"Newsfeed\",\r\n    \"methods\": [\r\n      {\r\n        \"title\": \"newsfeed.get\",\r\n        \"description\": \"Возвращает данные, необходимые для показа списка новостей для текущего пользователя.\",\r\n        \"access_rights\": [\r\n          \"wall\",\r\n          \"friends\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"filters\",\r\n            \"description\": \"Перечисленные через запятую названия списков новостей, которые необходимо получить. В данный момент поддерживаются следующие списки новостей:\\n* `post` — новые записи со стен;\\n* `photo` — новые фотографии;\\n* `photo_tag` — новые отметки на фотографиях;\\n* `wall_photo` — новые фотографии на стенах;\\n* `friend` — новые друзья;\\n* `note` — новые заметки;\\n* `audio` — записи сообществ и друзей, содержащие аудиозаписи, а также новые аудиозаписи, добавленные ими;\\n* `video` — новые видеозаписи.\\n\\nЕсли параметр не задан, то будут получены все возможные списки новостей.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"return_banned\",\r\n            \"description\": \"`1` - включить в выдачу также скрытых из новостей пользователей. `0` - не возвращать скрытых пользователей.\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"start_time\",\r\n            \"description\": \"Время в формате `unixtime`, начиная с которого следует получить новости для текущего пользователя.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"end_time\",\r\n            \"description\": \"Время в формате `unixtime`, до которого следует получить новости для текущего пользователя. Если параметр не задан, то он считается равным текущему времени.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"max_photos\",\r\n            \"description\": \"Максимальное количество фотографий, информацию о которых необходимо вернуть. По умолчанию: `5`, максимальное значение: `100`.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"source_ids\",\r\n            \"description\": \"Перечисленные через запятую иcточники новостей, новости от которых необходимо получить.\\n\\nИдентификаторы пользователей можно указывать в форматах\\n\\n> `<uid>` или `u<uid>`\\n\\nгде `<uid>` — идентификатор друга пользователя.\\n\\nИдентификаторы сообществ можно указывать в форматах\\n\\n> `-<gid>` или `g<gid>`\\n\\nгде `<gid>` — идентификатор сообщества.\\n\\nПомимо этого параметр может принимать строковые значения:\\n* `friends` — список друзей пользователя;\\n* `groups` — список групп, на которые подписан текущий пользователь;\\n* `pages` — список публичных страниц, на который подписан тeкущий пользователь;\\n* `following` — список пользователей, на которых подписан текущий пользователь;\\n* `list{идентификатор списка новостей}` — список новостей. Вы можете найти все списки новостей пользователя используя метод [newsfeed.getLists](method/newsfeed.getLists). \\n\\nЕсли параметр не задан, то считается, что он включает список всех друзей и групп пользователя, за исключением скрытых источников, которые можно получить методом [newsfeed.getBanned](method/newsfeed.getBanned).\\n\\nМаксимальное число символов — **5000**.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"from\",\r\n            \"description\": \"Значение, полученное в поле `new_from` при последней загрузке новостей. Помогает избавляться от дубликатов при реализации автоподгрузки.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"offset\",\r\n            \"description\": \"Указывает, начиная с какого элемента в данном промежутке времени необходимо получить новости. По умолчанию `0`. Для автоподгрузки Вы можете использовать возвращаемый данным методом параметр `new_offset`.\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"start_from\",\r\n            \"description\": \"Идентификатор, необходимый для получения следующей страницы результатов. Значение, необходимое для передачи в этом параметре, возвращается в поле ответа `next_from`.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"count\",\r\n            \"description\": \"Указывает, какое максимальное число новостей следует возвращать, но не более **100**. По умолчанию **50**.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"fields\",\r\n            \"description\": \"Список дополнительных полей для профилей и  групп, которые необходимо вернуть. См. [описание полей объекта user](reference/objects/user) и [описание полей объекта group](reference/objects/group).\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"section\",\r\n            \"description\": \"\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"newsfeed.getMentions\",\r\n        \"description\": \"Возвращает список записей пользователей на своих стенах, в которых упоминается указанный пользователь.\",\r\n        \"access_rights\": [\r\n          \"wall\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"owner_id\",\r\n            \"description\": \"Идентификатор пользователя или сообщества.\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"start_time\",\r\n            \"description\": \"Время в формате `unixtime` начиная с которого следует получать упоминания о пользователе.\\nЕсли параметр не задан, то будут возвращены все упоминания о пользователе, если не задан параметр `end_time`, в противном случае упоминания с учетом параметра `end_time`.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"end_time\",\r\n            \"description\": \"Время, в формате `unixtime`, до которого следует получать упоминания о пользователе.\\nЕсли параметр не задан, то будут возвращены все упоминания о пользователе, если не задан параметр `start_time`, в противном случае упоминания с учетом параметра `start_time`.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"offset\",\r\n            \"description\": \"Смещение, необходимое для выборки определенного подмножества новостей. По умолчанию **0**.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"count\",\r\n            \"description\": \"Количество возвращаемых записей. Если параметр не задан, то считается, что он равен **20**. Максимальное значение параметра **50**.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"newsfeed.getRecommended\",\r\n        \"description\": \"Получает список новостей, рекомендованных пользователю.\",\r\n        \"access_rights\": [\r\n          \"wall\",\r\n          \"friends\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"start_time\",\r\n            \"description\": \"Время в формате `unixtime`, начиная с которого следует получить новости для текущего пользователя. Если параметр не задан, то он считается равным значению времени, которое было сутки назад.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"end_time\",\r\n            \"description\": \"Время в формате `unixtime`, до которого следует получить новости для текущего пользователя. Если параметр не задан, то он считается равным текущему времени.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"max_photos\",\r\n            \"description\": \"Максимальное количество фотографий, информацию о которых необходимо вернуть. По умолчанию 5.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"from\",\r\n            \"description\": \"Значение, полученное в поле `new_from` при последней загрузке новостей. Помогает избавляться от дубликатов при реализации автоподгрузки.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"offset\",\r\n            \"description\": \"Указывает, начиная с какого элемента в данном промежутке времени необходимо получить новости. По умолчанию **0**. Для автоподгрузки Вы можете использовать возвращаемый данным методом параметр `new_offset`.\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"start_from\",\r\n            \"description\": \"Идентификатор, необходимый для получения следующей страницы результатов. Значение, необходимое для передачи в этом параметре, возвращается в поле ответа `next_from`.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"count\",\r\n            \"description\": \"Указывает, какое максимальное число новостей следует возвращать, но не более **100**. По умолчанию **50**.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"fields\",\r\n            \"description\": \"Список дополнительных полей профилей, которые необходимо вернуть. См. [подробное описание](reference/objects/user).\\nДоступные значения: \\n* `sex`\\n* `bdate`\\n* `city` \\n* `country` \\n* `photo_50` \\n* `photo_100` \\n* `photo_200_orig`\\n* `photo_200`\\n* `photo_400_orig` \\n* `photo_max`  \\n* `photo_max_orig`  \\n* `online`  \\n* `online_mobile`  \\n* `domain`  \\n* `has_mobile`  \\n* `contacts`  \\n* `connections`  \\n* `site`  \\n* `education`  \\n* `universities`  \\n* `schools`  \\n* `can_post`  \\n* `can_see_all_posts`  \\n* `can_see_audio`  \\n* `can_write_private_message`  \\n* `status`  \\n* `last_seen`  \\n* `common_count`  \\n* `relation`  \\n* `relatives`  \\n* `counters`  \\n* `screen_name`  \\n* `maiden_name`  \\n* `timezone`  \\n* `occupation`  \\n* `activities`  \\n* `interests`  \\n* `music`  \\n* `movies`  \\n* `tv`  \\n* `books`  \\n* `games`  \\n* `about`\\n* `quotes`\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"newsfeed.getSuggestedSources\",\r\n        \"description\": \"Возвращает сообщества и пользователей, на которые текущему пользователю рекомендуется подписаться.\",\r\n        \"access_rights\": [],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"offset\",\r\n            \"description\": \"Отступ, необходимый для выборки определенного подмножества сообществ или пользователей.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"count\",\r\n            \"description\": \"Количество сообществ или пользователей, которое необходимо вернуть.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"shuffle\",\r\n            \"description\": \"Перемешивать ли возвращаемый список.\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"fields\",\r\n            \"description\": \"Список дополнительных полей, которые необходимо вернуть. См. [возможные поля для пользователей](reference/objects/user) и [сообществ](reference/objects/group).\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"newsfeed.search\",\r\n        \"description\": \"Возвращает результаты поиска по статусам. Новости возвращаются в порядке от более новых к более старым.\",\r\n        \"access_rights\": [],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"q\",\r\n            \"description\": \"Поисковой запрос, например, \\\"New Year\\\".\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"extended\",\r\n            \"description\": \"`1`, если необходимо получить информацию о пользователе или сообществе, разместившем запись. По умолчанию: `0`. \",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"count\",\r\n            \"description\": \"Указывает, какое максимальное число записей следует возвращать.\\n\\n> Обратите внимание — даже при использовании параметра `offset` для получения информации доступны только первые **1000** результатов.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"latitude\",\r\n            \"description\": \"Географическая широта точки, в радиусе от которой необходимо производить поиск, заданная в градусах (от -90 до 90).\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"longitude\",\r\n            \"description\": \"Географическая долгота точки, в радиусе от которой необходимо производить поиск, заданная в градусах (от -180 до 180).\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"start_time\",\r\n            \"description\": \"Время в формате `unixtime`, начиная с которого следует получить новости для текущего пользователя. Если параметр не задан, то он считается равным значению времени, которое было сутки назад.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"end_time\",\r\n            \"description\": \"Время в формате `unixtime`, до которого следует получить новости для текущего пользователя. Если параметр не задан, то он считается равным текущему времени.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"start_id\",\r\n            \"description\": \"Строковый идентификатор последней полученной записи (возвращается в результатах запроса (`new_from`) для того, чтобы исключить из выборки нового запроса уже полученные записи).\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"offset\",\r\n            \"description\": \"Смещение, необходимое для выборки определенного подмножества результатов поиска.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"start_from\",\r\n            \"description\": \"Идентификатор, необходимый для получения следующей страницы результатов. Значение, необходимое для передачи в этом параметре, возвращается в поле ответа `next_from`.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"fields\",\r\n            \"description\": \"Список дополнительных полей для профилей и  групп, которые необходимо вернуть. См. [описание полей объекта user](reference/objects/user) и [описание полей объекта group](reference/objects/group).\\n\\nОбратите внимание, этот параметр учитывается только при `extended`=`1`.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"title\": \"Notes\",\r\n    \"methods\": [\r\n      {\r\n        \"title\": \"notes.add\",\r\n        \"description\": \"Создает новую заметку у текущего пользователя.\",\r\n        \"access_rights\": [\r\n          \"notes\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"title\",\r\n            \"description\": \"Заголовок заметки.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"text\",\r\n            \"description\": \"Текст заметки.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"privacy\",\r\n            \"description\": \"Уровень доступа к заметке. \\nВозможные значения:\\n* `0` — все пользователи, \\n* `1` — только друзья, \\n* `2` — друзья и друзья друзей, \\n* `3` — только пользователь.\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"comment_privacy\",\r\n            \"description\": \"Уровень доступа к комментированию заметки. \\nВозможные значения:\\n* `0` — все пользователи,\\n* `1` — только друзья, \\n* `2` — друзья и друзья друзей, \\n* `3` — только пользователь.\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"privacy_view\",\r\n            \"description\": \"Настройки приватности просмотра заметки в [специальном формате](api/privacy).\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"privacy_comment\",\r\n            \"description\": \"Настройки приватности комментирования заметки в [специальном формате](api/privacy).\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"notes.delete\",\r\n        \"description\": \"Удаляет заметку текущего пользователя.\",\r\n        \"access_rights\": [\r\n          \"notes\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"note_id\",\r\n            \"description\": \"Идентификатор заметки.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": true\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"notes.edit\",\r\n        \"description\": \"Редактирует заметку текущего пользователя.\",\r\n        \"access_rights\": [\r\n          \"notes\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"note_id\",\r\n            \"description\": \"Идентификатор заметки.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"title\",\r\n            \"description\": \"Заголовок заметки.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"text\",\r\n            \"description\": \"Текст заметки.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"privacy\",\r\n            \"description\": \"Уровень доступа к заметке. \\nВозможные значения:\\n* `0` — все пользователи, \\n* `1` — только друзья, \\n* `2` — друзья и друзья друзей, \\n* `3` — только пользователь.\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"comment_privacy\",\r\n            \"description\": \"Уровень доступа к комментированию заметки.\\nВозможные значения:\\n* `0` — все пользователи, \\n* `1` — только друзья, \\n* `2` — друзья и друзья друзей, \\n* `3` — только пользователь.\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"privacy_view\",\r\n            \"description\": \"Настройки приватности просмотра заметки в [специальном формате](api/privacy).\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"privacy_comment\",\r\n            \"description\": \"Настройки приватности комментирования заметки в [специальном формате](api/privacy).\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"notes.get\",\r\n        \"description\": \"Возвращает список заметок, созданных пользователем.\",\r\n        \"access_rights\": [\r\n          \"notes\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"note_ids\",\r\n            \"description\": \"Идентификаторы заметок, информацию о которых необходимо получить.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"user_id\",\r\n            \"description\": \"Идентификатор пользователя, информацию о заметках которого требуется получить.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"offset\",\r\n            \"description\": \"Смещение, необходимое для выборки определенного подмножества заметок.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"count\",\r\n            \"description\": \"Количество заметок, информацию о которых необходимо получить.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"sort\",\r\n            \"description\": \"Сортировка результатов (`0` — по дате создания в порядке убывания, `1` - по дате создания в порядке возрастания).\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"notes.getById\",\r\n        \"description\": \"Возвращает заметку по её `id`.\",\r\n        \"access_rights\": [\r\n          \"notes\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"note_id\",\r\n            \"description\": \"Идентификатор заметки.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"owner_id\",\r\n            \"description\": \"Идентификатор владельца заметки.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"need_wiki\",\r\n            \"description\": \"Определяет, требуется ли в ответе wiki-представление заметки (работает, только если запрашиваются заметки текущего пользователя).\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"notes.getComments\",\r\n        \"description\": \"Возвращает список комментариев к заметке.\",\r\n        \"access_rights\": [\r\n          \"notes\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"note_id\",\r\n            \"description\": \"Идентификатор заметки.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"owner_id\",\r\n            \"description\": \"Идентификатор владельца заметки.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"sort\",\r\n            \"description\": \"Сортировка результатов (`0` — по дате добавления в порядке возрастания, `1` — по дате добавления в порядке убывания).\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"offset\",\r\n            \"description\": \"Смещение, необходимое для выборки определенного подмножества комментариев.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"count\",\r\n            \"description\": \"Количество комментариев, которое необходимо получить.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"notes.getFriendsNotes\",\r\n        \"description\": \"Возвращает список заметок друзей пользователя.\",\r\n        \"access_rights\": [\r\n          \"notes\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"offset\",\r\n            \"description\": \"Смещение, необходимое для выборки определенного подмножества заметок.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"count\",\r\n            \"description\": \"Количество заметок, информацию о которых необходимо получить.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"title\": \"Notifications\",\r\n    \"methods\": [\r\n      {\r\n        \"title\": \"notifications.get\",\r\n        \"description\": \"Возвращает список оповещений об ответах других пользователей на записи текущего пользователя.\",\r\n        \"access_rights\": [\r\n          \"notifications\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"count\",\r\n            \"description\": \"Указывает, какое максимальное число оповещений следует возвращать.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"from\",\r\n            \"description\": \"Строковый идентификатор последнего полученного предыдущим вызовом метода оповещения (см. описание поля `new_from` в результате).\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"offset\",\r\n            \"description\": \"Смещение, необходимое для получения определенного подмножества оповещений.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"start_from\",\r\n            \"description\": \"Строковый идентификатор оповещения, полученного последним в предыдущем вызове (см. описание поля `next_from` в результате).\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"filters\",\r\n            \"description\": \"перечисленные через запятую типы оповещений, которые необходимо получить. Возможные значения:\\n* `wall` — записи на стене пользователя;\\n* `mentions` — упоминания в записях на стене, в комментариях или в обсуждениях;\\n* `comments` — комментарии к записям на стене, фотографиям и видеозаписям;\\n* `likes` — отметки «Мне нравится»;\\n* `reposts` — скопированные у текущего пользователя записи на стене, фотографии и видеозаписи;\\n* `followers` — новые подписчики;\\n* `friends` — принятые заявки в друзья.\\nЕсли параметр не задан, то будут получены все возможные типы оповещений.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"start_time\",\r\n            \"description\": \"Время в формате `unixtime`, начиная с которого следует получить оповещения для текущего пользователя. Если параметр не задан, то он считается равным значению времени, которое было сутки назад.\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"end_time\",\r\n            \"description\": \"Время в формате `unixtime`, до которого следует получить оповещения для текущего пользователя. Если параметр не задан, то он считается равным текущему времени.\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"notifications.markAsViewed\",\r\n        \"description\": \"Сбрасывает счетчик непросмотренных оповещений об ответах других пользователей на записи текущего пользователя.\",\r\n        \"access_rights\": [\r\n          \"notifications\"\r\n        ],\r\n        \"params\": []\r\n      },\r\n      {\r\n        \"title\": \"notifications.sendMessage\",\r\n        \"description\": \"Отправляет уведомление пользователю приложения Mini Apps.\",\r\n        \"access_rights\": [],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"user_ids\",\r\n            \"description\": \"Список идентификаторов пользователей, которым нужно отправить уведомление (максимум **100** идентификаторов).\",\r\n            \"type\": \"string\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"message\",\r\n            \"description\": \"Текст уведомления.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"fragment\",\r\n            \"description\": \"Содержимое хэша (часть URL в ссылке на приложение вида `vk.com/app123456#fragment`).\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"group_id\",\r\n            \"description\": \"\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"random_id\",\r\n            \"description\": \"Уникальный (в привязке к `API_ID` и `ID` отправителя) идентификатор, предназначенный для предотвращения повторной отправки одинакового сообщения.  \\n\\nЗаданный `random_id` используется для проверки уникальности уведомления в течение часа после отправки.\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"sending_mode\",\r\n            \"description\": \"\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"title\": \"Orders\",\r\n    \"methods\": [\r\n      {\r\n        \"title\": \"orders.cancelSubscription\",\r\n        \"description\": \"Отменяет подписку.\",\r\n        \"access_rights\": [],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"user_id\",\r\n            \"description\": \"Идентификатор пользователя.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"subscription_id\",\r\n            \"description\": \"Идентификатор подписки.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"pending_cancel\",\r\n            \"description\": \"`1` — отключить подписку по истечении текущего оплаченного периода;\\n`0` — отключить подписку сразу.\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"orders.changeState\",\r\n        \"description\": \"Изменяет состояние заказа.\",\r\n        \"access_rights\": [],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"order_id\",\r\n            \"description\": \"Идентификатор заказа.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"action\",\r\n            \"description\": \"Действие, которое нужно произвести с заказом. \\n\\nВозможные действия:\\n* `cancel` — отменить неподтверждённый заказ.\\n* `charge` — подтвердить неподтверждённый заказ. Применяется только если не удалось обработать уведомление [order_change_state](api/payments/notifications/order-status-change).\\n* `refund` — отменить подтверждённый заказ.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"app_order_id\",\r\n            \"description\": \"Внутренний идентификатор заказа в приложении.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"test_mode\",\r\n            \"description\": \"Если этот параметр равен `1`, изменяется состояние заказа [тестового режима](api/payments/getting-started). По умолчанию `0`.\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"orders.get\",\r\n        \"description\": \"Возвращает список заказов.\",\r\n        \"access_rights\": [],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"offset\",\r\n            \"description\": \"Смещение относительно самого нового найденного заказа для выборки определенного подмножества. По умолчанию `0`.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"count\",\r\n            \"description\": \"Количество возвращаемых заказов.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"test_mode\",\r\n            \"description\": \"Если этот параметр равен `1`, возвращается список заказов [тестового режима](api/payments/getting-started). По умолчанию `0`.\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"orders.getAmount\",\r\n        \"description\": \"Возвращает стоимость голосов в валюте пользователя.\",\r\n        \"access_rights\": [],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"user_id\",\r\n            \"description\": \"Идентификатор пользователя.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"votes\",\r\n            \"description\": \"Список голосов. \\nНапример: `1`, `7`, `77`.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": true\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"orders.getById\",\r\n        \"description\": \"Возвращает информацию об отдельном заказе.\",\r\n        \"access_rights\": [],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"order_id\",\r\n            \"description\": \"Идентификатор заказа.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"order_ids\",\r\n            \"description\": \"Идентификаторы заказов (при запросе информации о нескольких заказах).\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"test_mode\",\r\n            \"description\": \"Если этот параметр равен `1`, возвращаются заказы [тестового режима](api/payments/getting-started). По умолчанию `0`.\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"orders.getUserSubscriptionById\",\r\n        \"description\": \"Получает информацию о подписке по её идентификатору.\",\r\n        \"access_rights\": [],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"user_id\",\r\n            \"description\": \"Идентификатор пользователя.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"subscription_id\",\r\n            \"description\": \"Идентификатор подписки.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": true\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"orders.getUserSubscriptions\",\r\n        \"description\": \"Получает список активных подписок пользователя.\",\r\n        \"access_rights\": [],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"user_id\",\r\n            \"description\": \"Идентификатор пользователя, подписки которого необходимо получить.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": true\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"orders.updateSubscription\",\r\n        \"description\": \"Обновляет цену подписки для пользователя.\",\r\n        \"access_rights\": [],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"user_id\",\r\n            \"description\": \"Идентификатор пользователя.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"subscription_id\",\r\n            \"description\": \"Идентификатор подписки. Подписка должна быть активна.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"price\",\r\n            \"description\": \"Новая стоимость подписки (должна быть ниже, чем текущая).\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": true\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"title\": \"Pages\",\r\n    \"methods\": [\r\n      {\r\n        \"title\": \"pages.clearCache\",\r\n        \"description\": \"Позволяет очистить кеш отдельных внешних страниц, которые могут быть прикреплены к записям ВКонтакте. После очистки кеша при последующем прикреплении ссылки к записи, данные о странице будут обновлены.\",\r\n        \"access_rights\": [],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"url\",\r\n            \"description\": \"Адрес страницы, закешированную версию которой необходимо очистить. \",\r\n            \"type\": \"string\",\r\n            \"is_required\": true\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"pages.get\",\r\n        \"description\": \"Возвращает информацию о вики-странице.\",\r\n        \"access_rights\": [\r\n          \"pages\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"owner_id\",\r\n            \"description\": \"Идентификатор владельца вики-страницы.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"page_id\",\r\n            \"description\": \"Идентификатор вики-страницы.\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"global\",\r\n            \"description\": \"`1` — требуется получить информацию о глобальной вики-странице.\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"site_preview\",\r\n            \"description\": \"`1` — получаемая вики-страница является предпросмотром для прикреплённой ссылки.\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"title\",\r\n            \"description\": \"Название страницы.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"need_source\",\r\n            \"description\": \"`1` —  требуется вернуть содержимое страницы в вики-формате.\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"need_html\",\r\n            \"description\": \"`1` —  требуется вернуть HTML-представление страницы.\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"pages.getHistory\",\r\n        \"description\": \"Возвращает список всех старых версий вики-страницы.\",\r\n        \"access_rights\": [\r\n          \"pages\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"page_id\",\r\n            \"description\": \"Идентификатор вики-страницы.\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"group_id\",\r\n            \"description\": \"Идентификатор сообщества, которому принадлежит вики-страница.\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"user_id\",\r\n            \"description\": \"Идентификатор пользователя, создавшего вики-страницу.\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"pages.getTitles\",\r\n        \"description\": \"Возвращает список вики-страниц в группе.\",\r\n        \"access_rights\": [\r\n          \"pages\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"group_id\",\r\n            \"description\": \"Идентификатор сообщества, которому принадлежит вики-страница.\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"pages.getVersion\",\r\n        \"description\": \"Возвращает текст одной из старых версий страницы.\",\r\n        \"access_rights\": [],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"version_id\",\r\n            \"description\": \"Идентификатор версии.\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"group_id\",\r\n            \"description\": \"Идентификатор сообщества, которому принадлежит вики-страница.\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"user_id\",\r\n            \"description\": \"Идентификатор пользователя, который создал страницу.\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"need_html\",\r\n            \"description\": \"Определяет, требуется ли в ответе HTML-представление вики-страницы.\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"pages.parseWiki\",\r\n        \"description\": \"Возвращает HTML-представление вики-разметки.\",\r\n        \"access_rights\": [\r\n          \"photos\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"text\",\r\n            \"description\": \"Текст в вики-формате.\",\r\n            \"type\": \"text\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"group_id\",\r\n            \"description\": \"\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"pages.preview\",\r\n        \"description\": \"\",\r\n        \"access_rights\": [\r\n          \"pages\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"Text\",\r\n            \"description\": \"\",\r\n            \"type\": \"text\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"pid\",\r\n            \"description\": \"\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"gid\",\r\n            \"description\": \"\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"mid\",\r\n            \"description\": \"\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"need_source\",\r\n            \"description\": \"\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"pages.save\",\r\n        \"description\": \"Сохраняет текст вики-страницы.\",\r\n        \"access_rights\": [\r\n          \"pages\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"text\",\r\n            \"description\": \"Новый текст страницы в вики-формате.\",\r\n            \"type\": \"text\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"page_id\",\r\n            \"description\": \"Идентификатор вики-страницы. Вместо `page_id` может быть передан параметр `title`.\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"group_id\",\r\n            \"description\": \"Идентификатор сообщества, которому принадлежит вики-страница.\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"user_id\",\r\n            \"description\": \"Идентификатор пользователя, создавшего вики-страницу.\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"title\",\r\n            \"description\": \"Название вики-страницы.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"pages.saveAccess\",\r\n        \"description\": \"Сохраняет новые настройки доступа на чтение и редактирование вики-страницы.\",\r\n        \"access_rights\": [\r\n          \"pages\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"page_id\",\r\n            \"description\": \"Идентификатор вики-страницы.\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"group_id\",\r\n            \"description\": \"Идентификатор сообщества, которому принадлежит вики-страница.\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"user_id\",\r\n            \"description\": \"Идентификатор пользователя, создавшего вики-страницу.\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"view\",\r\n            \"description\": \"Значение настройки доступа на чтение. Возможные значения:\\n* `2` — просматривать страницу могут все;\\n* `1` — только участники сообщества;\\n* `0` — только руководители сообщества.\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"edit\",\r\n            \"description\": \"Значение настройки доступа на редактирование. Возможные значения:\\n* `2` — редактировать страницу могут все;\\n* `1` — только участники сообщества;\\n* `0` — только руководители сообщества.\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"title\": \"Photos\",\r\n    \"methods\": [\r\n      {\r\n        \"title\": \"photos.createAlbum\",\r\n        \"description\": \"Создает пустой альбом для фотографий.\",\r\n        \"access_rights\": [\r\n          \"photos\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"title\",\r\n            \"description\": \"Название альбома.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"group_id\",\r\n            \"description\": \"Идентификатор сообщества, в котором создаётся альбом.\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"description\",\r\n            \"description\": \"Текст описания альбома.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"privacy\",\r\n            \"description\": \"Уровень доступа к альбому (только для альбома пользователя). \\nВозможные значения:\\n* `0` — все пользователи,\\n* `1` — только друзья,\\n* `2` — друзья и друзья друзей,\\n* `3` — только я.\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"comment_privacy\",\r\n            \"description\": \"Уровень доступа к комментированию альбома (только для альбома пользователя).\\nВозможные значения:\\n* `0` — все пользователи,\\n* `1` — только друзья,\\n* `2` — друзья и друзья друзей,\\n* `3` — только я.\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"privacy_view\",\r\n            \"description\": \"Настройки приватности просмотра альбома в [специальном формате](reference/objects/privacy).\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"privacy_comment\",\r\n            \"description\": \"Настройки приватности комментирования альбома в [специальном формате](reference/objects/privacy).\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"upload_by_admins_only\",\r\n            \"description\": \"Кто может загружать фотографии в альбом (только для альбома сообщества). \\nВозможные значения:\\n*  `0` — фотографии могут добавлять все пользователи;\\n*  `1` — фотографии могут добавлять только редакторы и администраторы.\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"comments_disabled\",\r\n            \"description\": \"Отключено ли комментирование альбома (только для альбома сообщества).\\nВозможные значения:\\n*  `0` — комментирование включено;\\n*  `1` — комментирование отключено.\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"photos.edit\",\r\n        \"description\": \"Редактирует описание или геометку у фотографии.\",\r\n        \"access_rights\": [\r\n          \"photos\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"owner_id\",\r\n            \"description\": \"Идентификатор пользователя или сообщества, которому принадлежит фотография.\\n\\n> Обратите внимание, идентификатор сообщества в параметре `owner_id` необходимо указывать со знаком `«-»` — например, `owner_id`=`-1` соответствует идентификатору сообщества [ВКонтакте API](https://vk.com/apiclub) (club1).\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"photo_id\",\r\n            \"description\": \"Идентификатор фотографии.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"caption\",\r\n            \"description\": \"Новый текст описания к фотографии. Если параметр не задан, то считается, что он равен пустой строке.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"latitude\",\r\n            \"description\": \"Географическая широта.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"longitude\",\r\n            \"description\": \"Географическая долгота.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"place_str\",\r\n            \"description\": \"Название места.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"foursquare_id\",\r\n            \"description\": \"ID в Foursquare.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"delete_place\",\r\n            \"description\": \"Удалить место (`0` — не удалять, `1` — удалить).\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"photos.editAlbum\",\r\n        \"description\": \"Редактирует данные альбома для фотографий.\",\r\n        \"access_rights\": [\r\n          \"photos\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"album_id\",\r\n            \"description\": \"Идентификатор альбома.\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"title\",\r\n            \"description\": \"Новое название альбома.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"description\",\r\n            \"description\": \"Новый текст описания альбома.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"owner_id\",\r\n            \"description\": \"Идентификатор владельца альбома (пользователь или сообщество).\\n\\n> Обратите внимание, идентификатор сообщества в параметре `owner_id` необходимо указывать со знаком `«-»` — например, `owner_id`=`-1` соответствует идентификатору сообщества [ВКонтакте API](https://vk.com/apiclub) (club1).\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"privacy\",\r\n            \"description\": \"Новый уровень доступа к альбому (только для альбома пользователя). \\nВозможные значения:\\n*  `0` — все пользователи,\\n*  `1` — только друзья,\\n*  `2` — друзья и друзья друзей,\\n*  `3` — только я.\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"comment_privacy\",\r\n            \"description\": \"Новый уровень доступа к комментированию альбома (только для альбома пользователя).\\nВозможные значения:\\n*  `0` — все пользователи,\\n*  `1` — только друзья,\\n*  `2` — друзья и друзья друзей,\\n*  `3` — только я.\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"privacy_view\",\r\n            \"description\": \"Настройки приватности просмотра альбома в [специальном формате](reference/objects/privacy).\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"privacy_comment\",\r\n            \"description\": \"Настройки приватности комментирования альбома в [специальном формате](reference/objects/privacy).\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"upload_by_admins_only\",\r\n            \"description\": \"Кто может загружать фотографии в альбом (только для альбома сообщества). \\nВозможные значения:\\n*  `0` — фотографии могут добавлять все пользователи;\\n*  `1` — фотографии могут добавлять только редакторы и администраторы.\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"comments_disabled\",\r\n            \"description\": \"Отключено ли комментирование альбома (только для альбома сообщества).\\nВозможные значения:\\n*  `0` — комментирование включено;\\n*  `1` — комментирование отключено.\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"photos.get\",\r\n        \"description\": \"Возвращает список фотографий в альбоме.\",\r\n        \"access_rights\": [],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"owner_id\",\r\n            \"description\": \"Идентификатор владельца альбома.\\n\\n> Обратите внимание, идентификатор сообщества в параметре `owner_id` необходимо указывать со знаком «-» — например, `owner_id`=`-1` соответствует идентификатору сообщества [ВКонтакте API](https://vk.com/apiclub) (club1).\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"album_id\",\r\n            \"description\": \"Идентификатор альбома. Для служебных альбомов используются следующие идентификаторы:\\n* `wall` — фотографии со стены,\\n* `profile` — фотографии профиля,\\n* `saved` — сохраненные фотографии. Возвращается только с ключом доступа пользователя.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"photo_ids\",\r\n            \"description\": \"Идентификаторы фотографий, информацию о которых необходимо вернуть.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"rev\",\r\n            \"description\": \"Порядок сортировки фотографий. Возможные значения:\\n* `1` — антихронологический,\\n* `0` — хронологический.\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"extended\",\r\n            \"description\": \"`1` — будут возвращены дополнительные поля `likes`, `comments`, `tags`, `can_comment`, `reposts`. По умолчанию: `0`.\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"feed_type\",\r\n            \"description\": \"Тип новости, получаемый в поле `type` метода [newsfeed.get](method/newsfeed.get), для получения только загруженных пользователем фотографий, либо только фотографий, на которых он был отмечен. Может принимать значения `photo`, `photo_tag`.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"feed\",\r\n            \"description\": \"Время в формате, который может быть получен методом [newsfeed.get](method/newsfeed.get) в поле `date`, для получения всех фотографий загруженных пользователем в определённый день либо на которых пользователь был отмечен. Также нужно указать параметр `uid` пользователя, с которым произошло событие.\\n\\nЗначение должно отличаться от текущего времени не более, чем на месяц.\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"photo_sizes\",\r\n            \"description\": \"`1` — возвращать доступные размеры фотографии в [специальном формате](reference/objects/photo-sizes). По умолчанию: `0`.\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"offset\",\r\n            \"description\": \"Отступ, необходимый для получения определенного подмножества записей.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"count\",\r\n            \"description\": \"Количество записей, которое будет получено.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"photos.getAlbums\",\r\n        \"description\": \"Возвращает список фотоальбомов пользователя или сообщества.\",\r\n        \"access_rights\": [],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"owner_id\",\r\n            \"description\": \"Идентификатор пользователя или сообщества, которому принадлежат альбомы. \\n\\n> Обратите внимание, идентификатор сообщества в параметре `owner_id` необходимо указывать со знаком «-» — например, `owner_id`=`-1` соответствует идентификатору сообщества [ВКонтакте API](https://vk.com/apiclub) (club1).\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"album_ids\",\r\n            \"description\": \"Перечисленные через запятую идентификаторы альбомов.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"offset\",\r\n            \"description\": \"Смещение, необходимое для выборки определенного подмножества альбомов.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"count\",\r\n            \"description\": \"Количество альбомов, которое нужно вернуть (по умолчанию возвращаются все альбомы).\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"need_system\",\r\n            \"description\": \"`1` — будут возвращены системные альбомы, имеющие отрицательные идентификаторы.\\n\\nОбратите внимание, что информация о системных альбомах возвращается даже в том случае, если они не содержат фотографий.\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"need_covers\",\r\n            \"description\": \"`1` — будет возвращено дополнительное поле `thumb_src` с адресом изображения-обложки. По умолчанию поле `thumb_src` не возвращается.\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"photo_sizes\",\r\n            \"description\": \"`1` — размеры фотографий будут возвращены в [специальном формате](reference/objects/photo-sizes).\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"photos.getAlbumsCount\",\r\n        \"description\": \"Возвращает количество доступных альбомов пользователя или сообщества.\",\r\n        \"access_rights\": [],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"user_id\",\r\n            \"description\": \"Идентификатор пользователя, количество альбомов которого необходимо получить.\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"group_id\",\r\n            \"description\": \"Идентификатор сообщества, количество альбомов которого необходимо получить.\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"photos.getAll\",\r\n        \"description\": \"Возвращает все фотографии пользователя или сообщества в антихронологическом порядке.\",\r\n        \"access_rights\": [\r\n          \"photos\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"owner_id\",\r\n            \"description\": \"Идентификатор пользователя или сообщества, фотографии которого нужно получить.\\n\\n> Обратите внимание, идентификатор сообщества в параметре `owner_id` необходимо указывать со знаком `«-»` — например, `owner_id`=`-1` соответствует идентификатору сообщества [ВКонтакте API](https://vk.com/apiclub) (club1).\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"extended\",\r\n            \"description\": \"`1` — возвращать расширенную информацию о фотографиях.\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"offset\",\r\n            \"description\": \"Смещение, необходимое для выборки определенного подмножества фотографий. По умолчанию — `0`.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"count\",\r\n            \"description\": \"Число фотографий, информацию о которых необходимо получить.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"photo_sizes\",\r\n            \"description\": \"`1` — будут возвращены размеры фотографий в [специальном формате](reference/objects/photo-sizes).\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"no_service_albums\",\r\n            \"description\": \"`0` — вернуть все фотографии, включая находящиеся в сервисных альбомах, таких как «Фотографии на моей стене» (по умолчанию);\\n`1` — вернуть фотографии только из стандартных альбомов пользователя или сообщества.\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"need_hidden\",\r\n            \"description\": \"`1` — возвращает информацию от том, скрыта ли фотография из блока над стеной пользователя.\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"skip_hidden\",\r\n            \"description\": \"`1` — не возвращать фотографии, скрытые из блока над стеной пользователя (параметр учитывается только при `owner_id` > `0`, параметр `no_service_albums` игнорируется).\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"photos.getAllComments\",\r\n        \"description\": \"Возвращает отсортированный в антихронологическом порядке список всех комментариев к конкретному альбому или ко всем альбомам пользователя.\",\r\n        \"access_rights\": [\r\n          \"photos\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"owner_id\",\r\n            \"description\": \"Идентификатор пользователя или сообщества, которому принадлежат фотографии.\\n\\n> Обратите внимание, идентификатор сообщества в параметре `owner_id` необходимо указывать со знаком `«-»` — например, `owner_id`=`-1` соответствует идентификатору сообщества [ВКонтакте API](https://vk.com/apiclub) (club1).\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"album_id\",\r\n            \"description\": \"Идентификатор альбома. Если параметр не задан, то считается, что необходимо получить комментарии ко всем альбомам пользователя или сообщества.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"need_likes\",\r\n            \"description\": \"`1` — будет возвращено дополнительное поле `likes`. По умолчанию поле `likes` не возвращается.\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"offset\",\r\n            \"description\": \"Смещение, необходимое для выборки определенного подмножества комментариев. Если параметр не задан, то считается, что он равен `0`.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"count\",\r\n            \"description\": \"Количество комментариев, которое необходимо получить. Если параметр не задан, то считается что он равен **20**. Максимальное значение параметра **100**.\\n\\n> Обратите внимание, даже при использовании параметра `offset` для получения доступны только первые **10000** комментариев.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"photos.getById\",\r\n        \"description\": \"Возвращает информацию о фотографиях по их идентификаторам.\",\r\n        \"access_rights\": [],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"photos\",\r\n            \"description\": \"Перечисленные через запятую идентификаторы, которые представляют собой идущие через знак подчеркивания `id` пользователей, разместивших фотографии, и `id` самих фотографий. Чтобы получить информацию о фотографии в альбоме группы, вместо id пользователя следует указать `-id` группы.\\n\\nПример значения `photos`: \\n\\n```\\n1_263219656,6492_456239863, -1_456239099\\n```\\n\\nНекоторые фотографии, идентификаторы которых могут быть получены через API, закрыты приватностью, и не будут получены. В этом случае следует использовать ключ доступа фотографии (`access_key`) в её идентификаторе. \\n\\nПример значения `photos`: \\n\\n```\\n1_129207899_220df2876123d3542f, 6492_135055734_e0a9bcc31144f67fbd\\n```\\n\\nПоле `access_key` будет возвращено вместе с остальными данными фотографии в методах, которые возвращают фотографии, закрытые приватностью но доступные в данном контексте. Например данное поле имеют фотографии, возвращаемые методом [newsfeed.get](newsfeed.get).\",\r\n            \"type\": \"string\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"extended\",\r\n            \"description\": \"`1` — будут возвращены дополнительные поля `likes`, `comments`, `tags`, `can_comment`, `can_repost`. Поля `comments` и `tags` содержат только количество объектов. По умолчанию данные поля не возвращается.\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"photo_sizes\",\r\n            \"description\": \"Возвращать ли доступные размеры фотографии в [специальном формате](reference/objects/photo-sizes).\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"photos.getComments\",\r\n        \"description\": \"Возвращает список комментариев к фотографии.\",\r\n        \"access_rights\": [\r\n          \"photos\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"owner_id\",\r\n            \"description\": \"Идентификатор пользователя или сообщества, которому принадлежит фотография.\\n\\n> Обратите внимание, идентификатор сообщества в параметре `owner_id` необходимо указывать со знаком `«-»` — например, `owner_id`=`-1` соответствует идентификатору сообщества [ВКонтакте API](https://vk.com/apiclub) (club1).\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"photo_id\",\r\n            \"description\": \"Идентификатор фотографии.\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"need_likes\",\r\n            \"description\": \"`1` — будет возвращено дополнительное поле `likes`. По умолчанию: `0`.\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"start_comment_id\",\r\n            \"description\": \"Идентификатор комментария, начиная с которого нужно вернуть список (подробности см. ниже).\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"offset\",\r\n            \"description\": \"Смещение, необходимое для выборки определенного подмножества комментариев. По умолчанию: `0`.\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"count\",\r\n            \"description\": \"Количество комментариев, которое необходимо получить.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"skip_before_id\",\r\n            \"description\": \"Идентификатор последнего полученного комментания, при подгрузке более новых комментариев. (этот и более старые комментарии получены не будут)\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"skip_after_id\",\r\n            \"description\": \"Идентификатор последнего полученного комментания, при подгрузке более старых комментариев. (этот и более новые комментарии получены не будут)\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"sort\",\r\n            \"description\": \"Порядок сортировки комментариев. \\nВозможные значения:\\n* `asc` — от старых к новым;\\n* `desc` — от новых к старым.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"access_key\",\r\n            \"description\": \"Ключ доступа к фотографии.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"extended\",\r\n            \"description\": \"`1` — в ответе будут возвращены дополнительные поля `profiles` и `groups`, содержащие информацию о пользователях и сообществах. По умолчанию: `0`.\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"fields\",\r\n            \"description\": \"Список дополнительных полей профилей, которые необходимо вернуть. См. [подробное описание](reference/objects/user).\\nДоступные значения: \\n* `about`,\\n* `activities`,\\n* `bdate`,\\n* `blacklisted`,\\n* `blacklisted_by_me`,\\n* `books`,\\n* `can_post`,\\n* `can_see_all_posts`,\\n* `can_see_audio`,\\n* `can_send_friend_request`,\\n* `can_write_private_message`,\\n* `career`,\\n* `city`,\\n* `common_count`,\\n* `connections`,\\n* `contacts`,\\n* `country`,\\n* `crop_photo`,\\n* `domain`,\\n* `education`,\\n* `exports`,\\n* `followers_count`,\\n* `friend_status`,\\n* `games`,\\n* `has_mobile`,\\n* `has_photo`,\\n* `home_town`,\\n* `interests`,\\n* `is_favorite`,\\n* `is_friend`,\\n* `is_hidden_from_feed`,\\n* `last_seen`,\\n* `lists`,\\n* `maiden_name`,\\n* `military`,\\n* `movies`,\\n* `music`,\\n* `nickname`,\\n* `occupation`,\\n* `online`,\\n* `personal`,\\n* `photo_100`,\\n* `photo_200`,\\n* `photo_200_orig`,\\n* `photo_400_orig`,\\n* `photo_50`,\\n* `photo_id`,\\n* `photo_max`,\\n* `photo_max_orig`,\\n* `quotes`,\\n* `relation`,\\n* `relatives`,\\n* `schools`,\\n* `screen_name`,\\n* `sex`,\\n* `site`,\\n* `status`,\\n* `timezone`,\\n* `tv`,\\n* `universities`,\\n* `verified`,\\n* `wall_comments`.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"photos.getMailUploadServer\",\r\n        \"description\": \"\",\r\n        \"access_rights\": [],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"group_id\",\r\n            \"description\": \"\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"photos.getMarketAlbumUploadServer\",\r\n        \"description\": \"Возвращает адрес сервера для [загрузки﻿ фотографии подборки товаров](api/upload#Загрузка%20фотографии%20для%20товара) в сообществе.\",\r\n        \"access_rights\": [\r\n          \"market\",\r\n          \"photos\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"group_id\",\r\n            \"description\": \"Идентификатор сообщества, для которого необходимо загрузить фотографию подборки товаров.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": true\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"photos.getMarketUploadServer\",\r\n        \"description\": \"Возвращает адрес сервера для [загрузки﻿ фотографии товара](api/upload#Загрузка%20фотографии%20для%20товара).\",\r\n        \"access_rights\": [\r\n          \"market\",\r\n          \"photos\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"group_id\",\r\n            \"description\": \"Идентификатор сообщества, для которого необходимо загрузить фотографию товара.\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"photos.getOwnerCoverPhotoUploadServer\",\r\n        \"description\": \"Получает адрес для [загрузки обложки сообщества](api/upload#Загрузка%20обложки%20сообщества).\",\r\n        \"access_rights\": [\r\n          \"photos\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"group_id\",\r\n            \"description\": \"Идентификатор сообщества.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"crop_x\",\r\n            \"description\": \"Координата `X` верхнего левого угла для обрезки изображения.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"crop_y\",\r\n            \"description\": \"Координата `Y` верхнего левого угла для обрезки изображения.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"crop_x2\",\r\n            \"description\": \"Координата `X` нижнего правого угла для обрезки изображения.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"crop_y2\",\r\n            \"description\": \"Координата `Y` нижнего правого угла для обрезки изображения.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"photos.getOwnerPhotoUploadServer\",\r\n        \"description\": \"Возвращает адрес сервера для [загрузки главной фотографии](api/upload#Загрузка%20главной%20фотографии%20пользователя%20или%20сообщества) на страницу пользователя или сообщества.\",\r\n        \"access_rights\": [],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"owner_id\",\r\n            \"description\": \"Идентификатор сообщества или текущего пользователя. \\n\\n> Обратите внимание, идентификатор сообщества в параметре `owner_id` необходимо указывать со знаком `«-»` — например, `owner_id`=`-1` соответствует идентификатору сообщества [ВКонтакте API](https://vk.com/apiclub) (club1).\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"photos.getProfile\",\r\n        \"description\": \"Возвращает список фотографий со страницы пользователя или сообщества. \\n\\nМетод устарел, воспользуйтесь методом  с параметром `album_id` = `profile`.\",\r\n        \"access_rights\": [],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"owner_id\",\r\n            \"description\": \"Идентификатор пользователя или сообщества, фотографии которого нужно получить.\\n\\n> Обратите внимание, идентификатор сообщества в параметре `owner_id` необходимо указывать со знаком `«-»` — например, `owner_id`=`-1` соответствует идентификатору сообщества [ВКонтакте API](https://vk.com/apiclub) (club1).\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"photo_ids\",\r\n            \"description\": \"Идентификаторы фотографий, информацию о которых необходимо вернуть.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"rev\",\r\n            \"description\": \"Порядок сортировки фотографий (`1` — антихронологический, `0` — хронологический).\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"extended\",\r\n            \"description\": \"`1` — будет возвращено дополнительное поле `likes`. По умолчанию поле `likes` не возвращается.\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"feed_type\",\r\n            \"description\": \"Тип новости, получаемый в поле `type` метода [newsfeed.get](method/newsfeed.get).\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"feed\",\r\n            \"description\": \"`Unixtime`, который может быть получен методом [newsfeed.get](method/newsfeed.get) в поле `date`, для получения всех фотографий загруженных пользователем в определённый день либо на которых пользователь был отмечен. Также нужно указать параметр `uid` пользователя, с которым произошло событие.\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"photo_sizes\",\r\n            \"description\": \"Возвращать ли размеры фотографий в специальном формате.\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"offset\",\r\n            \"description\": \"Смещение, необходимое для получения определенной выборки фотографий. По умолчанию — `0`.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"count\",\r\n            \"description\": \"Количество фотографий, которые необходимо вернуть.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"photos.getUploadServer\",\r\n        \"description\": \"Возвращает адрес сервера для [загрузки фотографий](api/upload#Загрузка%20фотографий%20в%20альбом).\",\r\n        \"access_rights\": [\r\n          \"photos\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"album_id\",\r\n            \"description\": \"Идентификатор альбома.\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"group_id\",\r\n            \"description\": \"Идентификатор сообщества, которому принадлежит альбом (если необходимо загрузить фотографию в альбом сообщества).\\n\\n> Если `group_id` не указан, возвращается адрес для загрузки на стену текущего пользователя.\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"photos.getUserPhotos\",\r\n        \"description\": \"Возвращает список фотографий, на которых отмечен пользователь\",\r\n        \"access_rights\": [],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"user_id\",\r\n            \"description\": \"Идентификатор пользователя, список фотографий для которого нужно получить.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"offset\",\r\n            \"description\": \"Смещение, необходимое для выборки определенного подмножества фотографий. По умолчанию — `0`.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"count\",\r\n            \"description\": \"Количество фотографий, которое необходимо получить.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"extended\",\r\n            \"description\": \"`1` — будут возвращены дополнительные поля `likes`, `comments`, `tags`, `can_comment`. Поля `comments` и `tags` содержат только количество объектов. По умолчанию данные поля не возвращается.\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"sort\",\r\n            \"description\": \"Сортировка результатов (`0` — по дате добавления отметки в порядке убывания, `1` — по дате добавления отметки в порядке возрастания).\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"photos.getWallUploadServer\",\r\n        \"description\": \"Возвращает адрес сервера для [загрузки﻿ фотографии на стену](api/upload#Загрузка%20фотографий%20на%20стену) пользователя или сообщества.\",\r\n        \"access_rights\": [\r\n          \"photos\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"group_id\",\r\n            \"description\": \"Идентификатор сообщества, на стену которого нужно загрузить фото (без знака «минус»).\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"photos.makeCover\",\r\n        \"description\": \"Делает фотографию обложкой альбома.\",\r\n        \"access_rights\": [\r\n          \"photos\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"owner_id\",\r\n            \"description\": \"Идентификатор пользователя или сообщества, которому принадлежит фотография. \\n\\n> Обратите внимание, идентификатор сообщества в параметре `owner_id` необходимо указывать со знаком `«-»` — например, `owner_id`=`-1` соответствует идентификатору сообщества [ВКонтакте API](https://vk.com/apiclub) (club1).\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"photo_id\",\r\n            \"description\": \"Идентификатор фотографии. Фотография должна находиться в альбоме `album_id`.\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"album_id\",\r\n            \"description\": \"Идентификатор альбома.\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"photos.move\",\r\n        \"description\": \"Переносит фотографию из одного альбома в другой.\",\r\n        \"access_rights\": [\r\n          \"photos\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"owner_id\",\r\n            \"description\": \"Идентификатор пользователя или сообщества, которому принадлежит фотография. \\n\\n> Обратите внимание, идентификатор сообщества в параметре `owner_id` необходимо указывать со знаком `«-»` — например, `owner_id`=`-1` соответствует идентификатору сообщества [ВКонтакте API](https://vk.com/apiclub) (club1).\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"target_album_id\",\r\n            \"description\": \"Идентификатор альбома, в который нужно переместить фотографию.\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"photo_id\",\r\n            \"description\": \"Идентификатор фотографии, которую нужно перенести.\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": true\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"photos.reorderAlbums\",\r\n        \"description\": \"Меняет порядок альбома в списке альбомов пользователя.\",\r\n        \"access_rights\": [\r\n          \"photos\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"owner_id\",\r\n            \"description\": \"Идентификатор пользователя или сообщества, которому принадлежит альбом. \\n\\n> Обратите внимание, идентификатор сообщества в параметре `owner_id` необходимо указывать со знаком `«-»` — например, `owner_id`=`-1` соответствует идентификатору сообщества [ВКонтакте API](https://vk.com/apiclub) (club1).\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"album_id\",\r\n            \"description\": \"Идентификатор альбома.\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"before\",\r\n            \"description\": \"Идентификатор альбома, перед которым следует поместить альбом.\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"after\",\r\n            \"description\": \"Идентификатор альбома, после которого следует поместить альбом.\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"photos.reorderPhotos\",\r\n        \"description\": \"Меняет порядок фотографии в списке фотографий альбома пользователя.\",\r\n        \"access_rights\": [\r\n          \"photos\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"owner_id\",\r\n            \"description\": \"Идентификатор пользователя или сообщества, которому принадлежит фотография. \\n\\n> Обратите внимание, идентификатор сообщества в параметре `owner_id` необходимо указывать со знаком `«-»` — например, `owner_id`=`-1` соответствует идентификатору сообщества [ВКонтакте API](https://vk.com/apiclub) (club1).\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"photo_id\",\r\n            \"description\": \"Идентификатор фотографии.\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"before\",\r\n            \"description\": \"Идентификатор фотографии, перед которой следует поместить фотографию. Если параметр не указан, фотография будет помещена последней.\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"after\",\r\n            \"description\": \"Идентификатор фотографии, после которой следует поместить фотографию. Если параметр не указан, фотография будет помещена первой.\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"photos.save\",\r\n        \"description\": \"Сохраняет фотографии после успешной загрузки.\",\r\n        \"access_rights\": [\r\n          \"photos\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"album_id\",\r\n            \"description\": \"Идентификатор альбома, в который необходимо сохранить фотографии.\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"group_id\",\r\n            \"description\": \"Идентификатор сообщества, в которое необходимо сохранить фотографии.\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"server\",\r\n            \"description\": \"Параметр, возвращаемый в результате [загрузки фотографий на сервер](api/upload#Загрузка%20фотографий%20в%20альбом).\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"photos_list\",\r\n            \"description\": \"Параметр, возвращаемый в результате [загрузки фотографий на сервер](api/upload#Загрузка%20фотографий%20в%20альбом).\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"hash\",\r\n            \"description\": \"Параметр, возвращаемый в результате [загрузки фотографий на сервер](api/upload#Загрузка%20фотографий%20в%20альбом).\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"latitude\",\r\n            \"description\": \"Географическая широта, заданная в градусах (от -90 до 90).\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"longitude\",\r\n            \"description\": \"Географическая долгота, заданная в градусах (от -180 до 180).\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"caption\",\r\n            \"description\": \"Текст описания фотографии (максимум 2048 символов).\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"photos.saveMailPhoto\",\r\n        \"description\": \"\",\r\n        \"access_rights\": [],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"photo\",\r\n            \"description\": \"\",\r\n            \"type\": \"string\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"aid\",\r\n            \"description\": \"\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"gid\",\r\n            \"description\": \"\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"server\",\r\n            \"description\": \"\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"hash\",\r\n            \"description\": \"\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"latitude\",\r\n            \"description\": \"\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"longitude\",\r\n            \"description\": \"\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"caption\",\r\n            \"description\": \"\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"description\",\r\n            \"description\": \"\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"photos.saveMarketAlbumPhoto\",\r\n        \"description\": \"Сохраняет фотографии после успешной загрузки на URI, полученный методом [photos.getMarketAlbumUploadServer](method/photos.getMarketAlbumUploadServer).\",\r\n        \"access_rights\": [\r\n          \"market\",\r\n          \"photos\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"group_id\",\r\n            \"description\": \"Идентификатор группы, для которой нужно загрузить фотографию.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"photo\",\r\n            \"description\": \"Параметр, возвращаемый в результате [загрузки фотографии на сервер](api/upload#Загрузка%20фотографии%20для%20подборки%20товаров).\\n\\nМинимальный размер фотографии — 1280x720 пикселей.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"server\",\r\n            \"description\": \"Параметр, возвращаемый в результате [загрузки фотографии на сервер](api/upload#Загрузка%20фотографии%20для%20подборки%20товаров).\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"hash\",\r\n            \"description\": \"Параметр, возвращаемый в результате [загрузки фотографии на сервер](api/upload#Загрузка%20фотографии%20для%20подборки%20товаров).\",\r\n            \"type\": \"string\",\r\n            \"is_required\": true\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"photos.saveMarketPhoto\",\r\n        \"description\": \"Сохраняет фотографии после успешной загрузки на URI, полученный методом .\",\r\n        \"access_rights\": [\r\n          \"market\",\r\n          \"photos\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"group_id\",\r\n            \"description\": \"Идентификатор группы, для которой нужно загрузить фотографию.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"photo\",\r\n            \"description\": \"Параметр, возвращаемый в результате [загрузки фотографии на сервер](api/upload#Загрузка%20фотографии%20для%20товара).\",\r\n            \"type\": \"string\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"server\",\r\n            \"description\": \"Параметр, возвращаемый в результате [загрузки фотографии на сервер](api/upload#Загрузка%20фотографии%20для%20товара).\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"hash\",\r\n            \"description\": \"Параметр, возвращаемый в результате [загрузки фотографии на сервер](api/upload#Загрузка%20фотографии%20для%20товара).\",\r\n            \"type\": \"string\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"crop_data\",\r\n            \"description\": \"Параметр, возвращаемый в результате [загрузки фотографии на сервер](api/upload#Загрузка%20фотографии%20для%20товара).\\n\\nОбязательный параметр, если на этапе загрузки фото был передан `main_photo`=`1`.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"crop_hash\",\r\n            \"description\": \"Параметр, возвращаемый в результате [загрузки фотографии на сервер](api/upload#Загрузка%20фотографии%20для%20товара).\\n\\nОбязательный параметр, если на этапе загрузки фото был передан `main_photo`=`1`.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"photos.saveOwnerCoverPhoto\",\r\n        \"description\": \"Сохраняет изображение для обложки сообщества после [успешной загрузки](api/upload#Загрузка%20обложки%20сообщества).\",\r\n        \"access_rights\": [\r\n          \"photos\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"hash\",\r\n            \"description\": \"Параметр `hash`, полученный в результате [загрузки фотографии на сервер](api/upload#Загрузка%20обложки%20сообщества).\",\r\n            \"type\": \"string\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"photo\",\r\n            \"description\": \"Параметр `photo`, полученный в результате [загрузки фотографии на сервер](api/upload#Загрузка%20обложки%20сообщества).\",\r\n            \"type\": \"string\",\r\n            \"is_required\": true\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"photos.saveOwnerPhoto\",\r\n        \"description\": \"Позволяет сохранить главную фотографию пользователя или сообщества.\",\r\n        \"access_rights\": [],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"server\",\r\n            \"description\": \"Параметр, возвращаемый в результате [загрузки фотографии на сервер](api/upload#Загрузка%20главной%20фотографии%20пользователя%20или%20сообщества).\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"hash\",\r\n            \"description\": \"Параметр, возвращаемый в результате [загрузки фотографии на сервер](api/upload#Загрузка%20главной%20фотографии%20пользователя%20или%20сообщества).\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"photo\",\r\n            \"description\": \"Параметр, возвращаемый в результате [загрузки фотографии на сервер](api/upload#Загрузка%20главной%20фотографии%20пользователя%20или%20сообщества).\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"photos.saveWallPhoto\",\r\n        \"description\": \"Сохраняет фотографии после успешной загрузки на URI, полученный методом [photos.getWallUploadServer](method/photos.getWallUploadServer).\",\r\n        \"access_rights\": [],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"user_id\",\r\n            \"description\": \"Идентификатор пользователя, на стену которого нужно сохранить фотографию.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"group_id\",\r\n            \"description\": \"Идентификатор сообщества, на стену которого нужно сохранить фотографию.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"photo\",\r\n            \"description\": \"Параметр, возвращаемый в результате [загрузки фотографии на сервер](api/upload#Загрузка%20фотографий%20на%20стену).\",\r\n            \"type\": \"string\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"server\",\r\n            \"description\": \"Параметр, возвращаемый в результате [загрузки фотографии на сервер](api/upload#Загрузка%20фотографий%20на%20стену).\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"hash\",\r\n            \"description\": \"Параметр, возвращаемый в результате [загрузки фотографии на сервер](api/upload#Загрузка%20фотографий%20на%20стену).\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"latitude\",\r\n            \"description\": \"Географическая широта, заданная в градусах (от -90 до 90).\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"longitude\",\r\n            \"description\": \"Географическая долгота, заданная в градусах (от -180 до 180).\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"caption\",\r\n            \"description\": \"Текст описания фотографии (максимум **2048** символов).\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"photos.search\",\r\n        \"description\": \"Осуществляет поиск изображений по местоположению или описанию.\",\r\n        \"access_rights\": [],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"q\",\r\n            \"description\": \"Строка поискового запроса, например, `Nature`.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"lat\",\r\n            \"description\": \"Географическая широта отметки, заданная в градусах (от -90 до 90).\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"long\",\r\n            \"description\": \"Географическая долгота отметки, заданная в градусах (от -180 до 180).\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"start_time\",\r\n            \"description\": \"Время в формате `unixtime`, не раньше которого должны были быть загружены найденные фотографии.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"end_time\",\r\n            \"description\": \"Время в формате `unixtime`, не позже которого должны были быть загружены найденные фотографии.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"sort\",\r\n            \"description\": \"Сортировка результатов. Возможные значения:\\n* `1` — по количеству отметок «Мне нравится»;\\n* `0` — по дате добавления фотографии.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"offset\",\r\n            \"description\": \"Смещение относительно первой найденной фотографии для выборки определённого подмножества.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"count\",\r\n            \"description\": \"Количество возвращаемых фотографий.\\n\\n> Обратите внимание, даже при использовании параметра `offset` для получения информации доступны не больше 3000 результатов.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"radius\",\r\n            \"description\": \"Радиус поиска в метрах. Работает очень приближенно, поэтому реальное расстояние до цели может отличаться от заданного. Может принимать значения: `10`, `100`, `800`, `6000`, `50000`.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"title\": \"Places\",\r\n    \"methods\": [\r\n      {\r\n        \"title\": \"places.getCheckins\",\r\n        \"description\": \"Возвращает список отметок пользователей в местах согласно заданным параметрам.\",\r\n        \"access_rights\": [],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"latitude\",\r\n            \"description\": \"Географическая широта исходной точки поиска, заданная в градусах (от -90 до 90).\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"longitude\",\r\n            \"description\": \"Географическая долгота исходной точки поиска, заданная в градусах (от -180 до 180).\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"place\",\r\n            \"description\": \"Идентификатор места. Игнорируется, если указаны `latitude` и `longitude`.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"user_id\",\r\n            \"description\": \"Идентификатор пользователя. Игнорируется, если указаны `latitude` и `longitude` или `place`.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"offset\",\r\n            \"description\": \"Смещение относительно первой отметки для выборки определенного подмножества. Игнорируется, если установлен ненулевой `timestamp`.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"count\",\r\n            \"description\": \"Количество возвращаемых отметок. Игнорируется, если установлен ненулевой `timestamp`.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"timestamp\",\r\n            \"description\": \"Указывает, что нужно вернуть только те отметки, которые были созданы после заданного `timestamp`.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"friends_only\",\r\n            \"description\": \"`1` — указывает, что следует выводить только отметки друзей, если заданы географические координаты. Игнорируется, если не заданы параметры `latitude` и `longitude`.\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"need_places\",\r\n            \"description\": \"Указывает, следует ли возвращать информацию о месте в котором была сделана отметка. Игнорируется, если указан параметр `place`.\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"title\": \"Podcasts\",\r\n    \"methods\": [\r\n      {\r\n        \"title\": \"podcasts.searchPodcast\",\r\n        \"description\": \"\",\r\n        \"access_rights\": [],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"search_string\",\r\n            \"description\": \"\",\r\n            \"type\": \"string\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"offset\",\r\n            \"description\": \"\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"count\",\r\n            \"description\": \"\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"title\": \"Polls\",\r\n    \"methods\": [\r\n      {\r\n        \"title\": \"polls.getById\",\r\n        \"description\": \"Возвращает детальную информацию об опросе по его идентификатору.\",\r\n        \"access_rights\": [\r\n          \"wall\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"owner_id\",\r\n            \"description\": \"Идентификатор пользователя или сообщества, которому принадлежит опрос.\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"is_board\",\r\n            \"description\": \"`1` — опрос находится в обсуждении, `0` — опрос прикреплен к стене.\\nПо умолчанию — `0`.\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"poll_id\",\r\n            \"description\": \"Идентификатор опроса.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"extended\",\r\n            \"description\": \"`1` — возвращать дополнительную информацию о профилях пользователей.\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"friends_count\",\r\n            \"description\": \"Число идентификаторов проголосовавших друзей, которые необходимо вернуть в ответе.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"fields\",\r\n            \"description\": \"Список дополнительных полей профилей. См. [список возможных значений](reference/objects/user)\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"name_case\",\r\n            \"description\": \"Падеж для склонения имени и фамилии пользователя. \\nВозможные значения: \\n* именительный – `nom`,\\n* родительный – `gen`,\\n* дательный – `dat`,\\n* винительный – `acc`,\\n* творительный – `ins`,\\n* предложный – `abl`.\\n\\n По умолчанию `nom`.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"polls.getVoters\",\r\n        \"description\": \"Получает список идентификаторов пользователей, которые выбрали определенные варианты ответа в опросе.\",\r\n        \"access_rights\": [],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"owner_id\",\r\n            \"description\": \"Идентификатор пользователя или сообщества, которому принадлежит опрос.\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"poll_id\",\r\n            \"description\": \"Идентификатор опроса.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"answer_ids\",\r\n            \"description\": \"Идентификаторы вариантов ответа.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"is_board\",\r\n            \"description\": \"`1` — опрос находится в обсуждении, `0` — опрос прикреплен к стене.\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"friends_only\",\r\n            \"description\": \"Указывает, необходимо ли возвращать только пользователей, которые являются друзьями текущего пользователя. \\nПараметр может принимать следующие значения:\\n* `0` — возвращать всех пользователей в порядке убывания времени голосования;\\n* `1` — возвращать только друзей текущего пользователя в порядке убывания времени голосования. \\n\\nЕсли параметр не был задан, то считается, что он равен `0`.\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"offset\",\r\n            \"description\": \"Смещение относительно начала списка, для выборки определенного подмножества. Если параметр не задан, то считается, что он равен `0`.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"count\",\r\n            \"description\": \"Количество возвращаемых идентификаторов пользователей.\\nЕсли параметр не задан, то считается, что он равен **100**, если не задан параметр `friends_only`, в противном случае **10**.\\nМаксимальное значение параметра **1000**, если не задан параметр `friends_only`, в противном случае **100**.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"fields\",\r\n            \"description\": \"Перечисленные через запятую поля анкет, необходимые для получения. Доступные значения: `nickname`, `screen_name`, `sex`, `bdate` (`birthdate`), `city`, `country`, `timezone`, `photo`, `photo_medium`, `photo_big`, `has_mobile`, `rate`, `contacts`, `education`, `online`, `counters`.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"name_case\",\r\n            \"description\": \"Падеж для склонения имени и фамилии пользователя. \\nВозможные значения:\\n* именительный – `nom`,\\n* родительный – `gen`,\\n* дательный – `dat`,\\n* винительный – `acc`,\\n* творительный – `ins`,\\n* предложный – `abl`. \\n\\nПо умолчанию `nom`.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"title\": \"PrettyCards\",\r\n    \"methods\": [\r\n      {\r\n        \"title\": \"prettyCards.create\",\r\n        \"description\": \"Создаёт карточку карусели.\",\r\n        \"access_rights\": [\r\n          \"ads\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"owner_id\",\r\n            \"description\": \"Идентификатор владельца карточки. Необходимо указать идентификатор сообщества, взятый со знаком минус. Пример:  `-19542789`.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"photo\",\r\n            \"description\": \"Фотография карточки.\\n\\nИспользуйте значение, полученное после загрузки фотографии на сервер. См. метод [prettyCards.getUploadURL](method/prettyCards.getUploadURL).\\n\\nТакже можно переиспользовать существующую фотографию из другой карточки. Используйте значение поля `photo`, которое возвращает метод [prettyCards.get](method/prettyCards.get) или [prettyCards.getById](method/prettyCards.getById).\",\r\n            \"type\": \"string\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"title\",\r\n            \"description\": \"Заголовок. \",\r\n            \"type\": \"string\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"link\",\r\n            \"description\": \"Ссылка. Кроме HTTP(S)-ссылок также допускается указание телефонных номеров в виде `tel:+79111234567`. \",\r\n            \"type\": \"string\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"price\",\r\n            \"description\": \"Цена. «0» будет отображён как «Бесплатно». Не передавайте этот параметр, чтобы не указывать цену.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"price_old\",\r\n            \"description\": \"Старая цена. Отображается зачёркнутой. «0» будет отображён как «Бесплатно». Не передавайте этот параметр, чтобы не указывать старую цену.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"button\",\r\n            \"description\": \"Кнопка. Не передавайте этот параметр, чтобы не использовать кнопку.\\n\\n | `button` | **Текст** | **Действие** | **Тип ссылок** |\\n|---|---|---|---|\\n | `app_join` | Запустить | Переход по ссылке | Приложения и игры |\\n | `app_game_join` | Играть | Переход по ссылке | Игры |\\n | `open_url` | Перейти | Переход по ссылке | Внешние сайты, сообщества, приложения |\\n | `open` | Открыть | Переход по ссылке | Внешние сайты |\\n | `more` | Подробнее | Переход по ссылке | Сообщества |\\n | `call` | Позвонить | Набор номера | Телефонные номера |\\n | `book` | Забронировать | Набор номера | Телефонные номера |\\n | `enroll` | Записаться | Переход по ссылке или набор номера | Внешние сайты, телефонные номера |\\n | `register` | Зарегистрироваться | Набор номера | Телефонные номера |\\n | `buy` | Купить | Переход по ссылке | Внешние сайты |\\n | `buy_ticket` | Купить билет | Переход по ссылке | Внешние сайты |\\n | `to_shop` | В магазин | Переход по ссылке | Внешние сайты |\\n | `order` | Заказать | Переход по ссылке | Внешние сайты |\\n | `create` | Создать | Переход по ссылке | Внешние сайты |\\n | `install` | Установить | Переход по ссылке | Внешние сайты |\\n | `contact` | Связаться | Переход по ссылке | Внешние сайты |\\n | `fill` | Заполнить | Переход по ссылке | Внешние сайты |\\n | `choose` | Выбрать | Переход по ссылке | Внешние сайты |\\n | `try` | Попробовать | Переход по ссылке | Внешние сайты |\\n | `join_public` | Подписаться | Подписка на публичную страницу | Публичные страницы |\\n | `join_event` | Я пойду | Участие в мероприятии | События |\\n | `join_group` | Вступить | Вступление в сообщество | Сообщества |\\n | `im_group` | Связаться | Переход к диалогу с сообществом | Сообщества, публичные страницы, события |\\n | `im_group2` | Написать | Переход к диалогу с сообществом | Сообщества, публичные страницы, события |\\n | `begin` | Начать | Переход по ссылке | Внешние сайты |\\n | `get` | Получить | Переход по ссылке | Внешние сайты |\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"prettyCards.delete\",\r\n        \"description\": \"Удаляет карточку.\",\r\n        \"access_rights\": [\r\n          \"ads\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"owner_id\",\r\n            \"description\": \"Идентификатор владельца карточки.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"card_id\",\r\n            \"description\": \"Идентификатор карточки.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": true\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"prettyCards.edit\",\r\n        \"description\": \"Редактирует карточку карусели.\",\r\n        \"access_rights\": [\r\n          \"ads\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"owner_id\",\r\n            \"description\": \"Идентификатор владельца карточки.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"card_id\",\r\n            \"description\": \"Идентификатор карточки.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"photo\",\r\n            \"description\": \"Новая фотография. Подробнее см. метод [prettyCards.create](method/prettyCards.create).\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"title\",\r\n            \"description\": \"Новый заголовок.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"link\",\r\n            \"description\": \"Новая ссылка. Подробнее см. метод [prettyCards.create](method/prettyCards.create).\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"price\",\r\n            \"description\": \"Новая цена. Подробнее см. метод [prettyCards.create](method/prettyCards.create).\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"price_old\",\r\n            \"description\": \"Обновлённая старая цена. Подробнее см. метод [prettyCards.create](method/prettyCards.create).\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"button\",\r\n            \"description\": \"Новая кнопка. Подробнее см. метод [prettyCards.create](method/prettyCards.create).\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"prettyCards.get\",\r\n        \"description\": \"Возвращает неиспользованные карточки владельца.\",\r\n        \"access_rights\": [\r\n          \"ads\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"owner_id\",\r\n            \"description\": \"Идентификатор владельца.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"offset\",\r\n            \"description\": \"Смещение относительно начала списка карточек.\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"count\",\r\n            \"description\": \"Количество возвращаемых карточек.\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"prettyCards.getById\",\r\n        \"description\": \"Возвращает информацию о карточке.\",\r\n        \"access_rights\": [\r\n          \"ads\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"owner_id\",\r\n            \"description\": \"Идентификатор владельца карточки.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"card_ids\",\r\n            \"description\": \"Список идентификаторов карточек, которые необходимо вернуть. Строка с числами, разделёнными запятой.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": true\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"prettyCards.getUploadURL\",\r\n        \"description\": \"Возвращает URL для загрузки фотографии для карточки.\",\r\n        \"access_rights\": [\r\n          \"ads\"\r\n        ],\r\n        \"params\": []\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"title\": \"Search\",\r\n    \"methods\": [\r\n      {\r\n        \"title\": \"search.getHints\",\r\n        \"description\": \"Метод позволяет получить результаты быстрого поиска по произвольной подстроке. \",\r\n        \"access_rights\": [\r\n          \"friends\",\r\n          \"groups\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"q\",\r\n            \"description\": \"Текст запроса, результаты которого нужно получить\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"offset\",\r\n            \"description\": \"Смещение для выборки определённого подмножества результатов.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"limit\",\r\n            \"description\": \"Ограничение на количество возвращаемых результатов.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"filters\",\r\n            \"description\": \"Перечисленные через запятую типы данных, которые необходимо вернуть. Возможные значения:\\n* `friends` – друзья пользователя;\\n* `idols` – подписки пользователя;\\n* `publics` – публичные страницы, на которые подписан пользователь;\\n* `groups` – группы пользователя;\\n* `events` – встречи пользователя;\\n* `correspondents` – люди, с которыми пользователь имеет переписку;\\n* `mutual_friends` – люди, у которых  есть общие друзья с текущим пользователем (этот фильтр позволяет получить не всех пользователей, имеющих общих друзей).\\n\\n\\n\\nПо умолчанию возвращаются все.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"fields\",\r\n            \"description\": \"Дополнительные поля [профилей](reference/objects/user) и [сообществ](reference/objects/group) для получения.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"search_global\",\r\n            \"description\": \"`1` — к результатам поиска добавляются результаты глобального поиска по всем пользователям и группам.\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"title\": \"Secure\",\r\n    \"methods\": [\r\n      {\r\n        \"title\": \"secure.addAppEvent\",\r\n        \"description\": \"Добавляет информацию о достижениях пользователя в приложении.\",\r\n        \"access_rights\": [],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"user_id\",\r\n            \"description\": \"Идентификатор пользователя, для которого нужно записать данные.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"activity_id\",\r\n            \"description\": \"Идентификатор достижения. Доступные значения:\\n* `1` — достигнут новый уровень, работает аналогично [secure.setUserLevel](method/secure.setUserLevel);\\n* `2` — заработано новое число очков;\\n* положительное число, отличное от `1` и `2` — выполнена миссия с идентификатором `activity_id`.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"value\",\r\n            \"description\": \"Номер уровня или заработанное количество очков (соответственно, для `activity_id`=`1` и `activity_id`=`2`).\\n\\nПараметр игнорируется при значении `activity_id`, отличном от `1` и `2`.\\n\\nЕсли `activity_id` = `1`, то максимальное `value` `15000`.\\nЕсли `activity_id` = `2`, то максимальное `value` `10000000`.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"secure.checkToken\",\r\n        \"description\": \"Позволяет проверять валидность ключа доступа пользователя в **iFrame**, **VK Mini Apps** и **Standalone**-приложениях с помощью передаваемого в приложения параметра `access_token`.\",\r\n        \"access_rights\": [],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"token\",\r\n            \"description\": \"Клиентский `access_token`.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"ip\",\r\n            \"description\": \"IP-адрес пользователя. Обратите внимание, что пользователь может обращаться через IPv6, в этом случае обязательно передавать IPv6-адрес пользователя.\\nЕсли параметр не передан, IP-адрес проверен не будет.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"secure.getAppBalance\",\r\n        \"description\": \"Возвращает платежный баланс (счет) приложения в сотых долях голоса.\",\r\n        \"access_rights\": [\r\n          \"votes\"\r\n        ],\r\n        \"params\": []\r\n      },\r\n      {\r\n        \"title\": \"secure.getSMSHistory\",\r\n        \"description\": \"Выводит список SMS-уведомлений, отосланных приложением с помощью метода [secure.sendSMSNotification](method/secure.sendSMSNotification).\",\r\n        \"access_rights\": [],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"user_id\",\r\n            \"description\": \"\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"date_from\",\r\n            \"description\": \"Фильтр по дате начала. Задается в виде UNIX-time.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"date_to\",\r\n            \"description\": \"Фильтр по дате окончания. Задается в виде UNIX-time.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"limit\",\r\n            \"description\": \"Количество возвращаемых записей. По умолчанию **1000**.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"secure.getTransactionsHistory\",\r\n        \"description\": \"Выводит историю транзакций по переводу голосов между пользователями и приложением.\",\r\n        \"access_rights\": [\r\n          \"votes\"\r\n        ],\r\n        \"params\": []\r\n      },\r\n      {\r\n        \"title\": \"secure.getUserLevel\",\r\n        \"description\": \"Возвращает ранее выставленный игровой уровень одного или нескольких пользователей в приложении.\",\r\n        \"access_rights\": [],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"user_ids\",\r\n            \"description\": \"\",\r\n            \"type\": \"string\",\r\n            \"is_required\": true\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"secure.giveEventSticker\",\r\n        \"description\": \"Выдает пользователю стикер и открывает игровое достижение.\",\r\n        \"access_rights\": [],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"user_ids\",\r\n            \"description\": \"Список id пользователей которым нужно открыть достижение.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"achievement_id\",\r\n            \"description\": \"ID игрового достижения на платформе игр.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": true\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"secure.sendNotification\",\r\n        \"description\": \"Отправляет уведомление пользователю.\",\r\n        \"access_rights\": [\r\n          \"notify_global\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"user_ids\",\r\n            \"description\": \"Перечисленные через запятую идентификаторы пользователей, которым отправляется уведомление (максимум **100** штук).\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"user_id\",\r\n            \"description\": \"Идентификатор пользователя.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"message\",\r\n            \"description\": \"Текст уведомления, который следует передавать в кодировке **UTF-8** (максимум **254** символа).\",\r\n            \"type\": \"string\",\r\n            \"is_required\": true\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"secure.sendSMSNotification\",\r\n        \"description\": \"Отправляет **SMS**-уведомление на мобильный телефон пользователя.\",\r\n        \"access_rights\": [],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"user_id\",\r\n            \"description\": \"ID пользователя, которому отправляется SMS-уведомление. Пользователь должен разрешить приложению отсылать ему уведомления (getUserSettings, +1).\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"message\",\r\n            \"description\": \"Текст SMS, который следует передавать в кодировке UTF-8. Допускаются только латинские буквы и цифры. Максимальный размер — **160** символов.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": true\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"secure.setCounter\",\r\n        \"description\": \"Устанавливает счетчик, который выводится пользователю жирным шрифтом в левом меню.\",\r\n        \"access_rights\": [],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"counters\",\r\n            \"description\": \"Позволяет устанавливать счетчики нескольким пользователям за один запрос. \\n\\nЗначение следует указывать в следующем формате: \\n\\n```\\nuser_id1:counter1[:increment],user_id2:counter2[:increment]\\n\\n```\\n\\nПример:\\n\\n```\\n66748:6:1,6492:2\\n```\\n\\nВ случае, если указан этот параметр, параметры `counter`, `user_id` и `increment` не учитываются. Можно передать не более **200** значений за один запрос.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"user_id\",\r\n            \"description\": \"Идентификатор пользователя.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"counter\",\r\n            \"description\": \"Значение счетчика.\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"increment\",\r\n            \"description\": \"Определяет, нужно ли заменить значение счетчика или прибавить новое значение к уже имеющемуся. `1` — прибавить `counter` к старому значению, `0` — заменить счетчик (по умолчанию).\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"secure.setUserLevel\",\r\n        \"description\": \"Устанавливает игровой уровень пользователя в приложении, который смогут увидеть его друзья.\",\r\n        \"access_rights\": [],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"levels\",\r\n            \"description\": \"Позволяет указывать уровни нескольким пользователям за один запрос. \\n\\nЗначение следует указывать в следующем формате: \\n\\n```\\nuser_id1:level1,user_id2:level2\\n```\\n\\nПример: \\n\\n```\\n66748:6,6492:2\\n```\\n\\nВ случае, если указан этот параметр, параметры `level` и `user_id` не учитываются. Метод принимает не более **200** значений за один запрос.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"user_id\",\r\n            \"description\": \"Идентификатор пользователя.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"level\",\r\n            \"description\": \"Значение уровня.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"title\": \"Stats\",\r\n    \"methods\": [\r\n      {\r\n        \"title\": \"stats.get\",\r\n        \"description\": \"Возвращает статистику сообщества или приложения.\",\r\n        \"access_rights\": [],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"group_id\",\r\n            \"description\": \"Идентификатор сообщества.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"app_id\",\r\n            \"description\": \"Идентификатор приложения.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"date_from\",\r\n            \"description\": \"Начальная дата выводимой статистики в формате YYYY-MM-DD.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"date_to\",\r\n            \"description\": \"Конечная дата выводимой статистики в формате YYYY-MM-DD.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"timestamp_from\",\r\n            \"description\": \"Начало периода статистики в `Unixtime`.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"timestamp_to\",\r\n            \"description\": \"Окончание периода статистики в `Unixtime`.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"interval\",\r\n            \"description\": \"Временные интервалы. Возможные значения: `day`, `week`, `month`, `year`, `all`. По умолчанию: `day`.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"intervals_count\",\r\n            \"description\": \"Количество интервалов времени.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"filters\",\r\n            \"description\": \"\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"stats_groups\",\r\n            \"description\": \"Фильтр для получения данных по конкретному блоку статистики сообщества. Возможные значения: `visitors`, `reach`, `activity`.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"extended\",\r\n            \"description\": \"`1` — возвращать дополнительно агрегированные данные в результатах.\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"stats.getPostReach\",\r\n        \"description\": \"Возвращает статистику для записи на стене.\",\r\n        \"access_rights\": [],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"owner_id\",\r\n            \"description\": \"Идентификатор сообщества — владельца записи. Указывается со знаком «минус».\",\r\n            \"type\": \"string\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"post_ids\",\r\n            \"description\": \"\",\r\n            \"type\": \"string\",\r\n            \"is_required\": true\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"title\": \"Status\",\r\n    \"methods\": [\r\n      {\r\n        \"title\": \"status.get\",\r\n        \"description\": \"Получает текст статуса пользователя или сообщества.\",\r\n        \"access_rights\": [\r\n          \"activity\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"user_id\",\r\n            \"description\": \"Идентификатор пользователя или сообщества, информацию о статусе которого нужно получить.\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"group_id\",\r\n            \"description\": \"Идентификатор сообщества, статус которого необходимо получить.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"title\": \"Storage\",\r\n    \"methods\": [\r\n      {\r\n        \"title\": \"storage.get\",\r\n        \"description\": \"Возвращает значение переменной, название которой передано в параметре `key`.\",\r\n        \"access_rights\": [],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"key\",\r\n            \"description\": \"Название переменной.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"keys\",\r\n            \"description\": \"Список названий переменных, разделённых запятыми. Если указан этот параметр, то параметр `key` не учитывается.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"user_id\",\r\n            \"description\": \"ID пользователя, переменная которого устанавливается, в случае если данные запрашиваются серверным методом.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"storage.getKeys\",\r\n        \"description\": \"Возвращает названия всех переменных.\",\r\n        \"access_rights\": [],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"user_id\",\r\n            \"description\": \"ID пользователя, названия переменных которого получаются, в случае если данные запрашиваются серверным методом.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"offset\",\r\n            \"description\": \"Смещение, необходимое для выборки определенного подмножества названий переменных. По умолчанию `0`.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"count\",\r\n            \"description\": \"Количество названий переменных, информацию о которых необходимо получить.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"storage.set\",\r\n        \"description\": \"Сохраняет значение переменной, название которой передано в параметре `key`.\",\r\n        \"access_rights\": [],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"key\",\r\n            \"description\": \"Название переменной. Может содержать символы латинского алфавита, цифры, знак тире, нижнее подчёркивание [a-zA-Z_\\\\-0-9].\",\r\n            \"type\": \"string\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"value\",\r\n            \"description\": \"Значение переменной, сохраняются только первые **4096** байта.\",\r\n            \"type\": \"text\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"user_id\",\r\n            \"description\": \"ID пользователя, переменная которого устанавливается, в случае если данные запрашиваются серверным методом.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"title\": \"Stories\",\r\n    \"methods\": [\r\n      {\r\n        \"title\": \"stories.search\",\r\n        \"description\": \"Возвращает результаты поиска по историям.\",\r\n        \"access_rights\": [\r\n          \"stories\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"q\",\r\n            \"description\": \"Поисковый запрос.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"place_id\",\r\n            \"description\": \"Идентификатор места.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"latitude\",\r\n            \"description\": \"Географическая широта точки, в радиусе которой необходимо производить поиск, заданная в градусах (от -90 до 90).\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"longitude\",\r\n            \"description\": \"Географическая долгота точки, в радиусе которой необходимо производить поиск, заданная в градусах (от -180 до 180).\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"radius\",\r\n            \"description\": \"Радиус зоны поиска в метрах.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"mentioned_id\",\r\n            \"description\": \"Идентификатор упомянутого в истории пользователя или сообщества.\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"count\",\r\n            \"description\": \"Количество историй, информацию о которых необходимо вернуть.\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"extended\",\r\n            \"description\": \"Параметр, определяющий необходимость возвращать расширенную информацию о владельце истории. Возможные значения:\\n* `0` — возвращаются только идентификаторы;\\n* `1` — будут дополнительно возвращены имя и фамилия.\\n\\nПо умолчанию: `0`.\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"fields\",\r\n            \"description\": \"Список дополнительных полей профилей, которые необходимо вернуть. См. [подробное описание](reference/objects/user).\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"stories.sendInteraction\",\r\n        \"description\": \"Отправляет фидбек на историю.\",\r\n        \"access_rights\": [],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"access_key\",\r\n            \"description\": \"Ключ доступа пользователя, полученный при подписке. Возвращает событие [VKWebAppSubscribeStoryApp](bridge/VKWebAppSubscribeStoryApp).\",\r\n            \"type\": \"string\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"message\",\r\n            \"description\": \"Текст фидбека.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"is_broadcast\",\r\n            \"description\": \"Возможные значения:\\n*  `0` —  фидбек виден только отправителю и автору истории;\\n*  `1` —  фидбек виден всем зрителям истории и автору.\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"is_anonymous\",\r\n            \"description\": \"Возможные значения:\\n*  `0` — автор фидбека не  анонимный;\\n*  `1` —  автор фидбека  анонимный.\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"unseen_marker\",\r\n            \"description\": \"\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"title\": \"Streaming\",\r\n    \"methods\": [\r\n      {\r\n        \"title\": \"streaming.getServerUrl\",\r\n        \"description\": \"Позволяет получить данные для подключения к [Streaming API](api/streaming/getting-started).\",\r\n        \"access_rights\": [],\r\n        \"params\": []\r\n      },\r\n      {\r\n        \"title\": \"streaming.getSettings\",\r\n        \"description\": \"Позволяет получить значение порога для [Streaming API](api/streaming/getting-started).\",\r\n        \"access_rights\": [],\r\n        \"params\": []\r\n      },\r\n      {\r\n        \"title\": \"streaming.getStats\",\r\n        \"description\": \"Позволяет получить статистику для подготовленных и доставленных событий [Streaming API](api/streaming/getting-started).\",\r\n        \"access_rights\": [],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"type\",\r\n            \"description\": \"Тип статистики. Возможные значения:\\n* `received` — события, полученные приложением;\\n* `prepared` — события, сгенерированные со стороны ВКонтакте.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"interval\",\r\n            \"description\": \"Интервалы статистики. Возможные значения:\\n* `5m` — пять минут. Максимальный период — 3 дня между `start_time` и `end_time`;\\n* `1h` — один час. Максимальный период — 7 дней между `start_time` и `end_time`;\\n* `24h` — сутки. Максимальный период — 31 день между `start_time` и `end_time`.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"start_time\",\r\n            \"description\": \"Время начала отсчёта в `unixtime`. По умолчанию: `end_time` минус сутки.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"end_time\",\r\n            \"description\": \"Время окончания отсчёта в `unixtime`. По умолчанию: текущее время.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"streaming.getStem\",\r\n        \"description\": \"Позволяет получить основу слова.\",\r\n        \"access_rights\": [],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"word\",\r\n            \"description\": \"Слово, основу которого мы собираемся получить.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": true\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"streaming.setSettings\",\r\n        \"description\": \"Позволяет задать значение порога для [Streaming API](api/streaming/getting-started).\",\r\n        \"access_rights\": [],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"monthly_tier\",\r\n            \"description\": \"Значение порога в месяц. Возможные значения:\\n* `tier_1`;\\n* `tier_2`;\\n* `tier_3`;\\n* `tier_4`;\\n* `tier_5`;\\n* `tier_6`;\\n* `unlimited`.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"title\": \"Users\",\r\n    \"methods\": [\r\n      {\r\n        \"title\": \"users.get\",\r\n        \"description\": \"Возвращает расширенную информацию о пользователях.\",\r\n        \"access_rights\": [],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"user_ids\",\r\n            \"description\": \"Перечисленные через запятую идентификаторы пользователей или их короткие имена (`screen_name`). По умолчанию — идентификатор текущего пользователя.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"fields\",\r\n            \"description\": \"Список дополнительных полей профилей, которые необходимо вернуть. См. [подробное описание](reference/objects/user).\\n\\nДоступные значения:\\n* `activities`,\\n* `about`, \\n* `blacklisted`,\\n* `blacklisted_by_me`,\\n* `books`,\\n* `bdate`,\\n* `can_be_invited_group`,\\n* `can_post`,\\n* `can_see_all_posts`,\\n* `can_see_audio`,\\n* `can_send_friend_request`, \\n* `can_write_private_message`, \\n* `career`,\\n* `common_count`,\\n* `connections`,\\n* `contacts`,\\n* `city`,\\n* `country`,\\n* `crop_photo`,\\n* `domain`,\\n* `education`,\\n* `exports`,\\n* `followers_count`,\\n* `friend_status`,\\n* `has_photo`,\\n* `has_mobile`,\\n* `home_town`,\\n* `photo_100`,\\n* `photo_200`,\\n* `photo_200_orig`,\\n* `photo_400_orig`,\\n* `photo_50`,\\n* `sex`,\\n* `site`,\\n* `schools`,\\n* `screen_name`,\\n* `status`,\\n* `verified`,\\n* `games`,\\n* `interests`,\\n* `is_favorite`,\\n* `is_friend`,\\n* `is_hidden_from_feed`,\\n* `last_seen`,\\n* `maiden_name`,\\n* `military`,\\n* `movies`,\\n* `music`,\\n* `nickname`,\\n* `occupation`,\\n* `online`,\\n* `personal`,\\n* `photo_id`,\\n* `photo_max`,\\n* `photo_max_orig`,\\n* `quotes`,\\n* `relation`,\\n* `relatives`,\\n* `timezone`,\\n* `tv`,\\n* `universities`.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"name_case\",\r\n            \"description\": \"Падеж для склонения имени и фамилии пользователя. \\nВозможные значения: \\n* именительный – `nom`,\\n* родительный – `gen`,\\n* дательный – `dat`,\\n* винительный – `acc`,\\n* творительный – `ins`,\\n* предложный – `abl`. \\n\\nПо умолчанию `nom`.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"users.getFollowers\",\r\n        \"description\": \"Возвращает список идентификаторов пользователей, которые являются подписчиками пользователя.\",\r\n        \"access_rights\": [],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"user_id\",\r\n            \"description\": \"Идентификатор пользователя.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"offset\",\r\n            \"description\": \"Смещение, необходимое для выборки определенного подмножества подписчиков.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"count\",\r\n            \"description\": \"Количество подписчиков, информацию о которых нужно получить.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"fields\",\r\n            \"description\": \"Список дополнительных полей профилей, которые необходимо вернуть. См. [подробное описание](reference/objects/user).\\nДоступные значения: \\n* `about`,\\n* `activities`, \\n* `bdate`, \\n* `blacklisted`,\\n* `blacklisted_by_me`\\n* `books`,\\n* `can_post`, \\n* `can_see_all_posts`,\\n* `can_see_audio`,\\n* `can_send_friend_request`,\\n* `can_write_private_message`, \\n* `career`, \\n* `city`,\\n* `common_count`, \\n* `connections`,\\n* `contacts`, \\n* `country`,\\n* `crop_photo`, \\n* `domain`, \\n* `education`, \\n* `exports`, \\n* `followers_count`,\\n* `friend_status`,\\n* `games`, \\n* `has_mobile`,\\n* `has_photo`, \\n* `home_town`,\\n* `interests`, \\n* `is_favorite`, \\n* `is_friend`, \\n* `is_hidden_from_feed`,\\n* `last_seen`,\\n* `lists`, \\n* `maiden_name`,\\n* `military`, \\n* `movies`, \\n* `music`, \\n* `nickname`,\\n* `occupation`, \\n* `online`,\\n* `personal`, \\n* `photo_100`,\\n* `photo_200`, \\n* `photo_200_orig`,\\n* `photo_400_orig`, \\n* `photo_50`,\\n* `photo_id`,\\n* `photo_max`, \\n* `photo_max_orig`,\\n* `quotes`,\\n* `relation`,\\n* `relatives`, \\n* `schools`,\\n* `screen_name`, \\n* `sex`,\\n* `site`,\\n* `status`,\\n* `timezone`, \\n* `tv`, \\n* `universities`, \\n* `verified`,\\n* `wall_comments`.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"name_case\",\r\n            \"description\": \"Падеж для склонения имени и фамилии пользователя. \\nВозможные значения: \\n* именительный – `nom`,\\n* родительный – `gen`,\\n* дательный – `dat`,\\n* винительный – `acc`,\\n* творительный – `ins`,\\n* предложный – `abl`.\\n\\n По умолчанию `nom`.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"users.getSubscriptions\",\r\n        \"description\": \"Возвращает список идентификаторов пользователей и публичных страниц, которые входят в список подписок пользователя.\",\r\n        \"access_rights\": [],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"user_id\",\r\n            \"description\": \"Идентификатор пользователя, подписки которого необходимо получить.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"extended\",\r\n            \"description\": \"`1` – возвращает объединенный список, содержащий объекты [group](reference/objects/group) и [user](reference/objects/user) вместе. `0` – возвращает список идентификаторов групп и пользователей отдельно (по умолчанию).\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"offset\",\r\n            \"description\": \"Смещение необходимое для выборки определенного подмножества подписок. Этот параметр используется только если передан `extended`=`1`.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"count\",\r\n            \"description\": \"Количество подписок, которые необходимо вернуть. Этот параметр используется только если передан `extended`=`1`.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"fields\",\r\n            \"description\": \"Список дополнительных полей для объектов [user](reference/objects/user) и [group](reference/objects/group), которые необходимо вернуть.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"users.search\",\r\n        \"description\": \"Возвращает список пользователей в соответствии с заданным критерием поиска.\",\r\n        \"access_rights\": [],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"q\",\r\n            \"description\": \"Строка поискового запроса. Например, `Вася Бабич`.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"sort\",\r\n            \"description\": \"Сортировка результатов. Возможные значения:\\n* `1` — по дате регистрации,\\n* `0` — по популярности.\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"offset\",\r\n            \"description\": \"Смещение относительно первого найденного пользователя для выборки определенного подмножества.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"count\",\r\n            \"description\": \"Количество возвращаемых пользователей.\\n\\n> Обратите внимание, даже при использовании параметра `offset` для получения информации доступны только первые **1000** результатов.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"fields\",\r\n            \"description\": \"Список дополнительных полей профилей, которые необходимо вернуть. См. [подробное описание](reference/objects/user).\\nДоступные значения: \\n* `about`,\\n* `activities`, \\n* `bdate`, \\n* `blacklisted`,\\n* `blacklisted_by_me`\\n* `books`,\\n* `can_post`, \\n* `can_see_all_posts`,\\n* `can_see_audio`,\\n* `can_send_friend_request`,\\n* `can_write_private_message`, \\n* `career`, \\n* `city`,\\n* `common_count`, \\n* `connections`,\\n* `contacts`, \\n* `country`,\\n* `crop_photo`, \\n* `domain`, \\n* `education`, \\n* `exports`, \\n* `followers_count`,\\n* `friend_status`,\\n* `games`, \\n* `has_mobile`,\\n* `has_photo`, \\n* `home_town`,\\n* `interests`, \\n* `is_favorite`, \\n* `is_friend`, \\n* `is_hidden_from_feed`,\\n* `last_seen`,\\n* `lists`, \\n* `maiden_name`,\\n* `military`, \\n* `movies`, \\n* `music`, \\n* `nickname`,\\n* `occupation`, \\n* `online`,\\n* `personal`, \\n* `photo_100`,\\n* `photo_200`, \\n* `photo_200_orig`,\\n* `photo_400_orig`, \\n* `photo_50`,\\n* `photo_id`,\\n* `photo_max`, \\n* `photo_max_orig`,\\n* `quotes`,\\n* `relation`,\\n* `relatives`, \\n* `schools`,\\n* `screen_name`, \\n* `sex`,\\n* `site`,\\n* `status`,\\n* `timezone`, \\n* `tv`, \\n* `universities`, \\n* `verified`,\\n* `wall_comments`.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"city\",\r\n            \"description\": \"Идентификатор города.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"country\",\r\n            \"description\": \"Идентификатор страны.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"hometown\",\r\n            \"description\": \"Название города строкой.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"university_country\",\r\n            \"description\": \"Идентификатор страны, в которой пользователи закончили ВУЗ.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"university\",\r\n            \"description\": \"Идентификатор ВУЗа.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"university_year\",\r\n            \"description\": \"Год окончания ВУЗа.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"university_faculty\",\r\n            \"description\": \"Идентификатор факультета.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"university_chair\",\r\n            \"description\": \"Идентификатор кафедры.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"sex\",\r\n            \"description\": \"Пол. Возможные значения:\\n*  `1` —  женщина,\\n*  `2` — мужчина,\\n*  `0` — любой (по умолчанию).\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"status\",\r\n            \"description\": \"Семейное положение. Возможные значения:\\n* `1` — не женат (не замужем),\\n* `2` — встречается,\\n* `3` — помолвлен(-а),\\n* `4` — женат (замужем),\\n* `5` — всё сложно,\\n* `6` — в активном поиске,\\n* `7` — влюблен(-а),\\n* `8` — в гражданском браке.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"age_from\",\r\n            \"description\": \"Возраст, от.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"age_to\",\r\n            \"description\": \"Возраст, до.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"birth_day\",\r\n            \"description\": \"День рождения.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"birth_month\",\r\n            \"description\": \"Месяц рождения.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"birth_year\",\r\n            \"description\": \"Год рождения.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"online\",\r\n            \"description\": \"Учитывать ли статус «онлайн». Возможные значения:\\n* `1` — искать только пользователей онлайн,\\n* `0` — искать по всем пользователям.\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"has_photo\",\r\n            \"description\": \"Учитывать ли наличие фото. Возможные значения:\\n* `1` — искать только пользователей с фотографией,\\n* `0` — искать по всем пользователям.\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"school_country\",\r\n            \"description\": \"Идентификатор страны, в которой пользователи закончили школу.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"school_city\",\r\n            \"description\": \"Идентификатор города, в котором пользователи закончили школу.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"school_class\",\r\n            \"description\": \"Буква класса.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"school\",\r\n            \"description\": \"Идентификатор школы, которую закончили пользователи.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"school_year\",\r\n            \"description\": \"Год окончания школы.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"religion\",\r\n            \"description\": \"Религиозные взгляды.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"company\",\r\n            \"description\": \"Название компании, в которой работают пользователи.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"position\",\r\n            \"description\": \"Название должности.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"group_id\",\r\n            \"description\": \"Идентификатор группы, среди пользователей которой необходимо проводить поиск.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"from_list\",\r\n            \"description\": \"Разделы среди которых нужно осуществить поиск, перечисленные через запятую. \\nВозможные значения:\\n* `friends` — искать среди друзей,\\n* `subscriptions` — искать среди друзей и подписок пользователя.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"title\": \"Utils\",\r\n    \"methods\": [\r\n      {\r\n        \"title\": \"utils.checkLink\",\r\n        \"description\": \"Возвращает информацию о том, является ли внешняя ссылка заблокированной на сайте ВКонтакте.\",\r\n        \"access_rights\": [],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"url\",\r\n            \"description\": \"Внешняя ссылка, которую необходимо проверить.\\nНапример, `https://google.com`.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": true\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"utils.deleteFromLastShortened\",\r\n        \"description\": \"Удаляет сокращенную ссылку из списка пользователя.\",\r\n        \"access_rights\": [],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"key\",\r\n            \"description\": \"Сокращённая ссылка (часть URL после «vk.cc/»).\",\r\n            \"type\": \"string\",\r\n            \"is_required\": true\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"utils.getLastShortenedLinks\",\r\n        \"description\": \"Получает список сокращённых ссылок для текущего пользователя.\",\r\n        \"access_rights\": [],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"count\",\r\n            \"description\": \"Количество ссылок, которые необходимо получить.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"offset\",\r\n            \"description\": \"Сдвиг для получения определенного подмножества ссылок.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"utils.getLinkStats\",\r\n        \"description\": \"Возвращает статистику переходов по [сокращённой](utils.getShortLink) ссылке.\",\r\n        \"access_rights\": [],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"key\",\r\n            \"description\": \"Сокращённая ссылка (часть URL после «vk.cc/»).\",\r\n            \"type\": \"string\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"source\",\r\n            \"description\": \"\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"access_key\",\r\n            \"description\": \"Ключ доступа к приватной статистике ссылки.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"interval\",\r\n            \"description\": \"Единица времени для подсчета статистики. Возможные значения:\\n* `hour` — час;\\n* `day` — день;\\n* `week` — неделя;\\n* `month` — месяц;\\n* `forever` — все время с момента создания ссылки.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"intervals_count\",\r\n            \"description\": \"Длительность периода для получения статистики в выбранных единицах (из параметра `interval`).\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"extended\",\r\n            \"description\": \"`1` — возвращать расширенную статистику (пол, возраст, страна, город).\\n`0` — возвращать только количество переходов.\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"utils.getServerTime\",\r\n        \"description\": \"Возвращает текущее время на сервере ВКонтакте в `unixtime`.\",\r\n        \"access_rights\": [],\r\n        \"params\": []\r\n      },\r\n      {\r\n        \"title\": \"utils.getShortLink\",\r\n        \"description\": \"Позволяет получить URL, сокращённый с помощью vk.cc.\",\r\n        \"access_rights\": [],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"url\",\r\n            \"description\": \"URL, для которого необходимо получить сокращённый вариант.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"private\",\r\n            \"description\": \"`1` — статистика ссылки приватная. \\n`0` — статистика ссылки общедоступная.\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"utils.resolveScreenName\",\r\n        \"description\": \"Определяет тип объекта (пользователь, сообщество, приложение) и его идентификатор по короткому имени `screen_name`.\",\r\n        \"access_rights\": [],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"screen_name\",\r\n            \"description\": \"Короткое имя пользователя, группы или приложения. Например, apiclub, andrew или rules_of_war.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": true\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"title\": \"Video\",\r\n    \"methods\": [\r\n      {\r\n        \"title\": \"video.add\",\r\n        \"description\": \"Добавляет видеозапись в список пользователя.\",\r\n        \"access_rights\": [\r\n          \"video\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"target_id\",\r\n            \"description\": \"Идентификатор пользователя или сообщества, в которое нужно добавить видео.\\n\\n> Обратите внимание, идентификатор сообщества в параметре `target_id` необходимо указывать со знаком `«-»` — например, `target_id`=`-1` соответствует идентификатору сообщества [ВКонтакте API](https://vk.com/apiclub) (club1).\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"video_id\",\r\n            \"description\": \"Идентификатор видеозаписи.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"owner_id\",\r\n            \"description\": \"Идентификатор пользователя или сообщества, которому принадлежит видеозапись.\\n\\n> Обратите внимание, идентификатор сообщества в параметре `owner_id` необходимо указывать со знаком `«-»` — например, `owner_id`=`-1` соответствует идентификатору сообщества [ВКонтакте API](https://vk.com/apiclub) (club1).\",\r\n            \"type\": \"string\",\r\n            \"is_required\": true\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"video.addAlbum\",\r\n        \"description\": \"Создает пустой альбом видеозаписей.\",\r\n        \"access_rights\": [\r\n          \"video\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"group_id\",\r\n            \"description\": \"Идентификатор сообщества (если необходимо создать альбом в сообществе).\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"title\",\r\n            \"description\": \"Название альбома.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"privacy\",\r\n            \"description\": \"Настройки доступа к альбому в [специальном формате](reference/objects/privacy).\\nПриватность доступна для альбомов с видео в профиле пользователя.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"video.addToAlbum\",\r\n        \"description\": \"Позволяет добавить видеозапись в альбом.\",\r\n        \"access_rights\": [\r\n          \"video\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"target_id\",\r\n            \"description\": \"Идентификатор владельца альбома, в который нужно добавить видео.\\n\\n> Обратите внимание, идентификатор сообщества в параметре `target_id` необходимо указывать со знаком `«-»` — например, `target_id`=`-1` соответствует идентификатору сообщества [ВКонтакте API](https://vk.com/apiclub) (club1).\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"album_id\",\r\n            \"description\": \"Идентификатор альбома, в который нужно добавить видео.\\nДля добавления видео в общий альбом «Добавленные» передавайте `-2`.\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"album_ids\",\r\n            \"description\": \"Идентификаторы альбомов, в которые нужно добавить видео.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"owner_id\",\r\n            \"description\": \"Идентификатор владельца видеозаписи.\\n\\n> Обратите внимание, идентификатор сообщества в параметре `owner_id` необходимо указывать со знаком `«-»` — например, `owner_id`=`-1` соответствует идентификатору сообщества [ВКонтакте API](https://vk.com/apiclub) (club1).\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"video_id\",\r\n            \"description\": \"Идентификатор видеозаписи.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": true\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"video.createComment\",\r\n        \"description\": \"Cоздает новый комментарий к видеозаписи\",\r\n        \"access_rights\": [\r\n          \"video\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"owner_id\",\r\n            \"description\": \"Идентификатор пользователя или сообщества, которому принадлежит видеозапись.\\n\\n> Обратите внимание, идентификатор сообщества в параметре `owner_id` необходимо указывать со знаком `«-»` — например, `owner_id`=`-1` соответствует идентификатору сообщества [ВКонтакте API](https://vk.com/apiclub) (club1).\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"video_id\",\r\n            \"description\": \"Идентификатор видеозаписи.\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"message\",\r\n            \"description\": \"Текст комментария. Обязательный параметр, если не задан параметр `attachments`.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"attachments\",\r\n            \"description\": \"Список объектов, приложенных к комментарию и разделённых символом `«,»`. Поле `attachments` представляется в формате:\\n```\\n<type><owner_id>_<media_id>,<type><owner_id>_<media_id>\\n```\\n\\n`<type>` — тип медиа-вложения:\\n* `photo` — фотография \\n* `video` — видеозапись \\n* `audio` — аудиозапись \\n* `doc` — документ\\n\\n`<owner_id>` — идентификатор владельца медиа-вложения \\n`<media_id>` — идентификатор медиа-вложения. \\n\\nНапример:\\n```\\nphoto100172_166443618,photo66748_265827614\\n```\\n\\nПараметр является обязательным, если не задан параметр `message`.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"from_group\",\r\n            \"description\": \"Этот параметр учитывается, если `owner_id` < `0` (комментарий к видеозаписи группы). `1` — комментарий будет опубликован от имени группы, `0` — комментарий будет опубликован от имени пользователя. по умолчанию: `0`.\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"reply_to_comment\",\r\n            \"description\": \"Идентификатор комментария, в ответ на который должен быть добавлен новый комментарий.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"sticker_id\",\r\n            \"description\": \"Идентификатор стикера.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"guid\",\r\n            \"description\": \"Уникальный идентификатор, предназначенный для предотвращения повторной отправки одинакового комментария.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"video.delete\",\r\n        \"description\": \"Удаляет видеозапись со страницы пользователя.\",\r\n        \"access_rights\": [\r\n          \"video\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"video_id\",\r\n            \"description\": \"Идентификатор видеозаписи.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"owner_id\",\r\n            \"description\": \"Идентификатор пользователя или сообщества, которому принадлежит видеозапись.\\n\\n> Обратите внимание, идентификатор сообщества в параметре `owner_id` необходимо указывать со знаком `«-»` — например, `owner_id`=`-1` соответствует идентификатору сообщества [ВКонтакте API](https://vk.com/apiclub) (club1).\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"target_id\",\r\n            \"description\": \"Идентификатор пользователя или сообщества, для которого нужно удалить видеозапись.\\n\\n> Обратите внимание, идентификатор сообщества в параметре `target_id` необходимо указывать со знаком `«-»` — например, `target_id`=`-1` соответствует идентификатору сообщества [ВКонтакте API](https://vk.com/apiclub) (club1).\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"video.deleteAlbum\",\r\n        \"description\": \"Удаляет альбом видеозаписей.\",\r\n        \"access_rights\": [\r\n          \"video\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"group_id\",\r\n            \"description\": \"Идентификатор сообщества (если альбом, который необходимо удалить, принадлежит сообществу).\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"album_id\",\r\n            \"description\": \"Идентификатор альбома.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": true\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"video.deleteComment\",\r\n        \"description\": \"Удаляет комментарий к видеозаписи.\",\r\n        \"access_rights\": [\r\n          \"video\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"owner_id\",\r\n            \"description\": \"Идентификатор пользователя или сообщества, которому принадлежит видеозапись.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"comment_id\",\r\n            \"description\": \"Идентификатор комментария.\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": true\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"video.edit\",\r\n        \"description\": \"Редактирует данные видеозаписи.\",\r\n        \"access_rights\": [\r\n          \"video\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"owner_id\",\r\n            \"description\": \"Идентификатор пользователя или сообщества, которому принадлежит видеозапись.\\n\\n> Обратите внимание, идентификатор сообщества в параметре `owner_id` необходимо указывать со знаком `«-»` — например, `owner_id`=`-1` соответствует идентификатору сообщества [ВКонтакте API](https://vk.com/apiclub) (club1).\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"video_id\",\r\n            \"description\": \"Идентификатор видеозаписи.\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"name\",\r\n            \"description\": \"Новое название для видеозаписи.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"desc\",\r\n            \"description\": \"Новое описание для видеозаписи.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"privacy_view\",\r\n            \"description\": \"Настройки приватности просмотра видеозаписи в [специальном формате](reference/objects/privacy). Приватность доступна для видеозаписей, которые пользователь загрузил в профиль.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"privacy_comment\",\r\n            \"description\": \"Настройки приватности комментирования видеозаписи в [специальном формате](reference/objects/privacy).\\nПриватность доступна для видеозаписей, которые пользователь загрузил в профиль.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"no_comments\",\r\n            \"description\": \"Закрыть комментарии (для видео из сообществ).\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"repeat\",\r\n            \"description\": \"Зацикливание воспроизведения видеозаписи.\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"video.editAlbum\",\r\n        \"description\": \"Редактирует альбом с видео.\",\r\n        \"access_rights\": [\r\n          \"video\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"group_id\",\r\n            \"description\": \"Идентификатор сообщества (если нужно отредактировать альбом, принадлежащий сообществу).\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"album_id\",\r\n            \"description\": \"Идентификатор альбома.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"title\",\r\n            \"description\": \"Новое название для альбома.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"privacy\",\r\n            \"description\": \"Уровень доступа к альбому в [специальном формате](reference/objects/privacy).\\nПриватность доступна для альбомов с видео в профиле пользователя.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"video.editComment\",\r\n        \"description\": \"Изменяет текст комментария к видеозаписи.\",\r\n        \"access_rights\": [\r\n          \"video\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"owner_id\",\r\n            \"description\": \"Идентификатор пользователя или сообщества, которому принадлежит видеозапись.\\n\\n> Обратите внимание, идентификатор сообщества в параметре `owner_id` необходимо указывать со знаком `«-»` — например, `owner_id`=`-1` соответствует идентификатору сообщества [ВКонтакте API](https://vk.com/apiclub) (club1).\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"comment_id\",\r\n            \"description\": \"Идентификатор комментария.\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"message\",\r\n            \"description\": \"Новый текст комментария. Обязательный параметр, если не задан параметр `attachments`.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"attachments\",\r\n            \"description\": \"Новый список объектов, приложенных к комментарию и разделённых символом `«,»`. Поле `attachments` представляется в формате:\\n\\n```\\n<type><owner_id>_<media_id>,<type><owner_id>_<media_id>\\n```\\n\\n`<type>` — тип медиа-вложения:\\n* `photo` — фотография,\\n* `video` — видеозапись,\\n* `audio` — аудиозапись,\\n* `doc` — документ.\\n\\n`<owner_id>` — идентификатор владельца медиа-вложения \\n`<media_id>` — идентификатор медиа-вложения. \\n\\nНапример:\\n```\\nphoto100172_166443618,photo66748_265827614`\\n```\\nОбязательный параметр, если не задан параметр `message`.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"video.get\",\r\n        \"description\": \"Возвращает информацию о видеозаписях.\",\r\n        \"access_rights\": [\r\n          \"video\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"owner_id\",\r\n            \"description\": \"Идентификатор пользователя или сообщества, которому принадлежат видеозаписи.\\n\\n> Обратите внимание, идентификатор сообщества в параметре `owner_id` необходимо указывать со знаком «-» — например, `owner_id`=`-1` соответствует идентификатору сообщества [ВКонтакте API](https://vk.com/apiclub) (club1).\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"videos\",\r\n            \"description\": \"Перечисленные через запятую идентификаторы — идущие через знак подчеркивания `id` пользователей, которым принадлежат видеозаписи, и `id` самих видеозаписей. Если видеозапись принадлежит сообществу, то в качестве первого параметра используется `-id` сообщества.\\n\\nПример значения `videos`:\\n\\n```\\n-4363_136089719,13245770_137352259\\n```\\n\\nНекоторые видеозаписи, идентификаторы которых могут быть получены через API, закрыты приватностью, и не будут получены. В этом случае следует использовать ключ доступа [access_key](reference/objects) в её идентификаторе. \\n\\nПример значения `videos`:\\n\\n```\\n1_129207899_`220df2876123d3542f`, 6492_135055734_`e0a9bcc31144f67fbd`\\n```\\n\\nПоле `access_key` будет возвращено вместе с остальными данными видеозаписи в методах, которые возвращают видеозаписи, закрытые приватностью, но доступные в данном контексте. Например, данное поле имеют видеозаписи, возвращаемые методом [messages.get](method/messages.get).\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"album_id\",\r\n            \"description\": \"Идентификатор альбома, видеозаписи из которого нужно вернуть.\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"count\",\r\n            \"description\": \"Количество возвращаемых видеозаписей.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"offset\",\r\n            \"description\": \"Смещение относительно первой найденной видеозаписи для выборки определённого подмножества.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"extended\",\r\n            \"description\": \"Определяет, возвращать ли информацию о настройках приватности видео для текущего пользователя.\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"fields\",\r\n            \"description\": \"\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"video.getAlbumById\",\r\n        \"description\": \"Позволяет получить информацию об альбоме с видео.\",\r\n        \"access_rights\": [\r\n          \"video\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"owner_id\",\r\n            \"description\": \"Идентификатор пользователя или сообщества, которому принадлежит альбом.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"album_id\",\r\n            \"description\": \"Идентификатор альбома.\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": true\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"video.getAlbums\",\r\n        \"description\": \"Возвращает список альбомов видеозаписей пользователя или сообщества.\",\r\n        \"access_rights\": [\r\n          \"video\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"owner_id\",\r\n            \"description\": \"Идентификатор владельца альбомов (пользователь или сообщество). По умолчанию — идентификатор текущего пользователя.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"offset\",\r\n            \"description\": \"Смещение, необходимое для выборки определенного подмножества альбомов. По умолчанию: `0`.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"count\",\r\n            \"description\": \"Количество альбомов, информацию о которых нужно вернуть. По умолчанию: не больше 50, максимальное значение: 100.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"extended\",\r\n            \"description\": \"`1`— возвращать дополнительные поля `count`, `updated_time` и массив объектов `image` для каждого альбома. Если альбом пустой, то массив объектов `image` для него возвращен не будет. По умолчанию: `0`.\\nПоля объекта `image`:\\n* `\\\"height\\\"` (`integer`) — Высота изображения.\\n\\n* `\\\"url\\\"` (`string`) — Ссылка на изображение.\\n\\n* `\\\"width\\\"` (`integer`) — Ширина изображение.\\n\\n* `\\\"with_padding\\\"` (`integer`) — Поле возвращается, если изображение с отбивкой, всегда содержит `1`.\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"need_system\",\r\n            \"description\": \"`1` — возвращать системные альбомы.\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"video.getAlbumsByVideo\",\r\n        \"description\": \"Возвращает список альбомов, в которых находится видеозапись.\",\r\n        \"access_rights\": [\r\n          \"video\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"target_id\",\r\n            \"description\": \"Идентификатор пользователя или сообщества, для которого нужно получить список альбомов, содержащих видеозапись.\\n\\n> Обратите внимание, идентификатор сообщества в параметре `target_id` необходимо указывать со знаком `«-»` — например, `target_id`=`-1` соответствует идентификатору сообщества [ВКонтакте API](https://vk.com/apiclub) (club1).\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"owner_id\",\r\n            \"description\": \"Идентификатор владельца видеозаписи.\\n\\n> Обратите внимание, идентификатор сообщества в параметре `owner_id` необходимо указывать со знаком `«-»` — например, `owner_id`=`-1` соответствует идентификатору сообщества [ВКонтакте API](https://vk.com/apiclub) (club1).\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"video_id\",\r\n            \"description\": \"Идентификатор видеозаписи.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"extended\",\r\n            \"description\": \"`1` — возвращать расширенную информацию об альбомах.\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"video.getComments\",\r\n        \"description\": \"Возвращает список комментариев к видеозаписи.\",\r\n        \"access_rights\": [\r\n          \"video\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"owner_id\",\r\n            \"description\": \"Идентификатор пользователя или сообщества, которому принадлежит видеозапись.\\n\\n> Обратите внимание, идентификатор сообщества в параметре `owner_id` необходимо указывать со знаком `«-»` — например, `owner_id`=`-1` соответствует идентификатору сообщества [ВКонтакте API](https://vk.com/apiclub) (club1).\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"video_id\",\r\n            \"description\": \"Идентификатор видеозаписи.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"need_likes\",\r\n            \"description\": \"`1` — будет возвращено дополнительное поле `likes`. По умолчанию поле `likes` не возвращается.\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"start_comment_id\",\r\n            \"description\": \"Идентификатор комментария, начиная с которого нужно вернуть список (подробности см. ниже).\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"offset\",\r\n            \"description\": \"Смещение, необходимое для выборки определенного подмножества комментариев. По умолчанию: `0`.\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"count\",\r\n            \"description\": \"Количество комментариев, информацию о которых необходимо вернуть.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"sort\",\r\n            \"description\": \"Порядок сортировки комментариев. Возможные значения:\\n* `asc` — от старых к новым;\\n* `desc` — от новых к старым.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"extended\",\r\n            \"description\": \"`1` — в ответе будут возвращены дополнительные поля `profiles` и `groups`, содержащие информацию о пользователях и сообществах. По умолчанию: `0`.\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"fields\",\r\n            \"description\": \"\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"video.getNewTags\",\r\n        \"description\": \"Возвращает список видеозаписей, на которых есть непросмотренные отметки.\",\r\n        \"access_rights\": [\r\n          \"video\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"offset\",\r\n            \"description\": \"Смещение, необходимое для получения определённого подмножества видеозаписей.\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"count\",\r\n            \"description\": \"Количество видеозаписей, которые необходимо вернуть.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"video.getTags\",\r\n        \"description\": \"Возвращает список отметок на видеозаписи.\",\r\n        \"access_rights\": [\r\n          \"video\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"owner_id\",\r\n            \"description\": \"Идентификатор владельца видеозаписи (пользователь или сообщество). По умолчанию — идентификатор текущего пользователя.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"video_id\",\r\n            \"description\": \"Идентификатор видеозаписи.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": true\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"video.moveToAlbum\",\r\n        \"description\": \"Перемещает видеозаписи в альбом.\",\r\n        \"access_rights\": [\r\n          \"video\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"group_id\",\r\n            \"description\": \"Идентификатор сообщества, которому принадлежат видеозаписи. Если параметр не указан, то работа ведется с альбомом текущего пользователя.\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"album_id\",\r\n            \"description\": \"Идентификатор альбома, в который перемещаются видеозаписи.\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"video_ids\",\r\n            \"description\": \"Список идентификаторов видеороликов.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": true\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"video.putTag\",\r\n        \"description\": \"Добавляет отметку на видеозапись.\",\r\n        \"access_rights\": [\r\n          \"video\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"user_id\",\r\n            \"description\": \"Идентификатор пользователя, которого нужно отметить.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"owner_id\",\r\n            \"description\": \"Идентификатор владельца видеозаписи (пользователь или сообщество). По умолчанию — идентификатор текущего пользователя.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"video_id\",\r\n            \"description\": \"Идентификатор видеозаписи.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"tagged_name\",\r\n            \"description\": \"Текст отметки.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"video.removeFromAlbum\",\r\n        \"description\": \"Позволяет убрать видеозапись из альбома.\",\r\n        \"access_rights\": [\r\n          \"video\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"target_id\",\r\n            \"description\": \"Идентификатор владельца альбома.\\n\\n> Обратите внимание, идентификатор сообщества в параметре `target_id` необходимо указывать со знаком `«-»` — например, `target_id`=`-1` соответствует идентификатору сообщества [ВКонтакте API](https://vk.com/apiclub) (club1).\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"album_id\",\r\n            \"description\": \"Идентификатор альбома, из которого нужно убрать видео.\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"album_ids\",\r\n            \"description\": \"Идентификаторы альбомов, из которых нужно убрать видео.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"owner_id\",\r\n            \"description\": \"Идентификатор владельца видеозаписи.\\n\\n> Обратите внимание, идентификатор сообщества в параметре `owner_id` необходимо указывать со знаком `«-»` — например, `owner_id`=`-1` соответствует идентификатору сообщества [ВКонтакте API](https://vk.com/apiclub) (club1).\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"video_id\",\r\n            \"description\": \"Идентификатор видеозаписи.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": true\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"video.removeTag\",\r\n        \"description\": \"Удаляет отметку с видеозаписи.\",\r\n        \"access_rights\": [\r\n          \"video\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"tag_id\",\r\n            \"description\": \"Идентификатор отметки.\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"owner_id\",\r\n            \"description\": \"Идентификатор владельца видеозаписи (пользователь или сообщество). По умолчанию — идентификатор текущего пользователя.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"video_id\",\r\n            \"description\": \"Идентификатор видеозаписи.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": true\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"video.reorderAlbums\",\r\n        \"description\": \"Позволяет изменить порядок альбомов с видео.\",\r\n        \"access_rights\": [\r\n          \"video\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"owner_id\",\r\n            \"description\": \"Идентификатор пользователя или сообщества, которому принадлежит альбом.\\n\\n> Обратите внимание, идентификатор сообщества в параметре `owner_id` необходимо указывать со знаком `«-»` — например, `owner_id`=`-1` соответствует идентификатору сообщества [ВКонтакте API](https://vk.com/apiclub) (club1).\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"album_id\",\r\n            \"description\": \"Идентификатор альбома, который нужно переместить.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"before\",\r\n            \"description\": \"Идентификатор альбома, перед которым нужно поместить текущий.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"after\",\r\n            \"description\": \"Идентификатор альбома, после которого нужно поместить текущий.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"video.reorderVideos\",\r\n        \"description\": \"Позволяет переместить видеозапись в альбоме.\",\r\n        \"access_rights\": [\r\n          \"video\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"target_id\",\r\n            \"description\": \"Идентификатор пользователя или сообщества, в чьем альбоме нужно переместить видео.\\n\\n> Обратите внимание, идентификатор сообщества в параметре `target_id` необходимо указывать со знаком `«-»` — например, `target_id`=`-1` соответствует идентификатору сообщества [ВКонтакте API](https://vk.com/apiclub) (club1).\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"album_id\",\r\n            \"description\": \"Идентификатор альбома с видеозаписью, которую нужно переместить.\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"owner_id\",\r\n            \"description\": \"Идентификатор владельца видеозаписи, которую нужно переместить (пользователь или сообщество).\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"video_id\",\r\n            \"description\": \"Идентификатор видеозаписи, которую нужно переместить.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"before_owner_id\",\r\n            \"description\": \"Идентификатор владельца видеозаписи, перед которой следует поместить текущую (пользователь или сообщество).\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"before_video_id\",\r\n            \"description\": \"Идентификатор видеозаписи, перед которой следует поместить текущую.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"after_owner_id\",\r\n            \"description\": \"Идентификатор владельца видеозаписи, после которой следует поместить текущую (пользователь или сообщество).\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"after_video_id\",\r\n            \"description\": \"Идентификатор видеозаписи, после которой следует поместить текущую.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"video.restore\",\r\n        \"description\": \"Восстанавливает удаленную видеозапись.\",\r\n        \"access_rights\": [\r\n          \"video\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"video_id\",\r\n            \"description\": \"Идентификатор видеозаписи.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"owner_id\",\r\n            \"description\": \"Идентификатор владельца видеозаписи (пользователь или сообщество).\\n\\n> Обратите внимание, идентификатор сообщества в параметре `owner_id` необходимо указывать со знаком `«-»` — например, `owner_id`=`-1` соответствует идентификатору сообщества [ВКонтакте API](https://vk.com/apiclub) (club1).\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"video.restoreComment\",\r\n        \"description\": \"Восстанавливает удаленный комментарий к видеозаписи.\",\r\n        \"access_rights\": [\r\n          \"video\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"owner_id\",\r\n            \"description\": \"Идентификатор пользователя или сообщества, которому принадлежит видеозапись.\\n\\n> Обратите внимание, идентификатор сообщества в параметре `owner_id` необходимо указывать со знаком `«-»` — например, `owner_id`=`-1` соответствует идентификатору сообщества [ВКонтакте API](https://vk.com/apiclub) (club1).\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"comment_id\",\r\n            \"description\": \"Идентификатор удаленного комментария.\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": true\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"video.save\",\r\n        \"description\": \"Возвращает адрес сервера, необходимый для [загрузки](api/upload), и данные видеозаписи.\",\r\n        \"access_rights\": [\r\n          \"video\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"name\",\r\n            \"description\": \"Название видеофайла.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"description\",\r\n            \"description\": \"Описание видеофайла.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"is_private\",\r\n            \"description\": \"Указывается `1`, если видео загружается для отправки личным сообщением. После загрузки с этим параметром видеозапись не будет отображаться в списке видеозаписей пользователя и не будет доступна другим пользователям по её идентификатору. По умолчанию: `0`.\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"wallpost\",\r\n            \"description\": \"Требуется ли после сохранения опубликовать запись с видео на стене (`1` — требуется, `0` — не требуется).\\n\\n> Обратите внимание, для публикации записи на стене приложение должно иметь права `wall`.\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"link\",\r\n            \"description\": \"URL для встраивания видео с внешнего сайта, например, с YouTube. В этом случае нужно вызвать полученный `upload_url`, не прикрепляя файл, достаточно просто обратиться по этому адресу.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"group_id\",\r\n            \"description\": \"Идентификатор сообщества, в которое будет сохранён видеофайл. По умолчанию файл сохраняется на страницу текущего пользователя.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"album_id\",\r\n            \"description\": \"Идентификатор альбома, в который будет загружен видео файл.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"privacy_view\",\r\n            \"description\": \"Настройки приватности просмотра видеозаписи в [специальном формате](reference/objects/privacy). Приватность доступна для видеозаписей, которые пользователь загрузил в профиль.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"privacy_comment\",\r\n            \"description\": \"Настройки приватности комментирования видеозаписи в [специальном формате](reference/objects/privacy).\\nПриватность доступна для видеозаписей, которые пользователь загрузил в профиль.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"no_comments\",\r\n            \"description\": \"`1` — закрыть комментарии (для видео из сообществ). По умолчанию: `0`.\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"repeat\",\r\n            \"description\": \"Зацикливание воспроизведения видеозаписи.\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"compression\",\r\n            \"description\": \"\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"video.search\",\r\n        \"description\": \"Возвращает список видеозаписей в соответствии с заданным критерием поиска.\",\r\n        \"access_rights\": [\r\n          \"video\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"q\",\r\n            \"description\": \"Строка поискового запроса. Например, `The Beatles`.\\nПоиск по пустому запросу возможен только при наличии `owner_id`.\\n\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"sort\",\r\n            \"description\": \"Сортировка результатов. \\nВозможные значения:\\n* `0` — по дате добавления видеозаписи,\\n* `1` — по длительности,\\n* `2` — по релевантности,\\n* `3` — по количеству просмотров.\\n\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"hd\",\r\n            \"description\": \"Если не равен нулю, то поиск производится только по видеозаписям высокого качества.\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"adult\",\r\n            \"description\": \"Фильтр «Безопасный поиск». Возможные значения:\\n* `1` — выключен,\\n* `0` — включен.\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"live\",\r\n            \"description\": \"\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"filters\",\r\n            \"description\": \"Список критериев, по которым требуется отфильтровать видео:\\n* `mp4` — искать только видео в формате .mp4 (воспроизводимое на iOS),\\n* `youtube` — возвращать только YouTube видео,\\n* `vimeo` — возвращать только Vimeo видео,\\n* `short` — возвращать только короткие видеозаписи,\\n* `long` — возвращать только длинные видеозаписи.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"search_own\",\r\n            \"description\": \"`1` — искать по видеозаписям пользователя, `0` — не искать по видеозаписям пользователя. По умолчанию: `0`.\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"offset\",\r\n            \"description\": \"Смещение относительно первой найденной видеозаписи для выборки определённого подмножества.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"longer\",\r\n            \"description\": \"Количество секунд, видеозаписи длиннее которого необходимо вернуть.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"shorter\",\r\n            \"description\": \"Количество секунд, видеозаписи короче которого необходимо вернуть.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"count\",\r\n            \"description\": \"Количество возвращаемых видеозаписей.\\n\\n> Обратите внимание — даже при использовании параметра `offset` для получения информации доступны только первые 1000 результатов.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"extended\",\r\n            \"description\": \"`1` — в ответе будут возвращены дополнительные поля `profiles` и `groups`, содержащие информацию о пользователях и сообществах. По умолчанию: `0`.\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"owner_id\",\r\n            \"description\": \"\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"title\": \"Wall\",\r\n    \"methods\": [\r\n      {\r\n        \"title\": \"wall.editAdsStealth\",\r\n        \"description\": \"Позволяет отредактировать скрытую запись.\",\r\n        \"access_rights\": [\r\n          \"ads\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"owner_id\",\r\n            \"description\": \"Идентификатор владельца стены (идентификатор сообщества нужно указывать со знаком «минус»).\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"post_id\",\r\n            \"description\": \"Идентификатор записи.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"message\",\r\n            \"description\": \"Текст записи.\",\r\n            \"type\": \"text\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"attachments\",\r\n            \"description\": \"Список объектов, приложенных к записи и разделённых символом `«,»`. Поле `attachments` представляется в формате:\\n\\n```\\n<type><owner_id>_<media_id>,<type><owner_id>_<media_id>\\n```\\n\\n`<type>` — тип медиа-приложения:\\n* `photo` — фотография; \\n* `video` — видеозапись ;\\n* `audio` — аудиозапись; \\n* `doc` — документ;\\n* `page` — wiki-страница;\\n* `note` — заметка;\\n* `poll` — опрос;\\n* `album` — альбом;\\n* `market` — товар;\\n* `market_album` — подборка товаров. \\n\\n`<owner_id>` — идентификатор владельца медиа-приложения (обратите внимание, если объект находится в сообществе, этот параметр должен быть отрицательным). \\n`<media_id>` — идентификатор медиа-приложения. \\n\\nНапример:\\n\\n```\\nphoto100172_166443618,photo-1_265827614\\n```\\n\\nТакже в поле `attachments` может быть указана ссылка на внешнюю страницу, которую Вы хотите разместить в записи, например:\\n\\n```\\nphoto66748_265827614,http://habrahabr.ru\\n```\\n\\nВ качестве ссылки может быть использован телефонный номер  в формате `tel:+71234567890`\\n\\nПри попытке приложить больше одной ссылки будет возвращена ошибка. \\n\\nПараметр является обязательным, если не задан параметр `message`.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"signed\",\r\n            \"description\": \"`1` — у записи, размещенной от имени сообщества, будет добавлена подпись (имя пользователя, разместившего запись), `0` — без подписи.\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"lat\",\r\n            \"description\": \"Географическая широта отметки, заданная в градусах (от -90 до 90).\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"long\",\r\n            \"description\": \"Географическая долгота отметки, заданная в градусах (от -180 до 180).\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"place_id\",\r\n            \"description\": \"Идентификатор места.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"link_button\",\r\n            \"description\": \"Идентификатор кнопки, которую необходимо добавить к сниппету для ссылки. Подробнее см. документацию метода wall.postAdsStealth.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"link_title\",\r\n            \"description\": \"Заголовок, который должен быть использован для сниппета. Если не указан, будет автоматически получен с целевой ссылки. Обязательно указывать в случае, если ссылка является номером телефона.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"link_image\",\r\n            \"description\": \"Ссылка на изображение, которое должно быть использовано для сниппета. Минимальное разрешение: **537x240**. Если не указана, будет автоматически загружена с целевой ссылки. Обязательно указывать в случае, если ссылка является номером телефона. Одновременно может быть указан либо параметр `link_image`, либо параметр `link_video`.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"link_video\",\r\n            \"description\": \"Идентификатор видео в формате `<owner_id>_<media_id>`. Одновременно может быть указан либо параметр `link_image`, либо параметр `link_video`. Кроме того, параметр `link_video` может быть указан только вместе с параметрами `link_button`, `link_title`.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"wall.get\",\r\n        \"description\": \"Возвращает список записей со стены пользователя или сообщества.\",\r\n        \"access_rights\": [],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"owner_id\",\r\n            \"description\": \"Идентификатор пользователя или сообщества, со стены которого необходимо получить записи (по умолчанию — текущий пользователь).\\n\\n> Обратите внимание, идентификатор сообщества в параметре `owner_id` необходимо указывать со знаком «-» — например, `owner_id` = `-1` соответствует идентификатору сообщества [ВКонтакте API](https://vk.com/apiclub) (club1)\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"domain\",\r\n            \"description\": \"Короткий адрес пользователя или сообщества.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"offset\",\r\n            \"description\": \"Смещение, необходимое для выборки определённого подмножества записей.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"count\",\r\n            \"description\": \"Количество записей, которое необходимо получить. Максимальное значение: 100.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"filter\",\r\n            \"description\": \"Определяет, какие типы записей на стене необходимо получить. Возможные значения:\\n* `suggests` — предложенные записи на стене сообщества (доступно только при вызове с передачей `access_token`);\\n* `postponed` — отложенные записи (доступно только при вызове с передачей `access_token`);\\n* `owner` — записи владельца стены;\\n* `others` — записи не от владельца стены;\\n* `all` — все записи на стене (`owner` + `others`).\\nПо умолчанию: `all`.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"extended\",\r\n            \"description\": \"`1` — в ответе будут возвращены дополнительные поля `profiles` и `groups`, содержащие информацию о пользователях и сообществах. По умолчанию: `0`.\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"fields\",\r\n            \"description\": \"Список дополнительных полей для [профилей](reference/objects/user) и [сообществ](reference/objects/group), которые необходимо вернуть.\\nОбратите внимание, этот параметр учитывается только при `extended`= `1`.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"wall.getById\",\r\n        \"description\": \"Возвращает список записей со стен пользователей или сообществ по их идентификаторам.\",\r\n        \"access_rights\": [],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"posts\",\r\n            \"description\": \"Перечисленные через запятую идентификаторы, которые представляют собой идущие через знак подчеркивания ID владельцев стен и ID самих записей на стене. Максимум **100** идентификаторов.\\n\\nПример значения posts:\\n```\\n93388_21539,93388_20904,-1_340364\\n```\",\r\n            \"type\": \"string\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"extended\",\r\n            \"description\": \"`1` — в ответе будут возвращены дополнительные поля `profiles` и `groups`, содержащие информацию о пользователях и сообществах. По умолчанию: `0`.\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"copy_history_depth\",\r\n            \"description\": \"Определяет размер массива `copy_history`, возвращаемого в ответе, если запись является репостом записи с другой стены. \\n\\nНапример, `copy_history_depth`=`1` — `copy_history` будет содержать один элемент с информацией о записи, прямым репостом которой является текущая.\\n`copy_history_depth`=`2` — `copy_history` будет содержать два элемента, добавляется информация о записи, репостом которой является первый элемент, и так далее (при условии, что иерархия репостов требуемой глубины для текущей записи существует).\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"fields\",\r\n            \"description\": \"Список дополнительных полей для профилей и  групп, которые необходимо вернуть. См. [описание полей объекта user](reference/objects/user) и [описание полей объекта group](reference/objects/group).\\nОбратите внимание, этот параметр учитывается только при `extended`=`1`.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"wall.getComment\",\r\n        \"description\": \"Получает информацию о комментарии на стене.\",\r\n        \"access_rights\": [\r\n          \"wall\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"owner_id\",\r\n            \"description\": \"Идентификатор владельца стены (для сообществ — со знаком «минус»).\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"comment_id\",\r\n            \"description\": \"Идентификатор комментария.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"extended\",\r\n            \"description\": \"`1` — в ответе будут возвращены дополнительные поля `profiles` и `groups`, содержащие информацию о пользователях и сообществах. По умолчанию: `0`.\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"fields\",\r\n            \"description\": \"Список дополнительных полей для [профилей](reference/objects/user) и [сообществ](reference/objects/group), которые необходимо вернуть.\\nОбратите внимание, этот параметр учитывается только при `extended`=`1`.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"wall.getComments\",\r\n        \"description\": \"Возвращает список комментариев к записи на стене.\",\r\n        \"access_rights\": [\r\n          \"wall\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"owner_id\",\r\n            \"description\": \"Идентификатор владельца страницы (пользователь или сообщество).\\n\\n> Обратите внимание, идентификатор сообщества в параметре `owner_id` необходимо указывать со знаком «-» — например, `owner_id`=`-1` соответствует идентификатору сообщества [ВКонтакте API](https://vk.com/apiclub) (club1)\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"post_id\",\r\n            \"description\": \"Идентификатор записи на стене.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"need_likes\",\r\n            \"description\": \"`1` — возвращать информацию о лайках.\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"start_comment_id\",\r\n            \"description\": \"Идентификатор комментария, начиная с которого нужно вернуть список (подробности смотрите ниже).\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"offset\",\r\n            \"description\": \"Сдвиг, необходимый для получения конкретной выборки результатов.\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"count\",\r\n            \"description\": \"Число комментариев, которые необходимо получить. По умолчанию: 10, максимальное значение: 100.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"sort\",\r\n            \"description\": \"Порядок сортировки комментариев. Возможные значения:\\n* `asc` — от старых к новым,\\n* `desc` — от новых к старым.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"preview_length\",\r\n            \"description\": \"Количество символов, по которому нужно обрезать текст комментария. Укажите `0`, если вы не хотите обрезать текст.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"extended\",\r\n            \"description\": \"`1` — в ответе будут возвращены дополнительные поля `profiles` и `groups`, содержащие информацию о пользователях и сообществах. По умолчанию — `0`.\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"fields\",\r\n            \"description\": \"Список дополнительных полей для [профилей](reference/objects/user) и [сообществ](reference/objects/group), которые необходимо вернуть.\\nОбратите внимание, этот параметр учитывается только при `extended`=`1`.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"comment_id\",\r\n            \"description\": \"Идентификатор комментария, ветку которого нужно получить.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"thread_items_count\",\r\n            \"description\": \"Максимальное число элементов в поле `thread`.\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"wall.getLikes\",\r\n        \"description\": \"Получает информацию о пользователях, которые добавили указанную запись в свой список **Мне нравится**.\",\r\n        \"access_rights\": [\r\n          \"wall\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"owner_id\",\r\n            \"description\": \"Идентификатор пользователя или сообщества, на стене которого размещена запись. Если параметр не задан, то он считается равным идентификатору текущего пользователя.\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"post_id\",\r\n            \"description\": \"Идентификатор записи на стене.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"published_only\",\r\n            \"description\": \"Указывает, что необходимо вернуть информацию только о пользователях, опубликовавших данную запись у себя на стене (по умолчанию **0**).\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"friends_only\",\r\n            \"description\": \"Указывает, что необходимо вернуть информацию только о пользователях, которые являются друзьями текущего пользователя (по умолчанию **0**).\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"offset\",\r\n            \"description\": \"Смещение, относительно начала списка, для выборки определенного подмножества (по умолчанию **0**).\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"count\",\r\n            \"description\": \"Количество возвращаемых идентификаторов пользователей. \\nЕсли параметр не задан, то при отсутствии `friends_only`=`1` считается, что он равен 100, в противном случае 10. \\nМаксимальное значение параметра — 1000, если не задан параметр `friends_only`=`1`, в противном случае 100.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"wall.getPhotoUploadServer\",\r\n        \"description\": \"Возвращает адрес сервера для загрузки фотографии на стену пользователя.\",\r\n        \"access_rights\": [],\r\n        \"params\": []\r\n      },\r\n      {\r\n        \"title\": \"wall.getReposts\",\r\n        \"description\": \"Позволяет получать список репостов заданной записи.\",\r\n        \"access_rights\": [],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"owner_id\",\r\n            \"description\": \"Идентификатор пользователя или сообщества, на стене которого находится запись. Если параметр не задан, то он считается равным идентификатору текущего пользователя.\\n\\n> Обратите внимание, идентификатор сообщества в параметре `owner_id` необходимо указывать со знаком `«-»` — например, `owner_id`=`-1` соответствует идентификатору сообщества [ВКонтакте API](https://vk.com/apiclub) (club1).\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"post_id\",\r\n            \"description\": \"Идентификатор записи на стене.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"offset\",\r\n            \"description\": \"Смещение, необходимое для выборки определенного подмножества записей.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"count\",\r\n            \"description\": \"Количество записей, которое необходимо получить.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"wall.postAdsStealth\",\r\n        \"description\": \"Позволяет создать скрытую запись, которая не попадает на стену сообщества и в дальнейшем может быть использована  для создания рекламного объявления типа «Запись в сообществе».\",\r\n        \"access_rights\": [\r\n          \"ads\"\r\n        ],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"owner_id\",\r\n            \"description\": \"Идентификатор владельца стены (идентификатор сообщества нужно указывать со знаком «минус»).\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": true\r\n          },\r\n          {\r\n            \"name\": \"message\",\r\n            \"description\": \"Текст записи.\",\r\n            \"type\": \"text\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"attachments\",\r\n            \"description\": \"Список объектов, приложенных к записи и разделённых символом `«,»`.\\n\\nВ поле может быть указана ссылка на страницу, которую Вы хотите разместить в записи, например:\\n\\n```\\nphoto66748_265827614,http://habrahabr.ru\\n```\\n\\nЛибо поле attachments представляется в формате:\\n\\n```\\n<type><owner_id>_<media_id>,<type><owner_id>_<media_id>\\n```\\n\\n`<type>` — тип медиа-приложения:\\n* `photo` — фотография; \\n* `video` — видеозапись;\\n* `audio` — аудиозапись; \\n* `doc` — документ;\\n* `page` — wiki-страница;\\n* `note` — заметка;\\n* `poll` — опрос;\\n* `album` — альбом;\\n* `market` — товар;\\n* `market_album` — подборка товаров,\\n* `pretty_card` — карточка карусели. \\n\\n`<owner_id>` — идентификатор владельца медиа-приложения (обратите внимание, если объект находится в сообществе, этот параметр должен быть отрицательным). \\n`<media_id>` — идентификатор медиа-приложения. \\n\\nНапример:\\n\\n```\\nphoto100172_166443618,photo-1_265827614\\n```\\n\\nВ качестве ссылки может быть использован телефонный номер  в формате `tel:+71234567890`.\\n\\nПри попытке приложить больше одной ссылки будет возвращена ошибка. \\n\\nПараметр является обязательным, если не задан параметр `message`.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"signed\",\r\n            \"description\": \"`1` — у записи, размещенной от имени сообщества, будет добавлена подпись (имя пользователя, разместившего запись), `0` — без подписи.\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"lat\",\r\n            \"description\": \"Географическая широта отметки, заданная в градусах (от -90 до 90).\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"long\",\r\n            \"description\": \"Географическая долгота отметки, заданная в градусах (от -180 до 180).\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"place_id\",\r\n            \"description\": \"Идентификатор места.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"guid\",\r\n            \"description\": \"Уникальный идентификатор, предназначенный для предотвращения повторной отправки одинаковой записи.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"link_button\",\r\n            \"description\": \"Идентификатор кнопки, которую необходимо добавить к сниппету для ссылки.\\n\\n | **link_button** | **Текст** | **Действие** | **Тип ссылок** |\\n|---|---|---|---|\\n | `auto` | (автовыбор) | (автовыбор) | Все |\\n | `app_join` | Запустить | Переход по ссылке | Приложения и игры |\\n | `app_game_join` | Играть | Переход по ссылке | Игры |\\n | `open_url` | Перейти | Переход по ссылке | Внешние сайты, сообщества, приложения |\\n | `open` | Открыть | Переход по ссылке | Внешние сайты |\\n | `more` | Подробнее | Переход по ссылке | Сообщества |\\n | `call` | Позвонить | Набор номера | Телефонные номера |\\n | `book` | Забронировать | Набор номера | Телефонные номера |\\n | `enroll` | Записаться | Переход по ссылке или набор номера | Внешние сайты, телефонные номера |\\n | `register` | Зарегистрироваться | Набор номера | Телефонные номера |\\n | `buy` | Купить | Переход по ссылке | Внешние сайты |\\n | `buy_ticket` | Купить билет | Переход по ссылке | Внешние сайты |\\n | `order` | Заказать | Переход по ссылке | Внешние сайты |\\n | `create` | Создать | Переход по ссылке | Внешние сайты |\\n | `install` | Установить | Переход по ссылке | Внешние сайты |\\n | `contact` | Связаться | Переход по ссылке | Внешние сайты |\\n | `fill` | Заполнить | Переход по ссылке | Внешние сайты |\\n | `join_public` | Подписаться | Подписка на публичную страницу | Публичные страницы |\\n | `join_event` | Я пойду | Участие в мероприятии | События |\\n | `join` | Вступить | Вступление в сообщество | Сообщества |\\n | `im` | Связаться | Переход к диалогу с сообществом | Сообщества, публичные страницы, события |\\n | `im2` | Написать | Переход к диалогу с сообществом | Сообщества, публичные страницы, события |\\n | `begin` | Начать | Переход по ссылке | Внешние сайты |\\n | `get` | Получить | Переход по ссылке | Внешние сайты |\\n | `watch` | Смотреть | Переход по ссылке | Внешние сайты |\\n | `download` | Скачать | Переход по ссылке | Внешние сайты |\\n | `participate` | Участвовать | Переход по ссылке | Внешние сайты |\\n | `play` | Играть | Переход по ссылке | Внешние сайты |\\n | `apply` | Подать заявку | Переход по ссылке | Внешние сайты |\\n | `get_an_offer` | Получить предложение | Переход по ссылке | Внешние сайты |\\n | `to_write` | Написать | Переход по ссылке | Внешние сайты |\\n | `reply` | Откликнуться | Переход по ссылке | Внешние сайты |\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"link_title\",\r\n            \"description\": \"Заголовок, который должен быть использован для сниппета. Если не указан, будет автоматически получен с целевой ссылки. Обязательно указывать в случае, если ссылка является номером телефона.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"link_image\",\r\n            \"description\": \"Ссылка на изображение, которое должно быть использовано для сниппета. Минимальное разрешение: **537x240**. Если не указана, будет автоматически загружена с целевой ссылки. Обязательно указывать в случае, если ссылка является номером телефона. Одновременно может быть указан либо параметр `link_image`, либо параметр `link_video`.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"link_video\",\r\n            \"description\": \"Идентификатор видео в формате `<owner_id>_<media_id>`. Одновременно может быть указан либо параметр `link_image`, либо параметр `link_video`. Кроме того, параметр `link_video` может быть указан только вместе с параметрами `link_button`, `link_title`.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"wall.search\",\r\n        \"description\": \"Позволяет искать записи на стене в соответствии с заданными критериями.\",\r\n        \"access_rights\": [],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"owner_id\",\r\n            \"description\": \"Идентификатор пользователя или сообщества.\\n\\n> Обратите внимание, идентификатор сообщества в параметре `owner_id` необходимо указывать со знаком `«-»` — например, `owner_id`=`-1` соответствует идентификатору сообщества [ВКонтакте API](https://vk.com/apiclub) (club1)\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"domain\",\r\n            \"description\": \"Короткий адрес пользователя или сообщества.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"query\",\r\n            \"description\": \"Поисковой запрос. Для точного результата запрос необходимо передавать в двойных кавычках.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"owners_only\",\r\n            \"description\": \"`1` — возвращать только записи от имени владельца стены.\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"count\",\r\n            \"description\": \"Количество записей, которые необходимо вернуть.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"offset\",\r\n            \"description\": \"Смещение, необходимо для получения определенного подмножества результатов.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"extended\",\r\n            \"description\": \"`1` — в ответе будут возвращены дополнительные поля `profiles` и `groups`, содержащие информацию о пользователях и сообществах. По умолчанию: `0`.\",\r\n            \"type\": \"checkbox\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"fields\",\r\n            \"description\": \"Список дополнительных полей для профилей и групп, которые необходимо вернуть. См. [описание полей объекта user](reference/objects/user) и [описание полей объекта group](reference/objects/group).\\nОбратите внимание, этот параметр учитывается только при `extended`=`1`.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"title\": \"Widgets\",\r\n    \"methods\": [\r\n      {\r\n        \"title\": \"widgets.getComments\",\r\n        \"description\": \"Получает список комментариев к странице, оставленных через Виджет комментариев.\",\r\n        \"access_rights\": [],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"widget_api_id\",\r\n            \"description\": \"Идентификатор приложения/сайта, с которым инициализируются виджеты.\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"url\",\r\n            \"description\": \"URL-адрес страницы.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"page_id\",\r\n            \"description\": \"Внутренний идентификатор страницы в приложении/сайте (в случае, если для инициализации виджетов использовался параметр `page_id`).\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"order\",\r\n            \"description\": \"Тип сортировки комментариев. Возможные значения: `date`, `likes`, `last_comment`. Значение по умолчанию — `date`.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"fields\",\r\n            \"description\": \"Перечисленные через запятую поля анкет необходимые для получения. Если среди полей присутствует `replies`, будут возвращены последние комментарии второго уровня для каждого комментария первого уровня.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"offset\",\r\n            \"description\": \"Смещение необходимое для выборки определенного подмножества комментариев. По умолчанию `0`.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"count\",\r\n            \"description\": \"Количество возвращаемых записей.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"title\": \"widgets.getPages\",\r\n        \"description\": \"Получает список страниц приложения/сайта, на которых установлен [Виджет комментариев](widgets/comments) или [«Мне нравится»](widgets/like).\",\r\n        \"access_rights\": [],\r\n        \"params\": [\r\n          {\r\n            \"name\": \"widget_api_id\",\r\n            \"description\": \"Идентификатор приложения/сайта, с которым инициализируются виджеты.\",\r\n            \"type\": \"integer\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"order\",\r\n            \"description\": \"Тип сортировки страниц. Возможные значения: `date`, `comments`, `likes`, `friend_likes`.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"period\",\r\n            \"description\": \"Период выборки. Возможные значения: `day`, `week`, `month`, `alltime`.\",\r\n            \"type\": \"string\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"offset\",\r\n            \"description\": \"Смещение необходимое для выборки определенного подмножества комментариев. По умолчанию `0`.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          },\r\n          {\r\n            \"name\": \"count\",\r\n            \"description\": \"Количество возвращаемых записей.\",\r\n            \"type\": \"positive\",\r\n            \"is_required\": false\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  }\r\n]","export function sleep(ms) {\r\n\treturn new Promise(resolve => setTimeout(resolve, ms))\r\n}","import React from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport {closePopout, openPopout} from '../../store/router/actions';\r\nimport {infoMethod} from '../../../infoMethod';\r\nimport {sleep} from '../../../functions';\r\n\r\nimport {\r\n    Panel,\r\n    Group,\r\n    PanelHeader,\r\n    FormItem,\r\n    MiniInfoCell,\r\n    Button,\r\n    Div,\r\n    Textarea,\r\n    Select,\r\n    CustomSelectOption,\r\n    Placeholder,\r\n    Input,\r\n    Checkbox,\r\n    Card,\r\n    Header,\r\n    Chip,\r\n    Snackbar, \r\n    Avatar,\r\n    ScreenSpinner\r\n} from '@vkontakte/vkui'\r\nimport { Icon20HelpOutline, Icon16Cancel } from '@vkontakte/icons';\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport renderjson from \"renderjson\";\r\nimport { ChipsSelect } from \"@vkontakte/vkui/dist/unstable\";\r\nimport \"@vkontakte/vkui/dist/unstable.css\"\r\n\r\nconst groups = [\r\n    {\r\n        value: \"0\",\r\n        label: \"friends\",\r\n    },\r\n    {\r\n        value: \"1\",\r\n        label: \"photos\",\r\n    },\r\n    {\r\n        value: \"2\",\r\n        label: \"video\",\r\n    },\r\n    {\r\n        value: \"3\",\r\n        label: \"stories\",\r\n    },\r\n    {\r\n        value: \"4\",\r\n        label: \"pages\",\r\n    },\r\n    {\r\n        value: \"5\",\r\n        label: \"status\",\r\n    },\r\n    {\r\n        value: \"6\",\r\n        label: \"notes\",\r\n    },\r\n    {\r\n        value: \"7\",\r\n        label: \"wall\",\r\n    },\r\n    {\r\n        value: \"8\",\r\n        label: \"docs\",\r\n    },\r\n    {\r\n        value: \"9\",\r\n        label: \"groups\",\r\n    },\r\n    {\r\n        value: \"10\",\r\n        label: \"stats\",\r\n    },\r\n    {\r\n        value: \"11\",\r\n        label: \"market\",\r\n    }\r\n];\r\n\r\nclass HomePanelBase extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = { \r\n            section: null,\r\n            infoMethods: [],\r\n            infMethod: null,\r\n            responseAPI: '',\r\n            use_method: false,\r\n            disabledButtonMethod: false,\r\n            textButtonMethod: true,\r\n            AccessToken: null,\r\n            selectedGroups: [],\r\n            snackbar: null\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            param: [\r\n                '',\r\n                '',\r\n                '',\r\n                '',\r\n                '',\r\n                '',\r\n                '',\r\n                '',\r\n            ]\r\n        })\r\n    }\r\n\r\n    async onChange(e, index) {\r\n        const { name, value, } = e.currentTarget;\r\n        value !== '' ? \r\n          (name === 'section' ? \r\n            this.setState({ [name]: value, infMethod: null }) : \r\n            this.setState({ [name]: value })\r\n          ) : \r\n          (name === 'section' ? \r\n            this.setState({ [name]: null, infMethod: null }) : \r\n            this.setState({ [name]: null })\r\n        )\r\n          \r\n        this.setState({\r\n            use_method: false,\r\n            textButtonMethod: true,\r\n            disabledButtonMethod: false,\r\n        })\r\n\r\n        try {\r\n            if (name === 'section') {\r\n                await sleep(1) //setState не обновляется моментально => костыль\r\n\r\n                let arrInfoMethods = []\r\n                // eslint-disable-next-line\r\n                infoMethod[this.state.section].methods.map((el, index) => {\r\n                    arrInfoMethods.push({ value: index, label: el.title })\r\n                })\r\n\r\n                this.setState({\r\n                    infoMethods: arrInfoMethods,\r\n                })\r\n            }\r\n            else {\r\n                let arr = this.state.param\r\n                arr[index] = value\r\n                this.setState({ param: arr })\r\n            }\r\n        }\r\n        catch(err) {\r\n            this.setState({section: null})\r\n            this.setState({infMethod: null})\r\n            this.setState({use_method: false})\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n    async copy() {\r\n        await bridge.send('VKWebAppCopyText', {text: JSON.stringify(window.responseAPI)})\r\n\r\n    }\r\n\r\n    async getToken() {\r\n        this.props.openPopout(<ScreenSpinner/>)\r\n\r\n        try {\r\n            try {\r\n                let scopes = []\r\n                // eslint-disable-next-line\r\n                this.state.selectedGroups.map((el) => {\r\n                    scopes.push(el.label)\r\n                })\r\n\r\n                let response = await bridge.send(\r\n                    \"VKWebAppGetAuthToken\",\r\n                    {\r\n                        app_id: 7976662,\r\n                        scope: scopes.join()\r\n                    }\r\n                )\r\n\r\n                if (response.scope !== scopes.join()) {\r\n                    // eslint-disable-next-line\r\n                    throw 'lets go to catch!'\r\n                }\r\n\r\n                this.setState({ \r\n                    disabledButtonMethod: false,\r\n                    use_method: false,\r\n                    textButtonMethod: true,\r\n                    accessToken: response.access_token\r\n                })\r\n            } catch(err) {\r\n                console.log(err)\r\n                this.setState({ snackbar :\r\n                    <Snackbar\r\n                        layout='vertical'\r\n                        onClose={() => this.setState({ snackbar: null })}\r\n                        action='Попробовать снова'\r\n                        onActionClick={() => this.getToken()}\r\n                        before={\r\n                            <Avatar size={24} style={{ background: 'var(--destructive)' }}> \r\n                                <Icon16Cancel fill='#fff' width={14} height={14}/> \r\n                            </Avatar>\r\n                        }\r\n                    >\r\n                        Ошибочка... Не удалось получить токен\r\n                    </Snackbar>,\r\n                    accessToken: ''\r\n                })\r\n            }\r\n        } catch(err) {\r\n            console.log(err)\r\n        }\r\n\r\n        this.props.closePopout()\r\n    }\r\n\r\n    actionCheckbox(index) {\r\n\r\n        this.setState({\r\n            use_method: false,\r\n            textButtonMethod: true,\r\n            disabledButtonMethod: false,\r\n        })\r\n\r\n        let arr = this.state.param\r\n        if (arr[index] === '' || arr[index] === 0) {\r\n            arr[index] = 1\r\n        } else {\r\n            arr[index] = 0\r\n        }\r\n\r\n        this.setState({ param: arr })\r\n    }\r\n\r\n    async executeMethod() {\r\n        this.props.openPopout(<ScreenSpinner/>)\r\n\r\n        this.setState({use_method: true})\r\n        renderjson.set_show_to_level(30)\r\n        try {\r\n\r\n            let params1 = {}\r\n            // eslint-disable-next-line\r\n            this.state.param.map((el, index) => {\r\n\r\n                // eslint-disable-next-line\r\n                if (infoMethod[this.state.section].methods[this.state.infMethod].params.length === index || el === '') return\r\n                params1[`${infoMethod[this.state.section].methods[this.state.infMethod].params[index].name}`] = el\r\n            })\r\n\r\n            params1['v'] = 5.131\r\n            params1['access_token'] = this.state.accessToken\r\n\r\n            let response = await bridge.send(\r\n                'VKWebAppCallAPIMethod',\r\n                {\r\n                    method: infoMethod[this.state.section].methods[this.state.infMethod].title,\r\n                    params: params1\r\n                }\r\n                )\r\n\r\n            window.responseAPI = response\r\n            //this.props.openModal('viewResponse')\r\n            document.getElementById('response').appendChild(renderjson(response))\r\n        } catch(err) {\r\n            window.responseAPI = err\r\n            //this.props.openModal('viewResponse')\r\n            document.getElementById('response').appendChild(renderjson(err))\r\n        }\r\n\r\n        this.props.closePopout()\r\n    }\r\n\r\n    render() {\r\n        const {id} = this.props;\r\n        const {\r\n            selectedGroups, \r\n            section, param, \r\n            infoMethods, \r\n            infMethod, \r\n            use_method,\r\n            disabledButtonMethod, \r\n            textButtonMethod, \r\n            accessToken,\r\n            snackbar\r\n        } = this.state;\r\n\r\n        const groupsChipsProps = {\r\n            value: selectedGroups,\r\n            onChange: (e) => {this.setState({selectedGroups: e})},\r\n            options: groups,\r\n            placeholder: \"Не выбраны\",\r\n            searchable: true\r\n        };\r\n\r\n        return (\r\n            <Panel id={id}>\r\n                <PanelHeader>VK API</PanelHeader>\r\n                <Group>\r\n                    <FormItem top=\"Выберите раздел\">\r\n                        <Select\r\n                            name='section'\r\n                            placeholder=\"Не выбран\"\r\n                            options={infoMethod.map((el, index) => ({\r\n                                label: el.title,\r\n                                value: index,\r\n                            }))}\r\n                            renderOption={({ option, ...restProps }) => (\r\n                                <CustomSelectOption\r\n                                    {...restProps}\r\n                                />\r\n                            )}\r\n                            onChange={this.onChange}\r\n                            searchable={true}\r\n                        />\r\n                    </FormItem>\r\n\r\n                    {section !== null &&\r\n                        <FormItem top=\"Выберите метод\">\r\n                            <Select\r\n                                name='infMethod'\r\n                                placeholder=\"Не выбран\"\r\n                                options={infoMethods.map((el) => ({\r\n                                    label: el.label,\r\n                                    value: el.value,\r\n                                }))}\r\n                                renderOption={({ option, ...restProps }) => (\r\n                                    <CustomSelectOption\r\n                                        {...restProps}\r\n                                    />\r\n                                )}\r\n                                onChange={this.onChange}\r\n                                searchable={true}\r\n                            />\r\n                        </FormItem>\r\n                    }\r\n\r\n                    {infMethod !== null &&\r\n                        <>\r\n                            <MiniInfoCell\r\n                                before={<Icon20HelpOutline/>}\r\n                                textWrap='full'\r\n                                style={{whiteSpace: \"pre-line\"}}\r\n                            >\r\n                                {infoMethod[section].methods[infMethod].description}\r\n                            </MiniInfoCell>\r\n\r\n                            {infoMethod[section].methods[infMethod].params.length === 0 ?\r\n                                <Placeholder className='fixPaddingPlaceholder'>\r\n                                    У данного события отсутствуют параметры.\r\n                                </Placeholder> :  // eslint-disable-next-line\r\n                                infoMethod[section].methods[infMethod].params.map((el, index) => {\r\n                                    if (el.type === 'string' || el.type === 'string[]') {\r\n                                        return(\r\n                                            <FormItem style={{whiteSpace: \"pre-line\"}} top={`${el.name} (${el.type})`} bottom={<>{el.description} <br/> Параметр {el.is_required ? 'обязательный.' : 'необязательный'}</>}>\r\n                                                <Textarea\r\n                                                    name={el.name}\r\n                                                    value={param[index]}\r\n                                                    onChange={(e) => {this.onChange(e, index)}}\r\n                                                    placeholder='Введите параметр...'\r\n                                                    maxLength={100}\r\n                                                />\r\n                                            </FormItem>\r\n                                        )\r\n                                    } else if (el.type === 'text') {\r\n                                        return(\r\n                                            <FormItem style={{whiteSpace: \"pre-line\"}} top={`${el.name} (${el.type})`} bottom={<>{el.description} <br/> Параметр {el.is_required ? 'обязательный.' : 'необязательный'}</>}>\r\n                                                <Textarea\r\n                                                    name={el.name}\r\n                                                    maxLength={100}\r\n                                                    onChange={(e) => this.onChange(e, index)}\r\n                                                    placeholder='Введите параметр...'\r\n                                                />\r\n                                            </FormItem>\r\n                                        )\r\n                                    } else if (el.type === 'positive') {\r\n                                        return(\r\n                                            <FormItem style={{whiteSpace: \"pre-line\"}} top={`${el.name} (${el.type})`} bottom={<>{el.description} <br/> Параметр {el.is_required ? 'обязательный.' : 'необязательный'}</>}>\r\n                                                <Textarea\r\n                                                    name={el.name}\r\n                                                    value={param[index]}\r\n                                                    maxLength={100}\r\n                                                    onChange={(e) => this.onChange(e, index)}\r\n                                                    placeholder='Введите параметр...'\r\n                                                />\r\n                                            </FormItem>\r\n                                        )\r\n                                    } else if (el.type === 'integer') {\r\n                                        return(\r\n                                            <FormItem style={{whiteSpace: \"pre-line\"}} top={`${el.name} (${el.type})`} bottom={<>{el.description} <br/> Параметр {el.is_required ? 'обязательный.' : 'необязательный'}</>}>\r\n                                                <Input\r\n                                                    name={el.name}\r\n                                                    value={param[index]}\r\n                                                    type='number'\r\n                                                    maxLength={100}\r\n                                                    inputMode='decimal'\r\n                                                    onChange={(e) => this.onChange(e, index)}\r\n                                                    placeholder='Введите параметр...'\r\n                                                />\r\n                                            </FormItem>\r\n                                        )\r\n                                    } else if (el.type === 'checkbox') {\r\n                                        return(\r\n                                            <FormItem style={{whiteSpace: \"pre-line\"}} top={`${el.name} (${el.type})`} bottom={<>{el.description} <br/> Параметр {el.is_required ? 'обязательный.' : 'необязательный'}</>}>\r\n                                                <Checkbox\r\n                                                    name={el.name}\r\n                                                    value={param[index]}\r\n                                                    onChange={(e) => this.actionCheckbox(index)}\r\n                                                    placeholder='Введите параметр...'\r\n                                                >\r\n                                                    1\r\n                                                </Checkbox>\r\n                                            </FormItem>\r\n                                        )\r\n                                    }\r\n                                }\r\n                                )\r\n                            }\r\n\r\n                            <Header mode='primary'>Получить токен</Header>\r\n                            <FormItem\r\n                                top='Выберите права для токена'\r\n                                bottom={\r\n                                    infoMethod[this.state.section].methods[this.state.infMethod].access_rights.length !== 0 ?\r\n                                        <>\r\n                                            Нужные права для вызова метода: {infoMethod[this.state.section].methods[this.state.infMethod].access_rights}.\r\n                                        </>:\r\n                                        <>\r\n                                            Для этого метода не нужны никакие права доступа.\r\n                                        </>\r\n                            }>\r\n                                <ChipsSelect\r\n                                    name='accessRights'\r\n                                    {...groupsChipsProps}\r\n                                    showSelected\r\n                                    closeAfterSelect={false}\r\n                                    renderChip={({ value, label, option: { icon }, ...rest }) => (\r\n                                        <Chip\r\n                                            value={value}\r\n                                            {...rest}\r\n                                        >\r\n                                            {label}\r\n                                        </Chip>\r\n                                    )}\r\n                                />\r\n                            </FormItem>\r\n                            <FormItem>\r\n                                <Button\r\n                                    stretched\r\n                                    size='l'\r\n                                    mode='secondary'\r\n                                    onClick={() =>\r\n                                        this.getToken()\r\n                                    }\r\n                                >\r\n                                    Получить токен\r\n                                </Button>\r\n                            </FormItem>\r\n\r\n                            <FormItem top='access_token (string)'>\r\n                                <Input\r\n                                    type='text'\r\n                                    name='accessToken'\r\n                                    placeholder='Введите токен...'\r\n                                    value={accessToken}\r\n                                    maxLength={100}\r\n                                    onChange={(e) => this.onChange(e)}\r\n                                />\r\n                            </FormItem>\r\n\r\n                            <Div>\r\n                                <Button\r\n                                    size=\"l\"\r\n                                    stretched\r\n                                    mode=\"secondary\"\r\n                                    onClick={() => {this.executeMethod(); this.setState({textButtonMethod: false, disabledButtonMethod: true})}}\r\n                                    disabled={disabledButtonMethod}\r\n                                >\r\n                                    {textButtonMethod ? \"Выполнить\" : \"Выполнено!\"}\r\n                                </Button>\r\n                            </Div>\r\n                        </>\r\n                    }\r\n                </Group>\r\n\r\n                {use_method &&\r\n                    <Group header={<Header mode='secondary'>Результат</Header>}>\r\n                        <Card>\r\n                            <Div>\r\n                                <div className='scroll' id='response'/>\r\n                            </Div>\r\n                        </Card>\r\n\r\n                        <Div>\r\n                            <Button\r\n                                size=\"l\"\r\n                                stretched\r\n                                mode=\"secondary\"\r\n                                onClick={() => this.copy()}\r\n                            >\r\n                                Скопировать\r\n                            </Button>\r\n                        </Div>\r\n                    </Group>\r\n                }\r\n\r\n                {snackbar}\r\n            </Panel>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = {\r\n    openPopout,\r\n    closePopout,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(HomePanelBase);\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport {goBack, openModal} from \"../../store/router/actions\";\r\n\r\nimport {\r\n    SimpleCell,\r\n    Panel,\r\n    PanelHeader,\r\n    PanelHeaderBack,\r\n    Group,\r\n    Avatar,\r\n    Header,\r\n} from \"@vkontakte/vkui\";\r\nimport {\r\n    Icon28FavoriteOutline,\r\n    Icon28MessagesOutline,\r\n    Icon28ShareOutline,\r\n    Icon28SmartphoneOutline,\r\n    Icon28UserOutline,\r\n    Icon28Users3Outline,\r\n} from '@vkontakte/icons';\r\nimport bridge from '@vkontakte/vk-bridge';\r\n\r\nclass HomePanelPlaceholder extends React.Component {\r\n\r\n    render() {\r\n        const {id, goBack} = this.props;\r\n\r\n        return (\r\n            <Panel id={id}>\r\n                <PanelHeader left={<PanelHeaderBack onClick={() => goBack()}/>}>\r\n                    Настройки\r\n                </PanelHeader>\r\n\r\n                <Group header={<Header mode=\"secondary\">Прочее</Header>}>\r\n                    <SimpleCell \r\n                        before={\r\n                            <Avatar \r\n                                shadow={false} \r\n                                size={45}\r\n                            >\r\n                                <Icon28FavoriteOutline fill=\"#2B8FFE\"/>\r\n                                </Avatar>\r\n                        } \r\n                        onClick={() => bridge.send(\"VKWebAppAddToFavorites\")}\r\n                    >\r\n                        Добавить в избранное\r\n                    </SimpleCell>\r\n\r\n                    <SimpleCell \r\n                        before={\r\n                            <Avatar \r\n                                shadow={false} \r\n                                size={45}\r\n                            >\r\n                                <Icon28SmartphoneOutline fill=\"#2B8FFE\"/>\r\n                            </Avatar>\r\n                        } \r\n                        onClick={() => bridge.send(\"VKWebAppAddToHomeScreen\")}\r\n                    >\r\n                        Добавить на главный экран\r\n                    </SimpleCell>\r\n\r\n                    <SimpleCell \r\n                        before={\r\n                            <Avatar \r\n                                shadow={false} \r\n                                size={45}\r\n                            >\r\n                                <Icon28MessagesOutline fill=\"#2B8FFE\"/>\r\n                            </Avatar>\r\n                        } \r\n                        href=\"https://vk.me/vkapisandbox\"\r\n                    >\r\n                        Поддержка\r\n                    </SimpleCell>\r\n\r\n                    <SimpleCell\r\n                        before={\r\n                            <Avatar\r\n                                shadow={false}\r\n                                size={45}\r\n                            >\r\n                                <Icon28ShareOutline fill=\"#2B8FFE\"/>\r\n                            </Avatar>\r\n                        }\r\n                        onClick={() => bridge.send(\"VKWebAppShare\")}\r\n                    >\r\n                        Поделиться приложением\r\n                    </SimpleCell>\r\n                </Group>\r\n\r\n                <Group header={<Header mode=\"secondary\">Получение токенов через Implicit Flow</Header>}>\r\n                    <SimpleCell \r\n                        before={<Icon28UserOutline fill=\"#2B8FFE\"/>}\r\n                        href=\"https://vk.com/dev/implicit_flow_user\"\r\n                        target=\"_blank\"\r\n                    >\r\n                        Как получить токен пользователя\r\n                    </SimpleCell>\r\n\r\n                    <SimpleCell \r\n                        before={<Icon28Users3Outline fill=\"#2B8FFE\"/>}\r\n                        href=\"https://vk.com/dev/implicit_flow_group\"\r\n                        target=\"_blank\"\r\n                    >\r\n                        Как получить токен сообщества\r\n                    </SimpleCell>\r\n                </Group>\r\n\r\n                <Group header={<Header mode=\"secondary\">Разработчики</Header>}>\r\n                    <SimpleCell \r\n                        href=\"https://vk.com/kuz_s\"\r\n                        description=\"где я\"\r\n                        before={<Avatar src=\"https://sun7-14.userapi.com/s/v1/ig2/kaVMv0uPh6vFOP4HTYfRsL5n9_y3zDg_jMQtqYRwPxt3d3CKTKFK-U4KR5kCxE12JSqCAtNE0eKkJMXy4zTA1zLH.jpg?size=200x200&quality=95&crop=649,695,270,270&ava=1\"/>}>\r\n                        Александр Кузнецов\r\n                    </SimpleCell>\r\n\r\n                    <SimpleCell \r\n                        href=\"https://vk.com/olejii\"\r\n                        description=\"кто такой Александр Кузнецов\"\r\n                        before={<Avatar src=\"https://sun7-14.userapi.com/s/v1/ig2/csPM9GKlyYZX3WngNXADJJT8C0eNfgPK5epHhWMVgRXv-NY52DKBSPL815IZVOQAUhPjjgczOdGBoyqdMadvN3N9.jpg?size=200x200&quality=96&crop=231,222,371,371&ava=1\"/>}\r\n                    >\r\n                        Олег Чикелёв\r\n                    </SimpleCell>\r\n                </Group>\r\n            </Panel>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapDispatchToProps = { \r\n    goBack, \r\n    openModal \r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(HomePanelPlaceholder);\r\n","export let method = [\r\n    {   \r\n        \"name\": \"VKWebAppInit\",\r\n        \"description\": \"Инициализировать VK Bridge.\",\r\n        \"params\": []\r\n    },\r\n    {\r\n        \"name\": \"VKWebAppAddToFavorites\",\r\n        \"description\": \"Добавить приложение в избранное.\",\r\n        \"params\": []\r\n    },\r\n    {\r\n        \"name\": \"VKWebAppAddToHomeScreen\",\r\n        \"description\": \" Добавить приложение на главный экран устройства.\",\r\n        \"params\": []\r\n    },\r\n    {\r\n        \"name\": \"VKWebAppAddToHomeScreenInfo\",\r\n        \"description\": \"Получить информацию о шорткате.\",\r\n        \"params\": []\r\n    },\r\n    {\r\n        \"name\": \"VKWebAppAllowNotifications\",\r\n        \"description\":\"Запросить разрешение на отправку уведомлений.\",\r\n        \"params\": []\r\n    },\r\n    {\r\n        \"name\": \"VKWebAppClose\",\r\n        \"description\":\"Закрыть приложение.\",\r\n        \"params\": [{\r\n            \"param\": 'status',\r\n            \"type\": 'string',\r\n            \"description\": 'статус закрытия приложения, передаваемый в родительское приложение. Возможные значения:\\n' +\r\n                '•\\n' +\r\n                'failed;\\n' +\r\n                '•\\n' +\r\n                'success.'\r\n        },\r\n        {\r\n            \"param\": \"payload\",\r\n            \"type\": 'object',\r\n            \"description\": 'данные, передаваемые в родительское приложение.'\r\n        }\r\n        ]\r\n    },\r\n    {\r\n        \"name\": \"VKWebAppCopyText\",\r\n        \"description\":\"Копировать текст в буфер обмена.\",\r\n        \"params\": [{\r\n            \"param\": 'text',\r\n            \"type\": 'string',\r\n            \"description\":\"Cтрока, которую необходимо поместить в буфер обмена.\"\r\n        }]\r\n    },\r\n    {\r\n        \"name\": \"VKWebAppDenyNotifications\",\r\n        \"description\":\"Отключить уведомления.\",\r\n        \"params\": []\r\n    },\r\n    {\r\n        \"name\": \"VKWebAppDownloadFile\",\r\n        \"description\":\"Скачать файл.\",\r\n        \"params\": [{\r\n            \"param\": 'url',\r\n            \"type\": 'string',\r\n            \"description\":\"Cсылка на файл, который необходимо скачать\"\r\n        },\r\n        {\r\n            \"param\": 'filename',\r\n            \"type\": 'string',\r\n            \"description\":\"Название файла.\"\r\n        }]\r\n    },\r\n    {\r\n        \"name\": \"VKWebAppGetClientVersion\",\r\n        \"description\":\"Получить номер версии официального приложения ВКонтакте.\",\r\n        \"params\": []\r\n    },\r\n    {\r\n        \"name\": \"VKWebAppGetConfig\",\r\n        \"description\":\"Получить конфигурацию приложения.\",\r\n        \"params\": []\r\n    },\r\n    {\r\n        \"name\": \"VKWebAppGetLaunchParams\",\r\n        \"description\":\"Получить параметры запуска.\",\r\n        \"params\": []\r\n    },\r\n    {\r\n        \"name\": \"VKWebAppOpenApp\",\r\n        \"description\":\"Открыть приложение.\",\r\n        \"params\": [{\r\n            \"param\": 'app_id',\r\n            \"type\": 'integer',\r\n            \"description\":\"Идентификатор приложения, которое должно быть открыто.\"\r\n        },\r\n        {\r\n            \"param\": 'location',\r\n            \"type\": 'string' ,\r\n            \"description\":\"Хеш, строка после # в URL вида vk.com/app123456#.\" \r\n        }]\r\n    },\r\n    {\r\n        \"name\": \"VKWebAppOpenCodeReader\",\r\n        \"description\":\"Считать QR - код.\",\r\n        \"params\": []\r\n    },\r\n    {\r\n        \"name\": \" VKWebAppOpenWallPost\",\r\n        \"description\":\"Открыть запись со стены в слое.\",\r\n        \"params\": [{\r\n            \"param\": 'owner_id',\r\n            \"type\": 'integer',\r\n            \"description\":\"Идентификатор сообщества (отрицательное число) или пользователя (положительное число), на стене которого опубликована запись.\"\r\n        },\r\n        {\r\n            \"param\": 'post_id',\r\n            \"type\": 'integer' ,\r\n            \"description\":\"Идентификатор записи на стене (положительное число).\" \r\n        }]\r\n    },\r\n    {\r\n        \"name\": \"VKWebAppSendToClient\",\r\n        \"description\":\"Отправить установочное уведомление на устройство.\",\r\n        \"params\": [{\r\n            \"param\": 'fragment',\r\n            \"type\": 'string',\r\n            \"description\":\"Часть URL после #: vk.com/appXXXX#fragment (hash в уведомлении).\"\r\n        }]\r\n    },\r\n    {\r\n        \"name\": 'VKWebAppShare',\r\n        \"description\":'Поделиться ссылкой.',\r\n        \"params\": [{\r\n            \"param\": 'link',\r\n            \"type\": 'string',\r\n            \"description\":\"Ссылка, которой необходимо поделиться (по умолчанию — текущая ссылка вида http://vk.com/app123#hash).\"\r\n        }]\r\n    },\r\n    {\r\n        \"name\": 'VKWebAppShowImages',\r\n        \"description\":'Открыть нативный экран для просмотра изображений.',\r\n        \"params\": [{\r\n            \"param\": 'images',\r\n            \"type\": 'string[]',\r\n            \"description\":\"Массив строк, содержащих URL изображений.\"\r\n        },\r\n        {\r\n            \"param\": 'start_index',\r\n            \"type\": 'integer',\r\n            \"description\":\"Индекс элемента массива images, с которого нужно начать отображение (неотрицательное целое число).\"\r\n        }]\r\n    },\r\n    {\r\n        \"name\": 'VKWebAppShowWallPostBox',\r\n        \"description\":'Опубликовать запись на стене.',\r\n        \"params\": []\r\n    },\r\n    {\r\n        \"name\": 'VKWebAppCreateHash',\r\n        \"description\":'Получить хеш.',\r\n        \"params\": [{\r\n            \"param\": 'payload',\r\n            \"type\": 'string',\r\n            \"description\": 'Любая строка, которую приложение хочет использовать для создания хеша.'\r\n        }]\r\n    },\r\n    {\r\n        \"name\": 'VKWebAppGetGrantedPermissions',\r\n        \"description\":'Получить список разрешений.',\r\n        \"params\": []\r\n    },\r\n    {\r\n        \"name\": 'VKWebAppCallAPIMethod',\r\n        \"description\":'Вызвать метод API ВКонтакте.',\r\n        \"params\": [{\r\n            \"param\": 'method',\r\n            \"type\": 'string',\r\n            \"description\":\"Название метода API.\"\r\n        },\r\n        {\r\n            \"param\": 'params',\r\n            \"type\": 'object',\r\n            \"description\":\"Параметры метода в виде JSON, включая ключ доступа access_token и v — версию запроса.\"\r\n        },\r\n        {\r\n            \"param\": 'request_id',\r\n            \"type\": 'string',\r\n            \"description\":\"Произвольная строка, которая вернётся вместе с результатом запроса. Используйте request_id для отслеживания уникальности запросов.\"\r\n        }]\r\n    },\r\n    {\r\n        \"name\": 'VKWebAppGetAuthToken',\r\n        \"description\":'Получить права доступа у пользователя.',\r\n        \"params\": [{\r\n            \"param\": 'app_id',\r\n            \"type\": 'integer',\r\n            \"description\":\"Идентификатор приложения.\"\r\n        },\r\n        {\r\n            \"param\": 'scope',\r\n            \"type\": 'string',\r\n            \"description\":\"Список прав доступа(ссылка) через запятую. Для получения токена без дополнительных прав передайте в параметре пустую строку.\"\r\n        }]\r\n    },\r\n    {\r\n        \"name\": 'VKWebAppGetEmail',\r\n        \"description\":'Получить адрес электронной почты.',\r\n        \"params\": []\r\n    },\r\n    {\r\n        \"name\": 'VKWebAppGetFriends',\r\n        \"description\":'Показать список друзей пользователя.',\r\n        \"params\": [{\r\n            \"param\": 'multi',\r\n            \"type\": 'bool',\r\n            \"description\":\"Доступные значения: бр • false — выбор одного друга из списка (значение по умолчанию) бр • true — выбор нескольких друзей из списка.\" \r\n        }]\r\n    },\r\n    {\r\n        \"name\": 'VKWebAppGetGeodata',\r\n        \"description\":'Получить данные о текущем местоположении пользователя.',\r\n        \"params\": []\r\n    },\r\n    {\r\n        \"name\": 'VKWebAppGetPersonalCard',\r\n        \"description\":'Вызвать карточку контактов.',\r\n        \"params\": [{\r\n            \"param\": 'type',\r\n            \"type\": 'bool',\r\n            \"description\":\"Массив строк. бр Возможные значения: • phone —  номер телефона • email — почтовый адрес • address — адрес пользователя.\" \r\n        }]\r\n    },\r\n    {\r\n        \"name\": 'VKWebAppGetPhoneNumber',\r\n        \"description\":'Получить номер телефона пользователя.',\r\n        \"params\": []\r\n    },\r\n    {\r\n        \"name\": 'VKWebAppGetUserInfo',\r\n        \"description\":'Получить данные о профиле пользователя.',\r\n        \"params\": []\r\n    },\r\n    {\r\n        \"name\": 'VKWebAppOpenContacts',\r\n        \"description\":'Показать контакты из телефонной книги.',\r\n        \"params\": []\r\n    },\r\n    {\r\n        \"name\": 'VKWebAppAddToCommunity',\r\n        \"description\":'Добавить приложение в сообщество.',\r\n        \"params\": []\r\n    },\r\n    {\r\n        \"name\":  'VKWebAppAllowMessagesFromGroup',\r\n        \"description\":'Получить разрешение на отправку сообщений от имени сообщества.',\r\n        \"params\": [{\r\n            \"param\": 'group_id',\r\n            \"type\": 'integer',\r\n            \"description\":\"Идентификатор сообщества.\"\r\n        },\r\n        {\r\n            \"param\": 'key',\r\n            \"type\": 'string',\r\n            \"description\":\"Произвольная строка. Этот параметр можно использовать для идентификации пользователя. Его значение будет возвращено в событии message_allow Callback API. (ссылка)\"\r\n        }]\r\n    },\r\n    {\r\n        \"name\": 'VKWebAppGetCommunityToken',\r\n        \"description\":'Получить права доступа.',\r\n        \"params\": [{\r\n            \"param\": 'app_id',\r\n            \"type\": 'integer',\r\n            \"description\":\"Идентификатор приложения.\"\r\n        },\r\n        {\r\n            \"param\": 'group_id',\r\n            \"type\": 'integer',\r\n            \"description\":\"Идентификатор сообщества.\"\r\n        },\r\n        {\r\n            \"param\": 'scope',\r\n            \"type\": 'string',\r\n            \"description\":\"Список прав доступа (ссылка), перечисленных через запятую.\"\r\n        }]\r\n    },\r\n    {\r\n        \"name\": 'VKWebAppGetGroupInfo',\r\n        \"description\":'Получить информацию о сообществе.',\r\n        \"params\": [{\r\n            \"param\": 'group_id',\r\n            \"type\": 'integer',\r\n            \"description\":\"Идентификатор сообщества.\" \r\n        }]\r\n    },\r\n    {\r\n        \"name\": 'VKWebAppJoinGroup',\r\n        \"description\":'Предложить пользователю вступить в сообщество.',\r\n        \"params\": [{\r\n            \"param\": 'group_id',\r\n            \"type\": 'integer',\r\n            \"description\":\"Идентификатор сообщества.\" \r\n        }]\r\n    },\r\n    {\r\n        \"name\": 'VKWebAppLeaveGroup',\r\n        \"description\":'Предложить пользователю выйти из сообщества.',\r\n        \"params\": [{\r\n            \"param\": 'group_id',\r\n            \"type\": 'integer',\r\n            \"description\":\"Идентификатор сообщества.\" \r\n        }]\r\n    },\r\n    {\r\n        \"name\": 'VKWebAppSendPayload',\r\n        \"description\":'Отправить событие в сообщество.',\r\n        \"params\": [{\r\n            \"param\": 'group_id',\r\n            \"type\": 'integer',\r\n            \"description\":\"Идентификатор сообщества.\" \r\n        }, \r\n        {\r\n            \"param\": 'payload',\r\n            \"type\": 'JSON',\r\n            \"description\":\"Полезные данные.\" \r\n        }]\r\n    },\r\n    {\r\n        \"name\": 'VKWebAppShowCommunityWidgetPreviewBox',\r\n        \"description\":'Показать виджет сообщества перед публикацией.',\r\n        \"params\": [{\r\n            \"param\": 'group_id',\r\n            \"type\": 'integer',\r\n            \"description\":\"Идентификатор сообщества.\" \r\n        }, \r\n        {\r\n            \"param\": 'type',\r\n            \"type\": 'string',\r\n            \"description\":\"Тип виджета.\" \r\n        },\r\n        {\r\n            \"param\": 'code',\r\n            \"type\": 'string',\r\n            \"description\":\"Код виджета. Аналог параметра code в методе execute. бр Параметры всех поддерживаемых типов виджетов подробно описаны в разделе Список объектов. (ссылка)\" \r\n        }]\r\n    },\r\n    {\r\n        \"name\": 'VKWebAppShowOrderBox',\r\n        \"description\":'Открыть окно покупки товара.',\r\n        \"params\": [{\r\n            \"param\": 'type',\r\n            \"type\": 'string',\r\n            \"description\":\"Всегда item.\" \r\n        }, \r\n        {\r\n            \"param\": 'item',\r\n            \"type\": 'string',\r\n            \"description\":\"Название виртуальной ценности. Будет передано в уведомлении на получение информации о виртуальной ценности.\" \r\n        }]\r\n    },\r\n    {\r\n        \"name\": 'VKWebAppOpenPayForm',\r\n        \"description\":'Показать платёжное окно VK Pay.',\r\n        \"params\": [{\r\n            \"param\": 'app_id',\r\n            \"type\": 'integer',\r\n            \"description\":\"Идентификатор приложения.\" \r\n        },\r\n        {\r\n            \"param\": 'action',\r\n            \"type\": 'string',\r\n            \"description\": 'Тип перевода внутри VK Pay.  Возможные значения:\\n' +\r\n                'pay-to-service — перевод сервису, доступен только для юридических лиц, подключённых через форму для юридических лиц. Документация с расширенным набором параметров;\\n' +\r\n                'pay-to-user — перевод пользователю фиксированной суммы;\\n' +\r\n                'pay-to-group — перевод сообществу фиксированной суммы. Деньги будут переведены на баланс получателя, указанного в управлении сообществом;\\n' +\r\n                'transfer-to-group— перевод сообществу произвольной суммы;\\n' +\r\n                'transfer-to-user  — перевод пользователю произвольной суммы.'\r\n        },\r\n        {\r\n            \"param\": 'params',\r\n            \"type\": 'object',\r\n            \"description\":\"Параметры платёжной формы VK Pay. Формат и параметры зависят от типа перевода.\"\r\n        }]\r\n    },\r\n    {\r\n        \"name\": 'VKWebAppShowStoryBox',\r\n        \"description\":'Открыть редактор историй.',\r\n        \"params\": [{\r\n            \"param\": 'background_type',\r\n            \"type\": 'string',\r\n            \"description\":\"Тип истории.\" \r\n        }, \r\n        {\r\n            \"param\": 'url',\r\n            \"type\": 'string',\r\n            \"description\":\"Ссылка на изображение или видео (нужно указать прямую ссылку на MP4).\" \r\n        }, \r\n        {\r\n            \"param\": 'blob',\r\n            \"type\": 'string',\r\n            \"description\":\"Base64-строка с BLOB (поддерживается только для image). Перед строкой необходимо добавить следующий префикс: data:image/png;base64,<blob-base64> или data:image/jpeg;base64,<blob-base64> в зависимости от типа изображения.\" \r\n        }, \r\n        {\r\n            \"param\": 'locked',\r\n            \"type\": 'boolean',\r\n            \"description\":\"Можно ли перемещать фотографию.\" \r\n        }, \r\n        {\r\n            \"param\": 'attachment',\r\n            \"type\": 'attachment',\r\n            \"description\":\"Описание объекта, присоединённого к истории. (ссылка)\" \r\n        }, \r\n        {\r\n            \"param\": 'stickers',\r\n            \"type\": 'sticker_container []',\r\n            \"description\":\"Массив объектов sticker_container. (ссылка)\" \r\n        }]\r\n    },\r\n    {\r\n        \"name\": 'VKWebAppSubscribeStoryApp',\r\n        \"description\":'Подписать пользователя на обновления истории.',\r\n        \"params\": [{\r\n            \"param\": 'story_owner_id',\r\n            \"type\": 'integer',\r\n            \"description\":\"Идентификатор владельца истории.\" \r\n        }, \r\n        {\r\n            \"param\": 'story_id',\r\n            \"type\": 'integer',\r\n            \"description\":\"Идентификатор истории.\" \r\n        }, \r\n        {\r\n            \"param\": 'sticker_id',\r\n            \"type\": 'integer',\r\n            \"description\":\"Идентификатор стикера, на который можно нажать..\" \r\n        }, \r\n        {\r\n            \"param\": 'access_key',\r\n            \"type\": 'string',\r\n            \"description\":\"access_key \" \r\n        }]\r\n    },\r\n    {\r\n        \"name\":' VKWebAppCheckNativeAds',\r\n        \"description\":'Проверить наличие рекламы, доступной для показа.',\r\n        \"params\": [{\r\n            \"param\": 'ad_format',\r\n            \"type\": 'string',\r\n            \"description\":\"Тип рекламы. Возможные значения: reward, interstitial.\" \r\n        }, \r\n        {\r\n            \"param\": 'use_waterfall',\r\n            \"type\": 'boolean',\r\n            \"description\":\"Только для ad_format = reward. Использовать ли механизм показа interstitial рекламы в случае отсутствия rewarded video.\" \r\n        }]\r\n    },\r\n    {\r\n        \"name\": 'VKWebAppShowNativeAds',\r\n        \"description\":'Показать рекламу.',\r\n        \"params\": [{\r\n            \"param\": 'ad_format',\r\n            \"type\": 'string',\r\n            \"description\":\"Формат рекламы: reward — видео с наградой за просмотр (до 30 секунд), interstitial — межэкранная реклама (видео или статичная картинка до 5 секунд).\" \r\n        }, \r\n        {\r\n            \"param\": 'use_waterfall',\r\n            \"type\": 'boolean',\r\n            \"description\":\"Только для ad_format = reward. Использовать ли механизм показа interstitial рекламы в случае отсутствия rewarded video.\" \r\n        }]\r\n    },\r\n    {\r\n        \"name\": 'VKWebAppConversionHit',\r\n        \"description\":'Отслеживать конверсионные действия пользователей.',\r\n        \"params\": [{\r\n            \"param\": 'pixel_code',\r\n            \"type\": 'string',\r\n            \"description\":\"Код пикселя. Например: VK-Boo-427253-dUuM. Код пикселя можно найти в рекламном кабинете. (ссылка)\" \r\n        }, \r\n        {\r\n            \"param\": 'conversion_event',\r\n            \"type\": 'string',\r\n            \"description\":\"Конверсионное действие, которое необходимо отслеживать. Например, чтобы отслеживать добавление товара в корзину, значение conversion_event должно быть равно add_to_cart, если покупку товара, значение conversion_event должно быть равно purchase. Список всех возможных значений описан в документации рекламного кабинета. (ссылка)\" \r\n        },\r\n        {\r\n            \"param\": 'conversion_value',\r\n            \"type\": 'float',\r\n            \"description\":\"Стоимость (ценность) конверсионного события (если есть). Например, если пользователь купил товар за 3500 рублей, значение conversion_event должно быть равно purchase, а значение conversion_value должно быть равно 3500.\"   \r\n        }]\r\n    },\r\n    {\r\n        \"name\": 'VKWebAppRetargetingPixel',\r\n        \"description\":'Добавить пользователя в аудиторию ретаргетинга.',\r\n        \"params\": [{\r\n            \"param\": 'pixel_code',\r\n            \"type\": 'string',\r\n            \"description\":\"Код пикселя. Например: VK-RTRG-447253-dUuM.\" \r\n        }, \r\n        {\r\n            \"param\": 'event',\r\n            \"type\": 'string',\r\n            \"description\":\"Идентификатор события, правило пикселя.\" \r\n        }, \r\n        {\r\n            \"param\": 'target_group_id',\r\n            \"type\": 'integer',\r\n            \"description\":\"Идентификатор группы ретаргетинга, в которую нужно добавить текущего пользователя.\" \r\n        }, \r\n        {\r\n            \"param\": 'price_list_id',\r\n            \"type\": 'integer',\r\n            \"description\":\"Идентификатор прайс-листа. Используется для динамического ретаргетинга продуктов.\" \r\n        }, \r\n        {\r\n            \"param\": 'products_event',\r\n            \"type\": 'string',\r\n            \"description\":\"Тип продуктового события. Используется для динамического ретаргетинга продуктов.\" \r\n        }, \r\n        {\r\n            \"param\": 'products_params ',\r\n            \"type\": 'string',\r\n            \"description\":\"Параметры товара. Используется для динамического ретаргетинга продуктов.\" \r\n        }]\r\n    },\r\n    {\r\n        \"name\": 'VKWebAppResizeWindow',\r\n        \"description\":'Изменить размер окна приложения.',\r\n        \"params\": [{\r\n            \"param\": 'width',\r\n            \"type\": 'integer',\r\n            \"description\":\"Ширина окна. Может принимать значения от 630px до 1000px.\" \r\n        }, \r\n        {\r\n            \"param\": 'height',\r\n            \"type\": 'integer',\r\n            \"description\":\"Высота окна. Может принимать значения от 500px до 8050px.\" \r\n        }]\r\n    },\r\n    {\r\n        \"name\": 'VKWebAppScroll',\r\n        \"description\":'Прокрутить окно приложения.',\r\n        \"params\": [{\r\n            \"param\": 'top',\r\n            \"type\": 'integer',\r\n            \"description\":\"Смещение прокрутки относительно нулевой координаты окна. Например, чтобы прокрутить окно на самый верх страницы, необходимо передать значение 0.\" \r\n        }, \r\n        {\r\n            \"param\": 'speed',\r\n            \"type\": 'integer',\r\n            \"description\":\"Скорость анимации в миллисекундах. По умолчанию равна 0.\" \r\n        }]\r\n    },\r\n    {\r\n        \"name\": 'VKWebAppSetLocation',\r\n        \"description\":'Задать значение хеша в адресной строке.',\r\n        \"params\": [{\r\n            \"param\": 'location',\r\n            \"type\": 'string',\r\n            \"description\":\"Новое значение хеша. Символ «#» в параметре указывать не надо.\" \r\n        }]\r\n    },\r\n    {\r\n        \"name\": 'VKWebAppSetSwipeSettings',\r\n        \"description\":'Включить свайп, как в браузере.',\r\n        \"params\": [{\r\n            \"param\": 'history',\r\n            \"type\": 'boolean',\r\n            \"description\":\"Флаг для настройки работы браузера со свайпом для iOS-приложения.\" \r\n        }]\r\n    },\r\n    {\r\n        \"name\": 'VKWebAppSetViewSettings',\r\n        \"description\":'Настроить вид статус-и экшен-бара.',\r\n        \"params\": [{\r\n            \"param\": 'status_bar_style',\r\n            \"type\": 'string',\r\n            \"description\":\"Тема для иконок статус-бара: light, dark.\" \r\n        },\r\n        {\r\n            \"param\": 'action_bar_color',\r\n            \"type\": 'string',\r\n            \"description\":\"Цвет экшен-бара: hex-код (например, #00ffff), none – прозрачный. Параметр работает только на Android.\" \r\n        },\r\n        {\r\n            \"param\": 'navigation_bar_color',\r\n            \"type\": 'string',\r\n            \"description\":\"Цвет навигационного бара: hex-код (например, #00ffff). Параметр работает только на Android.\" \r\n        }]\r\n    },\r\n    {\r\n        \"name\": 'VKWebAppStorageGet',\r\n        \"description\":'Получить значение ключа.',\r\n        \"params\": [{\r\n            \"param\": 'keys',\r\n            \"type\": 'string[]',\r\n            \"description\":\"Названия ключей [a-zA-Z0-9], переданные массивом строк.\"\r\n        }]\r\n    },\r\n    {\r\n        \"name\": 'VKWebAppStorageGetKeys',\r\n        \"description\":'Получить названия всех переменных.',\r\n        \"params\": [{\r\n            \"param\": 'count',\r\n            \"type\": 'integer',\r\n            \"description\":\"Количество названий переменных, информацию о которых необходимо получить.\" \r\n        },\r\n        {\r\n            \"param\": 'offset',\r\n            \"type\": 'integer',\r\n            \"description\":\"Смещение, необходимое для выборки определённого подмножества названий переменных.\" \r\n        }]\r\n    },\r\n    {\r\n        \"name\": 'VKWebAppStorageSet',\r\n        \"description\":'Задать значение переменной.',\r\n        \"params\": [{\r\n            \"param\": 'key',\r\n            \"type\": 'string',\r\n            \"description\":\"Название ключа, [a-zA-Z0-9]. Максимальная длина — 100 символов.\"\r\n        },\r\n        {\r\n            \"param\": 'value',\r\n            \"type\": 'string',\r\n            \"description\":\"Значение переменной, сохраняются только первые 4096 байт.\" \r\n        }]\r\n    },\r\n    {\r\n        \"name\": 'VKWebAppTapticImpactOccurred',\r\n        \"description\":'Вызвать вибрацию при столкновении.',\r\n        \"params\": [{\r\n            \"param\": 'style',\r\n            \"type\": 'string',\r\n            \"description\":\"Сила вибрации. Возможные варианты: light, medium, heavy.\" \r\n        }]\r\n    },\r\n    {\r\n        \"name\": 'VKWebAppTapticNotificationOccurred',\r\n        \"description\":'Вызвать вибрацию после выполнения действия.',\r\n        \"params\": [{\r\n            \"param\": 'type',\r\n            \"type\": 'string',\r\n            \"description\":\"Тип уведомления. Доступные значения: error, success, warning.\" \r\n        }]\r\n    },\r\n    {\r\n        \"name\": 'VKWebAppTapticSelectionChanged',\r\n        \"description\":'Вызвать вибрацию при изменении выбора.',\r\n        \"params\": []\r\n    },\r\n    {\r\n        \"name\": 'VKWebAppFlashGetInfo',\r\n        \"description\":'Получить информацию о фонарике.',\r\n        \"params\": []\r\n    },\r\n    {\r\n        \"name\": 'VKWebAppFlashSetLevel',\r\n        \"description\":'Задать уровень яркости фонарика.',\r\n        \"params\": [{\r\n            \"param\": 'level',\r\n            \"type\": 'integer',\r\n            \"description\":\"Уровень яркости фонарика от 0 до 1.\" \r\n        }]\r\n    },\r\n    {\r\n        \"name\": 'VKWebAppAccelerometerStart',\r\n        \"description\":'Получать данные акселерометра.',\r\n        \"params\": [{\r\n            \"param\": 'refresh_rate',\r\n            \"type\": 'integer',\r\n            \"description\":\"Период обновления данных акселерометра в миллисекундах. Минимальное значение — 20 мс, максимальное — 1000 мс, значение по умолчанию — 1000 мс. (Android)\" \r\n        }]\r\n    },\r\n    {\r\n        \"name\": 'VKWebAppAccelerometerStop',\r\n        \"description\":'Не получать данные акселерометра.',\r\n        \"params\": []\r\n    },\r\n    {\r\n        \"name\": 'VKWebAppDeviceMotionStart',\r\n        \"description\":'Получать данные о вращении устройства.',\r\n        \"params\": [{\r\n            \"param\": 'refresh_rate',\r\n            \"type\": 'integer',\r\n            \"description\":\"Период обновления данных акселерометра в миллисекундах. Минимальное значение — 20 мс, максимальное — 1000 мс, значение по умолчанию — 1000 мс. (Android)\" \r\n        }]\r\n    },\r\n    {\r\n        \"name\":  'VKWebAppDeviceMotionStop',\r\n        \"description\":'Не получать данные о вращении устройства.',\r\n        \"params\": []\r\n    },\r\n    {\r\n        \"name\": 'VKWebAppGyroscopeStart',\r\n        \"description\":'Получать данные гироскопа.',\r\n        \"params\": [{\r\n            \"param\": 'refresh_rate',\r\n            \"type\": 'integer',\r\n            \"description\":\"Период обновления данных акселерометра в миллисекундах. Минимальное значение — 20 мс, максимальное — 1000 мс, значение по умолчанию — 1000 мс. (Android)\" \r\n        }]\r\n    },\r\n    {\r\n        \"name\": 'VKWebAppGyroscopeStop',\r\n        \"description\":'Не получать данные гироскопа.',\r\n        \"params\": []\r\n    },\r\n    {\r\n        \"name\": 'VKWebAppCheckAllowedScopes',\r\n        \"description\":'Проверить, есть ли доступ к данным.',\r\n        \"params\": [{\r\n            \"param\": 'scopes',\r\n            \"type\": 'string',\r\n            \"description\":\"Список прав через запятую. Например friends,notify.\" \r\n        }]\r\n    },\r\n]","import React from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport {openModal, setPage} from \"../../store/router/actions\";\r\n\r\nimport {sleep} from \"../../../functions\";\r\n\r\nimport {method} from '../../../infoMethodBridge';\r\nimport {infoMethod} from \"../../../infoMethod\";\r\n\r\nimport {\r\n    Group,\r\n    FormItem,\r\n    Select,\r\n    CustomSelectOption,\r\n    Panel,\r\n    PanelHeader,\r\n    Textarea,\r\n    MiniInfoCell,\r\n    Div,\r\n    Button,\r\n    Placeholder,\r\n    Input,\r\n    Checkbox, Header, Card\r\n} from \"@vkontakte/vkui\";\r\nimport {\r\n    Icon20HelpOutline,\r\n} from '@vkontakte/icons';\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport renderjson from \"renderjson\";\r\n\r\nclass HomePanelBridge extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            section: null,\r\n            infoMethods: null,\r\n            infoMethodBridge: null,\r\n            infMethod: null,\r\n            responseBridge: '',\r\n            use_method: false,\r\n            disabledButtonMethod: false,\r\n            textButtonMethod: true\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            param: [\r\n                '',\r\n                '',\r\n                '',\r\n                '',\r\n                '',\r\n                '',\r\n                '',\r\n                '',\r\n            ]\r\n        })\r\n    }\r\n\r\n    async onChange(e, index) {\r\n        const { name, value } = e.currentTarget;\r\n        value !== '' ? this.setState({ [name]: value }) : this.setState({ [name]: null })\r\n\r\n        this.setState({\r\n            use_method: false,\r\n            textButtonMethod: true,\r\n            disabledButtonMethod: false,\r\n        })\r\n\r\n        try {\r\n            if (name === 'section') {\r\n                await sleep(1) //setState не обновляется моментально => костыль\r\n\r\n                let arrInfoMethods = []\r\n                for (let index = method[this.state.section].currentCount; index <= method[this.state.section].totalCount; index++) {\r\n                    arrInfoMethods.push(<option value={index}>{infoMethod[index].name}</option>)\r\n                }\r\n                this.setState({ infoMethods: arrInfoMethods })\r\n            }\r\n            else {\r\n                let arr = this.state.param\r\n                arr[index] = value\r\n                this.setState({ param: arr })\r\n            }\r\n        }\r\n        catch(err) {\r\n            this.setState({section: null})\r\n            this.setState({use_method: false})\r\n        }\r\n\r\n    }\r\n\r\n    actionCheckbox(index) {\r\n\r\n        this.setState({\r\n            use_method: false,\r\n            textButtonMethod: true,\r\n            disabledButtonMethod: false,\r\n        })\r\n\r\n        let arr = this.state.param\r\n\r\n        if (arr[index] === '' || arr[index] === false) {\r\n            arr[index] = true\r\n        } else {\r\n            arr[index] = false\r\n        }\r\n\r\n        this.setState({ param: arr })\r\n    }\r\n\r\n    async executeMethod() {\r\n        this.setState({use_method: true})\r\n        renderjson.set_show_to_level(30)\r\n        try {\r\n            let params1 = {}\r\n            // eslint-disable-next-line\r\n            this.state.param.map((el, index) => {\r\n                // eslint-disable-next-line\r\n                if (method[this.state.section].params.length === index || el === '') return\r\n                params1[`${method[this.state.section].params[index].param}`] = el\r\n            })\r\n            let response = await bridge.send(method[this.state.section].name, params1)\r\n\r\n            window.responseAPI = response\r\n            //this.props.openModal('viewResponse')\r\n            document.getElementById('response').appendChild(renderjson(response))\r\n        } catch(err) {\r\n            window.responseAPI = err\r\n            //this.props.openModal('viewResponse')\r\n            document.getElementById('response').appendChild(renderjson(err))\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {id} = this.props;\r\n        const {section, param, use_method, disabledButtonMethod, textButtonMethod} = this.state;\r\n\r\n        return (\r\n            <Panel id={id}>\r\n                <PanelHeader\r\n                    >\r\n                        VK Bridge\r\n                    </PanelHeader>\r\n                <Group>\r\n                    <FormItem top=\"Выберите событие\">\r\n                        <Select\r\n                            name='section'\r\n                            placeholder=\"Не выбран\"\r\n                            options={method.map((el, index) => ({\r\n                                label: el.name,\r\n                                value: index,\r\n                            }))}\r\n                            renderOption={({ option, ...restProps }) => (\r\n                                <CustomSelectOption\r\n                                    {...restProps}\r\n                                />\r\n                            )}\r\n                            onChange={this.onChange}\r\n                            searchable={true}\r\n                        />\r\n                    </FormItem>\r\n                    {section !== null &&\r\n                        <>\r\n                            <MiniInfoCell\r\n                                before={<Icon20HelpOutline/>}\r\n                                textWrap='full'\r\n                            >\r\n                                {method[section].description}\r\n                            </MiniInfoCell>\r\n\r\n                        \r\n                            {method[section].params.length === 0 ?\r\n                                <Placeholder className='fixPaddingPlaceholder'>\r\n                                    У данного события отсутствуют параметры.\r\n                                </Placeholder> :  // eslint-disable-next-line\r\n                                method[section].params.map((el, index) => {\r\n                                    if (el.type === 'string' || el.type === 'string[]') {\r\n                                        return(\r\n                                            <FormItem top={`${el.param} (${el.type})`} bottom={el.description}>\r\n                                                <Textarea\r\n                                                    name={el.param}\r\n                                                    value={param[index]}\r\n                                                    onChange={(e) => this.onChange(e, index)}\r\n                                                    placeholder='Введите параметр...'\r\n                                                />\r\n                                            </FormItem>\r\n                                        )\r\n                                    } else if (el.type === 'object') {\r\n                                        return(\r\n                                            <FormItem top={`${el.param} (${el.type})`} bottom={el.description}>\r\n                                                <Textarea\r\n                                                    name={el.param}\r\n                                                    value={param[index]}\r\n                                                    onChange={(e) => this.onChange(e, index)}\r\n                                                    placeholder='Введите параметр...'\r\n                                                />\r\n                                            </FormItem>\r\n                                        )\r\n                                    } else if (el.type === 'integer') {\r\n                                        return(\r\n                                            <FormItem top={`${el.param} (${el.type})`} bottom={el.description}>\r\n                                                <Input\r\n                                                    name={el.param}\r\n                                                    value={param[index]}\r\n                                                    type='number'\r\n                                                    inputMode='decimal'\r\n                                                    onChange={(e) => this.onChange(e, index)}\r\n                                                    placeholder='Введите параметр...'\r\n                                                />\r\n                                            </FormItem>\r\n                                        )\r\n                                    } else if (el.type === 'boolean') {\r\n                                            return(\r\n                                                <FormItem top={`${el.param} (${el.type})`} bottom={el.description}>\r\n                                                    <Checkbox\r\n                                                        name={el.param}\r\n                                                        value={param[index]}\r\n                                                        onChange={(e) => this.actionCheckbox(index)}\r\n                                                        placeholder='Введите параметр...'\r\n                                                    >\r\n                                                        true\r\n                                                    </Checkbox>\r\n                                                </FormItem>\r\n                                            )\r\n                                    }\r\n                                })\r\n                            }\r\n\r\n                            <Div>\r\n                                <Button\r\n                                    size=\"l\"\r\n                                    stretched\r\n                                    mode=\"secondary\"\r\n                                    disabled={disabledButtonMethod}\r\n                                    onClick={() => {this.executeMethod(); this.setState({textButtonMethod: false, disabledButtonMethod: true})}}\r\n                                >\r\n                                    {textButtonMethod ? 'Вызвать' : 'Вызвано!'}\r\n                                </Button>\r\n                            </Div>\r\n                    </>}\r\n                </Group>\r\n\r\n                {use_method &&\r\n                    <>\r\n                        <Group header={<Header mode='secondary'>Результат</Header>}>\r\n                            <Card>\r\n                                <Div>\r\n                                    <div className='scroll' id='response'/>\r\n                                </Div>\r\n\r\n                            </Card>\r\n                        </Group>\r\n                        <Div>\r\n                            <Button\r\n                                size=\"l\"\r\n                                stretched\r\n                                mode=\"secondary\"\r\n                                onClick={() => bridge.send('VKWebAppCopyText', {text: JSON.stringify(window.responseAPI)})}\r\n                            >\r\n                                Скопировать\r\n                            </Button>\r\n                        </Div>\r\n                    </>\r\n                }\r\n            </Panel>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    setPage,\r\n    openModal\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(HomePanelBridge);\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport {closePopout, goBack, openModal, openPopout, setPage} from \"../../store/router/actions\";\r\n\r\nimport {\r\n    PanelHeader,\r\n    Panel,\r\n    Group,\r\n    Header,\r\n    SimpleCell,\r\n    Avatar,\r\n    Footer,\r\n    Link,\r\n    Div,\r\n    Button,\r\n} from \"@vkontakte/vkui\";\r\nimport {\r\n    Icon16LikeOutline,\r\n    Icon20BugOutline,\r\n    Icon28ArrowUpCircleOutline,\r\n    Icon28BookOutline,\r\n    Icon28FavoriteOutline,\r\n    Icon28KeyOutline,\r\n    Icon28MessagesOutline, Icon28MoonOutline,\r\n    Icon28ShareOutline,\r\n    Icon28SmartphoneOutline, Icon28SunOutline,\r\n} from '@vkontakte/icons';\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\n\r\nclass HomePanelSettings extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isDesktop: false,\r\n            Platform: 'android'\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        let parsedUrl = new URL(window.location.href)\r\n        if (parsedUrl.searchParams.get('vk_platform') === 'desktop_web') {\r\n            this.setState({\r\n                isDesktop: true,\r\n                Platform: 'vkcom'\r\n            })\r\n        }\r\n        console.log('Платформа ' + this.state.Platform)\r\n    }\r\n\r\n    render() {\r\n        const {id, scheme} = this.props;\r\n        const {Platform} = this.state;\r\n\r\n        return (\r\n            <Panel id={id}>\r\n                <PanelHeader>Настройки</PanelHeader>\r\n\r\n                <Group header={<Header mode=\"secondary\">Прочее</Header>}>\r\n                    <SimpleCell\r\n                        className='btn_settings'\r\n                        before={\r\n                            <Avatar\r\n                                shadow={false}\r\n                                size={43}\r\n                            >\r\n                                <Icon28FavoriteOutline fill=\"#2B8FFE\"/>\r\n                            </Avatar>\r\n                        }\r\n                        onClick={() => bridge.send(\"VKWebAppAddToFavorites\")}\r\n                    >\r\n                        Добавить в избранное\r\n                    </SimpleCell>\r\n\r\n                    {Platform === 'android' &&\r\n                        <SimpleCell\r\n                            className='btn_settings'\r\n                            before={\r\n                                <Avatar\r\n                                    shadow={false}\r\n                                    size={43}\r\n                                >\r\n                                    <Icon28SmartphoneOutline fill=\"#2B8FFE\"/>\r\n                                </Avatar>\r\n                            }\r\n                            onClick={() => bridge.send(\"VKWebAppAddToHomeScreen\")}\r\n                        >\r\n                            Добавить на главный экран\r\n                        </SimpleCell>\r\n                    }\r\n\r\n                    <SimpleCell\r\n                        className='btn_settings'\r\n                        before={\r\n                            <Avatar\r\n                                shadow={false}\r\n                                size={43}\r\n                            >\r\n                                <Icon28MessagesOutline fill=\"#2B8FFE\"/>\r\n                            </Avatar>\r\n                        }\r\n                        href=\"https://vk.me/vkapisandbox\"\r\n                        target='_blank'\r\n                    >\r\n                        Поддержка\r\n                    </SimpleCell>\r\n\r\n                    <SimpleCell\r\n                        className='btn_settings'\r\n                        before={\r\n                            <Avatar\r\n                                shadow={false}\r\n                                size={43}\r\n                            >\r\n                                <Icon28ShareOutline fill=\"#2B8FFE\"/>\r\n                            </Avatar>\r\n                        }\r\n                        onClick={() => bridge.send(\r\n                            \"VKWebAppShowWallPostBox\",\r\n                            {\r\n                                message: 'Тестирую методы VK API и VK Bidge в этом приложении👇',\r\n                                attachments: 'https://vk.com/app7976662'\r\n                            }\r\n                        )}\r\n                    >\r\n                        Поделиться приложением\r\n                    </SimpleCell>\r\n                </Group>\r\n\r\n                <Group header={<Header mode='secondary'>Полезные ссылки</Header> }>\r\n                    <SimpleCell\r\n                        className='btn_settings'\r\n                        before={\r\n                            <Avatar\r\n                                shadow={false}\r\n                                size={43}\r\n                            >\r\n                                <Icon28ArrowUpCircleOutline fill=\"#2B8FFE\"/>\r\n                            </Avatar>\r\n                        }\r\n                        href=\"https://dev.vk.com/reference\"\r\n                        target='_blank'\r\n                    >\r\n                        Документация VK API\r\n                    </SimpleCell>\r\n                    <SimpleCell\r\n                        className='btn_settings'\r\n                        before={\r\n                            <Avatar\r\n                                shadow={false}\r\n                                size={43}\r\n                            >\r\n                                <Icon28BookOutline fill=\"#2B8FFE\"/>\r\n                            </Avatar>\r\n                        }\r\n                        href=\"https://dev.vk.com/bridge/getting-started\"\r\n                        target='_blank'\r\n                    >\r\n                        Документация VK Bridge\r\n                    </SimpleCell>\r\n                    <SimpleCell\r\n                        before={\r\n                            <Avatar\r\n                                shadow={false}\r\n                                size={43}\r\n                            >\r\n                                <Icon28KeyOutline fill=\"#2B8FFE\"/>\r\n                            </Avatar>\r\n                        }\r\n                        href=\"https://dev.vk.com/api/access-token/getting-started\"\r\n                        target='_blank'\r\n                    >\r\n                        Про ключи доступа\r\n                    </SimpleCell>\r\n                </Group>\r\n\r\n                <Footer>\r\n                    <Div className=\"podpis\">\r\n                        От <Link href=\"https://vk.com/kuz_s\" target=\"_blank\">@kuz_s</Link> и <Link href=\"https://vk.com/olejii\" target=\"_blank\">@olejii</Link>\r\n                    </Div>\r\n                    <Div className=\"podpis\">\r\n                        Сделано с <Icon16LikeOutline width={16} height={16}/> и <Icon20BugOutline width={16} height={16}/>\r\n                    </Div>\r\n                </Footer>\r\n            </Panel>\r\n            );\r\n\r\n        };\r\n\r\n    }\r\n\r\nconst mapDispatchToProps = {\r\n    setPage,\r\n    goBack,\r\n    openPopout,\r\n    closePopout,\r\n    openModal\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(HomePanelSettings);","import React from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport {openModal} from \"../../store/router/actions\";\r\n\r\nimport {\r\n    List,\r\n    ModalPage, \r\n    ModalPageHeader, \r\n    PanelHeaderButton, \r\n    withPlatform, \r\n    IOS,\r\n    CellButton,\r\n} from \"@vkontakte/vkui\";\r\nimport {Icon24Dismiss, Icon24Cancel, Icon28MoonOutline, Icon28SunOutline, Icon28SettingsOutline} from '@vkontakte/icons'\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\n\r\nclass HomeBotsListModal extends React.Component {\r\n\r\n    render() {\r\n        const {id, onClose, platform, changeScheme} = this.props;\r\n\r\n        return (\r\n            <ModalPage\r\n                id={id}\r\n                header={\r\n                    <ModalPageHeader\r\n                        left={platform !== IOS &&\r\n                        <PanelHeaderButton onClick={onClose}><Icon24Cancel/></PanelHeaderButton>}\r\n                        right={platform === IOS &&\r\n                        <PanelHeaderButton onClick={onClose}><Icon24Dismiss/></PanelHeaderButton>}\r\n                    >\r\n                        Тема\r\n                    </ModalPageHeader>\r\n                }\r\n                onClose={onClose}\r\n                settlingHeight={100}\r\n            >\r\n                <List>\r\n                    <CellButton activeEffectDelay={3} before={<Icon28SettingsOutline/>} onClick={() => changeScheme('system')}>Системная</CellButton>\r\n\r\n                    <CellButton activeEffectDelay={3} before={<Icon28MoonOutline/>} onClick={() => changeScheme('client_dark')}>Тёмная</CellButton>\r\n\r\n                    <CellButton activeEffectDelay={3} before={<Icon28SunOutline/>} onClick={() => changeScheme('client_light')}>Светлая</CellButton>\r\n                </List>\r\n            </ModalPage>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    openModal\r\n};\r\n\r\nexport default withPlatform(connect(null, mapDispatchToProps)(HomeBotsListModal));\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport {\r\n    ModalPage,\r\n    ModalPageHeader,\r\n    PanelHeaderButton,\r\n    withPlatform,\r\n    IOS,\r\n    Card,\r\n    Div,\r\n    Button\r\n} from \"@vkontakte/vkui\";\r\nimport { \r\n    Icon24Dismiss, \r\n    Icon24Cancel \r\n} from '@vkontakte/icons';\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport renderjson from 'renderjson';\r\n\r\nclass ViewResponseAPIModal extends React.Component {\r\n\r\n    state = {\r\n        textButton: true,\r\n        disabledButton: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        renderjson.set_show_to_level(30)\r\n        document.getElementById('responseAPI').appendChild(renderjson(window.responseAPI))\r\n        //this.output(this.syntaxHighlight(window.responseAPI))\r\n        //document.getElementById('responseAPI').appendChild(renderjson(window.responseAPI))\r\n    }\r\n\r\n    output(inp) {\r\n        document.getElementById('responseAPI').innerHTML = inp;\r\n    }\r\n\r\n    async copy() {\r\n        await bridge.send('VKWebAppCopyText', {text: JSON.stringify(window.responseAPI)})\r\n\r\n        this.setState({\r\n            textButton: false,\r\n            disabledButton: true\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {id, onClose, platform} = this.props;\r\n        const {textButton, disabledButton} = this.state\r\n\r\n        return (\r\n            <ModalPage\r\n                id={id}\r\n                header={\r\n                    <ModalPageHeader\r\n                        left={platform !== IOS &&\r\n                        <PanelHeaderButton onClick={onClose}><Icon24Cancel/></PanelHeaderButton>}\r\n                        right={platform === IOS &&\r\n                        <PanelHeaderButton onClick={onClose}><Icon24Dismiss/></PanelHeaderButton>}\r\n                    >\r\n                        Результат\r\n                    </ModalPageHeader>\r\n                }\r\n                onClose={onClose}\r\n                settlingHeight={100}\r\n            >\r\n                <Card>\r\n                    <div id='responseAPI'></div>\r\n                </Card>\r\n\r\n                <Div>\r\n                    <Button \r\n                        size=\"l\" \r\n                        stretched\r\n                        mode=\"secondary\" \r\n                        disabled={disabledButton}\r\n                        onClick={() => this.copy()}\r\n                    >\r\n                        {textButton ? 'Скопировать' : 'Успешно!'}\r\n                    </Button>\r\n                </Div>\r\n            </ModalPage>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default withPlatform(connect()(ViewResponseAPIModal));\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport {\r\n    ModalPage,\r\n    ModalPageHeader,\r\n    PanelHeaderButton,\r\n    withPlatform,\r\n    IOS,\r\n    Card,\r\n    Div,\r\n    Button,\r\n} from \"@vkontakte/vkui\";\r\nimport {\r\n    Icon24Dismiss,\r\n    Icon24Cancel\r\n} from '@vkontakte/icons';\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport renderjson from \"renderjson\";\r\n\r\nclass ViewResponseGetToken extends React.Component {\r\n\r\n    state = {\r\n        textButton: true,\r\n        disabledButton: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        renderjson.set_show_to_level(30)\r\n        document.getElementById('responseTokenAccessToken').appendChild(renderjson(window.responseToken['access_token']))\r\n        document.getElementById('responseTokenScope').appendChild(renderjson(window.responseToken['scope']))\r\n\r\n    }\r\n\r\n    async copy() {\r\n        await bridge.send('VKWebAppCopyText', {text: JSON.stringify(window.responseToken['access_token'])})\r\n\r\n        this.setState({\r\n            textButton: false,\r\n            disabledButton: true\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {id, onClose, platform} = this.props;\r\n        const {textButton, disabledButton} = this.state\r\n\r\n        return (\r\n            <ModalPage\r\n                id={id}\r\n                header={\r\n                    <ModalPageHeader\r\n                        left={platform !== IOS &&\r\n                        <PanelHeaderButton onClick={onClose}><Icon24Cancel/></PanelHeaderButton>}\r\n                        right={platform === IOS &&\r\n                        <PanelHeaderButton onClick={onClose}><Icon24Dismiss/></PanelHeaderButton>}\r\n                    >\r\n                        Ключ Доступа\r\n                    </ModalPageHeader>\r\n                }\r\n                onClose={onClose}\r\n                settlingHeight={200}\r\n            >\r\n                <Card>\r\n                    <Div>\r\n                        Ваш токен:\r\n                        <div className='scroll' id='responseTokenAccessToken'/>\r\n                        Права доступа токена:\r\n                        <div className='scroll' id='responseTokenScope'/>\r\n                    </Div>\r\n                </Card>\r\n\r\n                <Div>\r\n                    <Button\r\n                        size=\"l\"\r\n                        stretched\r\n                        mode=\"secondary\"\r\n                        disabled={disabledButton}\r\n                        onClick={() => this.copy()}\r\n                    >\r\n                        {textButton ? 'Скопировать' : 'Успешно!'}\r\n                    </Button>\r\n                </Div>\r\n            </ModalPage>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default withPlatform(connect()(ViewResponseGetToken));\r\n","import React from \"react\";\r\nimport {connect} from 'react-redux';\r\n\r\nimport {setStory} from \"../store/router/actions\";\r\nimport {store} from \"../../index\";\r\n\r\nimport {\r\n    Panel,\r\n    Div,\r\n    Button,\r\n    Gallery,\r\n    FixedLayout,\r\n    Placeholder,\r\n    Group,\r\n} from \"@vkontakte/vkui\";\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport {Icon20HelpOutline, Icon28CarOutline, Icon56GestureOutline} from \"@vkontakte/icons\";\r\n\r\nclass Intro extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            slideIndex: 0,\r\n            isDesktop: false\r\n        };\r\n\r\n    }\r\n\r\n    setUserSeenIntro() {\r\n        let {panelsHistory} = this.props;\r\n\r\n        bridge.send(\"VKWebAppStorageSet\", {key: 'userSeenIntro', value: 'true'})\r\n        delete panelsHistory.Intro\r\n        store.dispatch(setStory('home', 'base'))\r\n    };\r\n\r\n    async componentDidMount() {\r\n        let parsedUrl = new URL(window.location.href)\r\n        if (parsedUrl.searchParams.get('vk_platform') === 'desktop_web') {\r\n            this.setState({\r\n                isDesktop: true\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {id, isDesktop} = this.props;\r\n        const {slideIndex} = this.state;\r\n\r\n        return (\r\n            <Panel id={id}>\r\n                <FixedLayout vertical='top' className='fixOnbordingFixedLayout'>\r\n                    <Group>\r\n                        <Div>\r\n                            <Gallery\r\n                                slideIndex={isDesktop && slideIndex}\r\n                                align=\"center\"\r\n                                style={{ height: '100%'}}\r\n                                bullets={isDesktop ? 'dark' : 'light'}\r\n                                isDraggable={!isDesktop}\r\n                            >\r\n                                <Placeholder\r\n                                    icon={<Icon56GestureOutline />}\r\n                                    header=\"Привет, это сервис VK API/VK Bridge Sandbox\"\r\n                                    action={isDesktop && <Button onClick={() => this.setState({slideIndex: (slideIndex + 1) % 4})} size=\"m\">Дальше</Button>}\r\n                                >\r\n                                    Здесь ты можешь легко и быстро протестировать любой метод из <b>VK API</b> или <b>VK Bridge</b>.\r\n                                </Placeholder>\r\n\r\n                                <Placeholder\r\n                                    icon={<Icon20HelpOutline width={56} height={56}/>}\r\n                                    header=\"Что и как\"\r\n                                    action={isDesktop &&\r\n                                        <>\r\n                                            <Button className='btn_onboarding' onClick={() => this.setState({slideIndex: (slideIndex - 1) % 4})} size=\"m\">Назад</Button>\r\n                                            <Button className='btn_onboarding' onClick={() => this.setState({slideIndex: (slideIndex + 1) % 4})} size=\"m\">Дальше</Button>\r\n                                        </>\r\n                                    }\r\n\r\n                                >\r\n                                    • Выбираешь нужный тебе метод <b>VK API</b> или <b>VK Bridge</b> на соответствующей панели. <br/><br/>\r\n                                    • Вводишь необходимые параметры и получаешь ответ.\r\n                                </Placeholder>\r\n\r\n                                <Placeholder\r\n                                    icon={<Icon20HelpOutline width={56} height={56}/>}\r\n                                    header=\"А что если у меня нет токена?\"\r\n                                    action={isDesktop &&\r\n                                        <>\r\n                                            <Button className='btn_onboarding' onClick={() => this.setState({slideIndex: (slideIndex - 1) % 4})} size=\"m\">Назад</Button>\r\n                                            <Button className='btn_onboarding' onClick={() => this.setState({slideIndex: (slideIndex + 1) % 4})} size=\"m\">Дальше</Button>\r\n                                        </>\r\n                                    }\r\n                                >\r\n                                    Ты можешь получить его у нас.<br/> \r\n                                    Во время вызова метода выбери нужные права доступа для токена и нажми \"Получить токен\"\r\n                                </Placeholder>\r\n\r\n                                <Placeholder\r\n                                    icon={<Icon28CarOutline width={56} height={56}/>}\r\n                                    header='Всё понятно?'\r\n                                    action={isDesktop ?\r\n                                        <>\r\n                                            <Button className='btn_onboarding' onClick={() => this.setState({slideIndex: (slideIndex - 1) % 4})} size=\"l\">Назад</Button>\r\n                                            <Button className='btn_onboarding' size='l' onClick={() => this.setUserSeenIntro()}>Поехали!</Button>\r\n                                        </> :\r\n                                        <Button className='btn_onboarding' size='l' onClick={() => this.setUserSeenIntro()}>Поехали!</Button>\r\n\r\n                                    }\r\n                                />\r\n                            </Gallery>\r\n                        </Div>\r\n                    </Group>\r\n                </FixedLayout>\r\n            </Panel>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      panelsHistory: state.router.panelsHistory\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = { setStory };\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Intro);","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {bindActionCreators} from 'redux'\r\nimport {goBack, closeModal, setStory} from \"./js/store/router/actions\";\r\nimport {getActivePanel} from \"./js/services/_functions\";\r\n\r\nimport {\r\n  Epic, \r\n  View, \r\n  Root, \r\n  Tabbar, \r\n  ModalRoot, \r\n  TabbarItem, \r\n  ConfigProvider,\r\n  AdaptivityProvider, \r\n  AppRoot,\r\n  platform,\r\n  VKCOM,\r\n  Cell,\r\n  SplitCol,\r\n  PanelHeader,\r\n  SplitLayout,\r\n  Panel,\r\n  Group\r\n} from \"@vkontakte/vkui\";\r\n\r\nimport {\r\n  Icon28ArrowUpCircleOutline,\r\n  Icon28BookOutline,\r\n  Icon28SettingsOutline\r\n} from '@vkontakte/icons';\r\n\r\nimport HomePanelBase from './js/panels/home/base';\r\nimport HomePanelPlaceholder from './js/panels/home/placeholder';\r\n\r\nimport HomePanelBridge from './js/panels/bridge/base';\r\n\r\nimport HomePanelSettings from \"./js/panels/settings/base\";\r\n\r\nimport HomeBotsListModal from './js/components/modals/HomeBotsListModal';\r\nimport ViewResponseAPIModal from './js/components/modals/viewResponseAPIModal';\r\n\r\nimport ViewResponseGetToken from \"./js/components/modals/viewResponseGetToken\";\r\n\r\nimport Intro from \"./js/panels/Intro\";\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      hasHeader: true,\r\n      isDesktop: false,\r\n      Platform: platform(),\r\n      scheme: 'light'\r\n    };\r\n\r\n    this.lastAndroidBackAction = 0;\r\n  }\r\n\r\n  async getAppScheme(platform) {\r\n    if (platform === 'vkcom') {\r\n      this.setState({scheme: 'vkcom_light'})\r\n    } else {\r\n      bridge.subscribe((e) => {\r\n        if (e.detail.type === 'VKWebAppUpdateConfig') {\r\n          let data = e.detail.data.scheme\r\n          this.setState({scheme: data})\r\n        }\r\n      })\r\n      let appScheme = await bridge.send(\"VKWebAppGetConfig\")\r\n        this.setState({scheme: appScheme.scheme})\r\n    }\r\n  }\r\n\r\n  async changeScheme(scheme) {\r\n    if (scheme === 'system') {\r\n      this.getAppScheme(platform)\r\n    }\r\n    else {\r\n      this.setState({scheme: scheme})\r\n      bridge.unsubscribe(() => 'VKWebAppUpdateConfig')\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const {goBack} = this.props;\r\n    this.getAppScheme(platform)\r\n\r\n    let parsedUrl = new URL(window.location.href)\r\n    if (parsedUrl.searchParams.get('vk_platform') === 'desktop_web') {\r\n      this.setState({ \r\n        isDesktop: true,\r\n        hasHeader: false,\r\n        Platform: VKCOM\r\n      })\r\n    }\r\n\r\n    window.onpopstate = () => {\r\n      let timeNow = +new Date();\r\n\r\n      if (timeNow - this.lastAndroidBackAction > 500) {\r\n        this.lastAndroidBackAction = timeNow;\r\n\r\n        goBack();\r\n      } else {\r\n        window.history.pushState(null, null);\r\n      }\r\n    };\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    const {activeView, activeStory, activePanel, scrollPosition} = this.props;\r\n\r\n    if (\r\n      prevProps.activeView !== activeView ||\r\n      prevProps.activePanel !== activePanel ||\r\n      prevProps.activeStory !== activeStory\r\n    ) {\r\n      let pageScrollPosition = scrollPosition[activeStory + \"_\" + activeView + \"_\" + activePanel] || 0;\r\n\r\n      window.scroll(0, pageScrollPosition);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {goBack, setStory, closeModal, popouts, activeView, activeStory, activeModals, panelsHistory} = this.props;\r\n    const { isDesktop, hasHeader, Platform } = this.state\r\n\r\n    let history = (panelsHistory[activeView] === undefined) ? [activeView] : panelsHistory[activeView];\r\n    let popout = (popouts[activeView] === undefined) ? null : popouts[activeView];\r\n    let activeModal = (activeModals[activeView] === undefined) ? null : activeModals[activeView];\r\n\r\n    const homeModals = (\r\n      <ModalRoot activeModal={activeModal}>\r\n        <HomeBotsListModal\r\n          id=\"scheme\"\r\n          onClose={() => closeModal()}\r\n          changeScheme={(scheme) => this.changeScheme(scheme)}\r\n        />\r\n        <ViewResponseAPIModal\r\n          id=\"viewResponse\"\r\n          onClose={() => closeModal()}\r\n        />\r\n        <ViewResponseGetToken\r\n          id=\"viewResponseToken\"\r\n          onClose={() => closeModal()}\r\n        />\r\n      </ModalRoot>\r\n    );\r\n\r\n    return (     \r\n      <ConfigProvider platform={Platform} isWebView={true} scheme={this.state.scheme}>\r\n        <AdaptivityProvider>\r\n          <AppRoot>\r\n            <SplitLayout\r\n              header={hasHeader && <PanelHeader separator={false} />}\r\n              style={{ justifyContent: \"center\" }}\r\n            >\r\n              <SplitCol\r\n                animate={!isDesktop}\r\n                spaced={isDesktop}\r\n                width={isDesktop ? (activeStory !== 'Intro' ? '560px' : '1000px') : '100%'}\r\n                maxWidth={isDesktop ? (activeStory !== 'Intro' ? '560px' : '1000px') : '100%'}\r\n              >   \r\n                <Epic activeStory={activeStory} tabbar={ !isDesktop && activeStory !== 'Intro' && \r\n                  <Tabbar>\r\n                    <TabbarItem\r\n                      onClick={() => setStory('home', 'base')}\r\n                      selected={activeStory === 'home'}\r\n                      text='VK API'\r\n                    ><Icon28ArrowUpCircleOutline/></TabbarItem>\r\n                    <TabbarItem\r\n                      onClick={() => setStory('bridge', 'base')}\r\n                      selected={activeStory === 'bridge'}\r\n                      text='VK Bridge'\r\n                    ><Icon28BookOutline/></TabbarItem>\r\n                    <TabbarItem\r\n                        onClick={() => setStory('settings', 'base')}\r\n                        selected={activeStory === 'settings'}\r\n                        text='Настройки'\r\n                    ><Icon28SettingsOutline/></TabbarItem>\r\n                  </Tabbar>\r\n                }>\r\n                  <Root id=\"home\" activeView={activeView} popout={popout}>\r\n                    <View\r\n                      id=\"home\"\r\n                      modal={homeModals}\r\n                      activePanel={getActivePanel(\"home\")}\r\n                      history={history}\r\n                      onSwipeBack={() => goBack()}\r\n                    >\r\n                      <HomePanelBase id=\"base\"/>\r\n                      <HomePanelPlaceholder id=\"placeholder\"/>\r\n                    </View>\r\n                  </Root>\r\n                  <Root id=\"bridge\" activeView={activeView} popout={popout}>\r\n                    <View\r\n                      id=\"bridge\"\r\n                      modal={homeModals}\r\n                      activePanel={getActivePanel(\"bridge\")}\r\n                      history={history}\r\n                      onSwipeBack={() => goBack()}\r\n                    >\r\n                      <HomePanelBridge id=\"base\"/>\r\n                      <HomePanelPlaceholder id=\"placeholder\"/>\r\n                    </View>\r\n                  </Root>\r\n                  <Root id=\"settings\" activeView={activeView} popout={popout}>\r\n                    <View\r\n                      id=\"settings\"\r\n                      modal={homeModals}\r\n                      activePanel={getActivePanel(\"settings\")}\r\n                      history={history}\r\n                      onSwipeBack={() => goBack()}\r\n                    >\r\n                      <HomePanelSettings id=\"base\" scheme={this.state.scheme}/>\r\n                    </View>\r\n                  </Root>\r\n                  <Root id=\"Intro\" activeView={activeView} popout={popout}>\r\n                    <View\r\n                      id=\"Intro\"\r\n                      modal={homeModals}\r\n                      activePanel={getActivePanel(\"Intro\")}\r\n                      history={history}\r\n                      onSwipeBack={() => goBack()}\r\n                    >\r\n                      <Intro id=\"base\" isDesktop={isDesktop}/>\r\n                    </View>\r\n                  </Root>\r\n                </Epic>\r\n              </SplitCol>\r\n\r\n              {isDesktop && activeStory !== 'Intro' && (\r\n                <SplitCol fixed width='280px' maxWidth='280px'>\r\n                  <Panel id='menuDesktop'>\r\n                    {hasHeader && <PanelHeader/>}\r\n                    <Group>\r\n                      <Cell\r\n                        onClick={() => setStory('home', 'base')}\r\n                        disabled={activeStory === 'home'}\r\n                        before={<Icon28ArrowUpCircleOutline fill=\"#2B8FFE\"/>}\r\n                        className={activeStory === 'home' ? 'activeCellMenu' : ''}\r\n                      >\r\n                        VK API\r\n                      </Cell>\r\n                      <Cell\r\n                        onClick={() => setStory('bridge', 'base')}\r\n                        disabled={activeStory === 'bridge'}\r\n                        before={<Icon28BookOutline fill=\"#2B8FFE\"/>}\r\n                        className={activeStory === 'bridge' ? 'activeCellMenu' : ''}\r\n                      >\r\n                        VK Bridge\r\n                      </Cell>\r\n                      <Cell\r\n                          onClick={() => setStory('settings', 'base')}\r\n                          disabled={activeStory === 'settings'}\r\n                          before={<Icon28SettingsOutline fill=\"#2B8FFE\"/>}\r\n                          className={activeStory === 'settings' ? 'activeCellMenu' : ''}\r\n                      >\r\n                        Настройки\r\n                      </Cell>\r\n                    </Group>\r\n                  </Panel>\r\n                </SplitCol>\r\n              )}\r\n              \r\n            </SplitLayout>\r\n          </AppRoot>\r\n        </AdaptivityProvider>\r\n      </ConfigProvider>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    activeView: state.router.activeView,\r\n    activeStory: state.router.activeStory,\r\n    panelsHistory: state.router.panelsHistory,\r\n    activeModals: state.router.activeModals,\r\n    popouts: state.router.popouts,\r\n    scrollPosition: state.router.scrollPosition,\r\n  };\r\n};\r\n\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    dispatch,\r\n    ...bindActionCreators({setStory, goBack, closeModal}, dispatch)\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","import 'core-js/es6/map';\r\nimport 'core-js/es6/set';\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport {applyMiddleware, createStore} from \"redux\";\r\nimport thunk from 'redux-thunk';\r\nimport {Provider} from 'react-redux';\r\nimport rootReducer from './js/store/reducers';\r\nimport {composeWithDevTools} from 'redux-devtools-extension';\r\n\r\nimport {setStory} from \"./js/store/router/actions\";\r\n\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport './css/main.css';\r\nimport bridge from '@vkontakte/vk-bridge';\r\n\r\nimport App from './App';\r\n\r\nexport const store = createStore(rootReducer, composeWithDevTools(\r\n    applyMiddleware(thunk),\r\n));\r\n\r\nasync function startApp() {\r\n    let userSeenIntroCheck = await bridge.send(\"VKWebAppStorageGet\", {keys: ['userSeenIntro']})\r\n\r\n    if (userSeenIntroCheck.keys[0].value === '') {\r\n        store.dispatch(setStory('Intro', 'base'))\r\n    } else {\r\n        store.dispatch(setStory('home', 'base'));\r\n    }\r\n\r\n    ReactDOM.render(\r\n        <Provider store={store}>\r\n            <App/>\r\n        </Provider>,\r\n        document.getElementById('root')\r\n    );\r\n    \r\n    bridge.send('VKWebAppInit', {})\r\n};\r\n\r\n\r\nstartApp()"],"sourceRoot":""}